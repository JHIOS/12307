
id __cdecl -[TAHighlightRow init](struct TAHighlightRow *self, SEL);
id __cdecl -[TAHighlightRow cellForTableView:indexPath:](struct TAHighlightRow *self, SEL, id, id);
void __fastcall sub_C170(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_C1E8(int a1, int a2);
void __fastcall sub_C204(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[TAHighlightRow cellClass](struct TAHighlightRow *self, SEL);
id __cdecl +[TAOrderOperationRow attributes](struct TAOrderOperationRow_meta *self, SEL);
id __cdecl -[TAOrderOperationRow cellForTableView:indexPath:](struct TAOrderOperationRow *self, SEL, id, id);
void __fastcall sub_C944(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_C9DC(int a1, int a2);
void __fastcall sub_C9F8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_CA14(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_CA8C(int a1, int a2);
void __fastcall sub_CAA8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_CAC4(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_CB3C(int a1, int a2);
void __fastcall sub_CB58(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[TAOrderOperationRow cellClass](struct TAOrderOperationRow *self, SEL);
id __cdecl -[TAOrderOperationRow refund](struct TAOrderOperationRow *self, SEL);
void __cdecl -[TAOrderOperationRow setRefund:](struct TAOrderOperationRow *self, SEL, id);
id __cdecl -[TAOrderOperationRow resign](struct TAOrderOperationRow *self, SEL);
void __cdecl -[TAOrderOperationRow setResign:](struct TAOrderOperationRow *self, SEL, id);
id __cdecl -[TAOrderOperationRow changeTS](struct TAOrderOperationRow *self, SEL);
void __cdecl -[TAOrderOperationRow setChangeTS:](struct TAOrderOperationRow *self, SEL, id);
id __cdecl -[TAOrderOperationRow refundImageViewText](struct TAOrderOperationRow *self, SEL);
void __cdecl -[TAOrderOperationRow setRefundImageViewText:](struct TAOrderOperationRow *self, SEL, id);
id __cdecl -[TAOrderOperationRow resignImageViewText](struct TAOrderOperationRow *self, SEL);
void __cdecl -[TAOrderOperationRow setResignImageViewText:](struct TAOrderOperationRow *self, SEL, id);
id __cdecl -[TAOrderOperationRow changeTSImageViewText](struct TAOrderOperationRow *self, SEL);
void __cdecl -[TAOrderOperationRow setChangeTSImageViewText:](struct TAOrderOperationRow *self, SEL, id);
char __cdecl -[TAOrderOperationRow resignable](struct TAOrderOperationRow *self, SEL);
void __cdecl -[TAOrderOperationRow setResignable:](struct TAOrderOperationRow *self, SEL, char);
char __cdecl -[TAOrderOperationRow refundable](struct TAOrderOperationRow *self, SEL);
void __cdecl -[TAOrderOperationRow setRefundable:](struct TAOrderOperationRow *self, SEL, char);
char __cdecl -[TAOrderOperationRow changeTSable](struct TAOrderOperationRow *self, SEL);
void __cdecl -[TAOrderOperationRow setChangeTSable:](struct TAOrderOperationRow *self, SEL, char);
void __cdecl -[TAOrderOperationRow .cxx_destruct](struct TAOrderOperationRow *self, SEL);
void __cdecl -[TATrainRow update:](struct TATrainRow *self, SEL, id);
id __cdecl +[TATrainRow attributes](struct TATrainRow_meta *self, SEL);
id __cdecl -[TATrainRow cellForTableView:indexPath:](struct TATrainRow *self, SEL, id, id);
id __cdecl -[TATrainRow cellClass](struct TATrainRow *self, SEL);
id __cdecl -[TATrainRow codeText](struct TATrainRow *self, SEL);
void __cdecl -[TATrainRow setCodeText:](struct TATrainRow *self, SEL, id);
id __cdecl -[TATrainRow durationText](struct TATrainRow *self, SEL);
void __cdecl -[TATrainRow setDurationText:](struct TATrainRow *self, SEL, id);
id __cdecl -[TATrainRow departTimeText](struct TATrainRow *self, SEL);
void __cdecl -[TATrainRow setDepartTimeText:](struct TATrainRow *self, SEL, id);
id __cdecl -[TATrainRow arrivalTimeText](struct TATrainRow *self, SEL);
void __cdecl -[TATrainRow setArrivalTimeText:](struct TATrainRow *self, SEL, id);
id __cdecl -[TATrainRow departStationText](struct TATrainRow *self, SEL);
void __cdecl -[TATrainRow setDepartStationText:](struct TATrainRow *self, SEL, id);
id __cdecl -[TATrainRow arrivalStationText](struct TATrainRow *self, SEL);
void __cdecl -[TATrainRow setArrivalStationText:](struct TATrainRow *self, SEL, id);
id __cdecl -[TATrainRow seats](struct TATrainRow *self, SEL);
void __cdecl -[TATrainRow setSeats:](struct TATrainRow *self, SEL, id);
id __cdecl -[TATrainRow departStationImageViewText](struct TATrainRow *self, SEL);
void __cdecl -[TATrainRow setDepartStationImageViewText:](struct TATrainRow *self, SEL, id);
id __cdecl -[TATrainRow arrivalStationImageViewText](struct TATrainRow *self, SEL);
void __cdecl -[TATrainRow setArrivalStationImageViewText:](struct TATrainRow *self, SEL, id);
id __cdecl -[TATrainRow timeImageViewText](struct TATrainRow *self, SEL);
void __cdecl -[TATrainRow setTimeImageViewText:](struct TATrainRow *self, SEL, id);
id __cdecl -[TATrainRow lowestPriceText](struct TATrainRow *self, SEL);
void __cdecl -[TATrainRow setLowestPriceText:](struct TATrainRow *self, SEL, id);
char __cdecl -[TATrainRow passDepart](struct TATrainRow *self, SEL);
void __cdecl -[TATrainRow setPassDepart:](struct TATrainRow *self, SEL, char);
char __cdecl -[TATrainRow passArrival](struct TATrainRow *self, SEL);
void __cdecl -[TATrainRow setPassArrival:](struct TATrainRow *self, SEL, char);
char __cdecl -[TATrainRow displayPrice](struct TATrainRow *self, SEL);
void __cdecl -[TATrainRow setDisplayPrice:](struct TATrainRow *self, SEL, char);
void __cdecl -[TATrainRow .cxx_destruct](struct TATrainRow *self, SEL);
void __cdecl -[TAOrderPassengerRow update:](struct TAOrderPassengerRow *self, SEL, id);
id __cdecl +[TAOrderPassengerRow attributes](struct TAOrderPassengerRow_meta *self, SEL);
id __cdecl -[TAOrderPassengerRow cellForTableView:indexPath:](struct TAOrderPassengerRow *self, SEL, id, id);
id __cdecl -[TAOrderPassengerRow cellClass](struct TAOrderPassengerRow *self, SEL);
id __cdecl -[TAOrderPassengerRow nameText](struct TAOrderPassengerRow *self, SEL);
void __cdecl -[TAOrderPassengerRow setNameText:](struct TAOrderPassengerRow *self, SEL, id);
id __cdecl -[TAOrderPassengerRow seatNoText](struct TAOrderPassengerRow *self, SEL);
void __cdecl -[TAOrderPassengerRow setSeatNoText:](struct TAOrderPassengerRow *self, SEL, id);
id __cdecl -[TAOrderPassengerRow priceText](struct TAOrderPassengerRow *self, SEL);
void __cdecl -[TAOrderPassengerRow setPriceText:](struct TAOrderPassengerRow *self, SEL, id);
id __cdecl -[TAOrderPassengerRow idNoText](struct TAOrderPassengerRow *self, SEL);
void __cdecl -[TAOrderPassengerRow setIdNoText:](struct TAOrderPassengerRow *self, SEL, id);
id __cdecl -[TAOrderPassengerRow statusNameText](struct TAOrderPassengerRow *self, SEL);
void __cdecl -[TAOrderPassengerRow setStatusNameText:](struct TAOrderPassengerRow *self, SEL, id);
id __cdecl -[TAOrderPassengerRow statusNameColor](struct TAOrderPassengerRow *self, SEL);
void __cdecl -[TAOrderPassengerRow setStatusNameColor:](struct TAOrderPassengerRow *self, SEL, id);
void __cdecl -[TAOrderPassengerRow .cxx_destruct](struct TAOrderPassengerRow *self, SEL);
int __fastcall sub_E87C(int a1, int a2, char *a3, int a4, int a5, int a6, int a7, char *a8, signed int a9, int a10, int a11, char *a12);
void __cdecl -[TAOrderTrainTableViewCell setSelected:animated:](struct TAOrderTrainTableViewCell *self, SEL, char, char);
id __cdecl -[TAOrderTrainTableViewCell toImageView](struct TAOrderTrainTableViewCell *self, SEL);
void __cdecl -[TAOrderTrainTableViewCell setToImageView:](struct TAOrderTrainTableViewCell *self, SEL, id);
id __cdecl -[TAOrderTrainTableViewCell departStationLabel](struct TAOrderTrainTableViewCell *self, SEL);
void __cdecl -[TAOrderTrainTableViewCell setDepartStationLabel:](struct TAOrderTrainTableViewCell *self, SEL, id);
id __cdecl -[TAOrderTrainTableViewCell arrivalStationLabel](struct TAOrderTrainTableViewCell *self, SEL);
void __cdecl -[TAOrderTrainTableViewCell setArrivalStationLabel:](struct TAOrderTrainTableViewCell *self, SEL, id);
id __cdecl -[TAOrderTrainTableViewCell codeLabel](struct TAOrderTrainTableViewCell *self, SEL);
void __cdecl -[TAOrderTrainTableViewCell setCodeLabel:](struct TAOrderTrainTableViewCell *self, SEL, id);
id __cdecl -[TAOrderTrainTableViewCell sequenceNoLabel](struct TAOrderTrainTableViewCell *self, SEL);
void __cdecl -[TAOrderTrainTableViewCell setSequenceNoLabel:](struct TAOrderTrainTableViewCell *self, SEL, id);
id __cdecl -[TAOrderTrainTableViewCell departTimeLabel](struct TAOrderTrainTableViewCell *self, SEL);
void __cdecl -[TAOrderTrainTableViewCell setDepartTimeLabel:](struct TAOrderTrainTableViewCell *self, SEL, id);
id __cdecl -[TAOrderTrainTableViewCell arrivalTimeLabel](struct TAOrderTrainTableViewCell *self, SEL);
void __cdecl -[TAOrderTrainTableViewCell setArrivalTimeLabel:](struct TAOrderTrainTableViewCell *self, SEL, id);
id __cdecl -[TAOrderTrainTableViewCell departDateLabel](struct TAOrderTrainTableViewCell *self, SEL);
void __cdecl -[TAOrderTrainTableViewCell setDepartDateLabel:](struct TAOrderTrainTableViewCell *self, SEL, id);
void __cdecl -[TAOrderTrainTableViewCell .cxx_destruct](struct TAOrderTrainTableViewCell *self, SEL);
void __cdecl -[TAHighlightTableViewCell setSelected:animated:](struct TAHighlightTableViewCell *self, SEL, char, char);
void __cdecl -[TAHighlightTableViewCell action:](struct TAHighlightTableViewCell *self, SEL, id);
id __cdecl -[TAHighlightTableViewCell button](struct TAHighlightTableViewCell *self, SEL);
void __cdecl -[TAHighlightTableViewCell setButton:](struct TAHighlightTableViewCell *self, SEL, id);
id __cdecl -[TAHighlightTableViewCell action](struct TAHighlightTableViewCell *self, SEL);
void __cdecl -[TAHighlightTableViewCell setAction:](struct TAHighlightTableViewCell *self, SEL, id);
void __cdecl -[TAHighlightTableViewCell .cxx_destruct](struct TAHighlightTableViewCell *self, SEL);
id __cdecl -[TARotateView lineColor](struct TARotateView *self, SEL);
float __cdecl -[TARotateView lineWidth](struct TARotateView *self, SEL);
float __cdecl -[TARotateView persentage](struct TARotateView *self, SEL);
void __cdecl -[TARotateView ringWithColor](struct TARotateView *self, SEL);
void __cdecl -[TARotateView setupBlueMaskLayer](struct TARotateView *self, SEL);
void __cdecl -[TARotateView setupColorLayer](struct TARotateView *self, SEL);
void __cdecl -[TARotateView setupColorMaskLayer](struct TARotateView *self, SEL);
id __cdecl -[TARotateView generateMaskLayer](struct TARotateView *self, SEL);
void __cdecl -[TARotateView setPersentage:](struct TARotateView *self, SEL, float);
void __cdecl -[TARotateView setLineColor:](struct TARotateView *self, SEL, id);
void __cdecl -[TARotateView setLineWidth:](struct TARotateView *self, SEL, float);
id __cdecl -[TARotateView colorMaskLayer](struct TARotateView *self, SEL);
void __cdecl -[TARotateView setColorMaskLayer:](struct TARotateView *self, SEL, id);
id __cdecl -[TARotateView colorLayer](struct TARotateView *self, SEL);
void __cdecl -[TARotateView setColorLayer:](struct TARotateView *self, SEL, id);
id __cdecl -[TARotateView blueMaskLayer](struct TARotateView *self, SEL);
void __cdecl -[TARotateView setBlueMaskLayer:](struct TARotateView *self, SEL, id);
void __cdecl -[TARotateView .cxx_destruct](struct TARotateView *self, SEL);
int __fastcall sub_F9CC(int a1, int a2);
void __cdecl +[BBIconFont(ZXIcon) load](struct BBIconFont_meta *self, SEL);
struct CGSize __cdecl +[TextHelper getSizeFromFont:AndText:AndViewSize:](struct TextHelper *self, SEL, id, id, struct CGSize);
struct CGSize __cdecl +[TextHelper getSizeFromFont:AndText:](struct TextHelper *self, SEL, id, id);
struct CGSize __cdecl +[TextHelper getSizeFromFont:AndText:AndMakeSizeBig:](struct TextHelper *self, SEL, id, id, float);
void __cdecl +[TextHelper changeLabel:SizeBecomeBig:WithPosition:](struct TextHelper *self, SEL, id, float, float);
void __cdecl +[TextHelper changeLabel:SizeBecomeBig:WithPosition:WithBackColor:](struct TextHelper *self, SEL, id, float, float, id);
void __cdecl +[TextHelper labelHandleWithModeWordWrap:](struct TextHelper *self, SEL, id);
void __cdecl +[TextHelper labelHandleWithModeWordWrap:WithWidth:](struct TextHelper *self, SEL, id, float);
float __cdecl +[TextHelper getFloatFromLabel:](struct TextHelper *self, SEL, id);
id __cdecl -[TAQueryRow cellForTableView:indexPath:](struct TAQueryRow *self, SEL, id, id);
void __fastcall sub_10DB8(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_10E60(int a1, int a2);
void __fastcall sub_10E7C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[TAQueryRow update:](struct TAQueryRow *self, SEL, id);
id __cdecl -[TAQueryRow cellClass](struct TAQueryRow *self, SEL);
void __cdecl -[TAOrderPassengerTableViewCell setSelected:animated:](struct TAOrderPassengerTableViewCell *self, SEL, char, char);
id __cdecl -[TAOrderPassengerTableViewCell nameLabel](struct TAOrderPassengerTableViewCell *self, SEL);
void __cdecl -[TAOrderPassengerTableViewCell setNameLabel:](struct TAOrderPassengerTableViewCell *self, SEL, id);
id __cdecl -[TAOrderPassengerTableViewCell seatNoLabel](struct TAOrderPassengerTableViewCell *self, SEL);
void __cdecl -[TAOrderPassengerTableViewCell setSeatNoLabel:](struct TAOrderPassengerTableViewCell *self, SEL, id);
id __cdecl -[TAOrderPassengerTableViewCell priceLabel](struct TAOrderPassengerTableViewCell *self, SEL);
void __cdecl -[TAOrderPassengerTableViewCell setPriceLabel:](struct TAOrderPassengerTableViewCell *self, SEL, id);
id __cdecl -[TAOrderPassengerTableViewCell idNoLabel](struct TAOrderPassengerTableViewCell *self, SEL);
void __cdecl -[TAOrderPassengerTableViewCell setIdNoLabel:](struct TAOrderPassengerTableViewCell *self, SEL, id);
id __cdecl -[TAOrderPassengerTableViewCell statusNameLabel](struct TAOrderPassengerTableViewCell *self, SEL);
void __cdecl -[TAOrderPassengerTableViewCell setStatusNameLabel:](struct TAOrderPassengerTableViewCell *self, SEL, id);
id __cdecl -[TAOrderPassengerTableViewCell statusNameLabelWidth](struct TAOrderPassengerTableViewCell *self, SEL);
void __cdecl -[TAOrderPassengerTableViewCell setStatusNameLabelWidth:](struct TAOrderPassengerTableViewCell *self, SEL, id);
void __cdecl -[TAOrderPassengerTableViewCell .cxx_destruct](struct TAOrderPassengerTableViewCell *self, SEL);
void __cdecl -[TAMyOrderRow update:](struct TAMyOrderRow *self, SEL, id);
id __cdecl +[TAMyOrderRow attributes](struct TAMyOrderRow_meta *self, SEL);
id __cdecl -[TAMyOrderRow cellForTableView:indexPath:](struct TAMyOrderRow *self, SEL, id, id);
id __cdecl -[TAMyOrderRow cellClass](struct TAMyOrderRow *self, SEL);
id __cdecl -[TAMyOrderRow codeText](struct TAMyOrderRow *self, SEL);
void __cdecl -[TAMyOrderRow setCodeText:](struct TAMyOrderRow *self, SEL, id);
id __cdecl -[TAMyOrderRow departStationText](struct TAMyOrderRow *self, SEL);
void __cdecl -[TAMyOrderRow setDepartStationText:](struct TAMyOrderRow *self, SEL, id);
id __cdecl -[TAMyOrderRow arrivalStationText](struct TAMyOrderRow *self, SEL);
void __cdecl -[TAMyOrderRow setArrivalStationText:](struct TAMyOrderRow *self, SEL, id);
id __cdecl -[TAMyOrderRow departTimeText](struct TAMyOrderRow *self, SEL);
void __cdecl -[TAMyOrderRow setDepartTimeText:](struct TAMyOrderRow *self, SEL, id);
id __cdecl -[TAMyOrderRow priceText](struct TAMyOrderRow *self, SEL);
void __cdecl -[TAMyOrderRow setPriceText:](struct TAMyOrderRow *self, SEL, id);
id __cdecl -[TAMyOrderRow passengerNamesText](struct TAMyOrderRow *self, SEL);
void __cdecl -[TAMyOrderRow setPassengerNamesText:](struct TAMyOrderRow *self, SEL, id);
id __cdecl -[TAMyOrderRow statusText](struct TAMyOrderRow *self, SEL);
void __cdecl -[TAMyOrderRow setStatusText:](struct TAMyOrderRow *self, SEL, id);
id __cdecl -[TAMyOrderRow statusColorText](struct TAMyOrderRow *self, SEL);
void __cdecl -[TAMyOrderRow setStatusColorText:](struct TAMyOrderRow *self, SEL, id);
id __cdecl -[TAMyOrderRow tickets](struct TAMyOrderRow *self, SEL);
void __cdecl -[TAMyOrderRow setTickets:](struct TAMyOrderRow *self, SEL, id);
void __cdecl -[TAMyOrderRow .cxx_destruct](struct TAMyOrderRow *self, SEL);
void __cdecl +[BBAction realm12306:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction checkCode12306:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction encode12306:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction decode12306:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction fullencode12306:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction decaptchaMobile12306:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction encrypt:handler:](struct BBAction *self, SEL, id, id);
id __cdecl +[BBAction encWithStr:index:secret:diff:](struct BBAction *self, SEL, id, int, id, int);
id __cdecl +[BBAction enc:key:](struct BBAction *self, SEL, id, id);
void __cdecl -[TAQueryTableViewCell awakeFromNib](struct TAQueryTableViewCell *self, SEL);
id __cdecl -[TAQueryTableViewCell buttonImageFromColor:size:cornerRadius:](struct TAQueryTableViewCell *self, SEL, id, struct CGSize, float);
void __cdecl -[TAQueryTableViewCell setSelected:animated:](struct TAQueryTableViewCell *self, SEL, char, char);
void __cdecl -[TAQueryTableViewCell queryStudent:](struct TAQueryTableViewCell *self, SEL, id);
void __cdecl -[TAQueryTableViewCell query:](struct TAQueryTableViewCell *self, SEL, id);
id __cdecl -[TAQueryTableViewCell queryStudentButton](struct TAQueryTableViewCell *self, SEL);
void __cdecl -[TAQueryTableViewCell setQueryStudentButton:](struct TAQueryTableViewCell *self, SEL, id);
id __cdecl -[TAQueryTableViewCell queryButton](struct TAQueryTableViewCell *self, SEL);
void __cdecl -[TAQueryTableViewCell setQueryButton:](struct TAQueryTableViewCell *self, SEL, id);
id __cdecl -[TAQueryTableViewCell query](struct TAQueryTableViewCell *self, SEL);
void __cdecl -[TAQueryTableViewCell setQuery:](struct TAQueryTableViewCell *self, SEL, id);
void __cdecl -[TAQueryTableViewCell .cxx_destruct](struct TAQueryTableViewCell *self, SEL);
id __cdecl +[TAMonitorsRow attributes](struct TAMonitorsRow_meta *self, SEL);
id __cdecl -[TAMonitorsRow cellForTableView:indexPath:](struct TAMonitorsRow *self, SEL, id, id);
id __cdecl -[TAMonitorsRow cellClass](struct TAMonitorsRow *self, SEL);
id __cdecl -[TAMonitorsRow departArrivalStationText](struct TAMonitorsRow *self, SEL);
void __cdecl -[TAMonitorsRow setDepartArrivalStationText:](struct TAMonitorsRow *self, SEL, id);
id __cdecl -[TAMonitorsRow seatTypeText](struct TAMonitorsRow *self, SEL);
void __cdecl -[TAMonitorsRow setSeatTypeText:](struct TAMonitorsRow *self, SEL, id);
id __cdecl -[TAMonitorsRow monitorTimeText](struct TAMonitorsRow *self, SEL);
void __cdecl -[TAMonitorsRow setMonitorTimeText:](struct TAMonitorsRow *self, SEL, id);
id __cdecl -[TAMonitorsRow departDateText](struct TAMonitorsRow *self, SEL);
void __cdecl -[TAMonitorsRow setDepartDateText:](struct TAMonitorsRow *self, SEL, id);
id __cdecl -[TAMonitorsRow monitorStateText](struct TAMonitorsRow *self, SEL);
void __cdecl -[TAMonitorsRow setMonitorStateText:](struct TAMonitorsRow *self, SEL, id);
void __cdecl -[TAMonitorsRow .cxx_destruct](struct TAMonitorsRow *self, SEL);
id __cdecl -[TASuperRotateView initWithSetting:](struct TASuperRotateView *self, SEL, id);
void __cdecl -[TASuperRotateView beginRotate:](struct TASuperRotateView *self, SEL, id);
void __fastcall sub_13780(int a1);
int __fastcall sub_13810(int a1, int a2);
void __fastcall sub_13818(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void *__fastcall sub_13820(int a1);
int __fastcall sub_13838(int a1, int a2);
void __fastcall sub_13850(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[TASuperRotateView Rotate:](struct TASuperRotateView *self, SEL, id);
double __cdecl -[TASuperRotateView angle](struct TASuperRotateView *self, SEL);
void __cdecl -[TASuperRotateView setAngle:](struct TASuperRotateView *self, SEL, double);
id __cdecl -[TASuperRotateView rotateView](struct TASuperRotateView *self, SEL);
void __cdecl -[TASuperRotateView setRotateView:](struct TASuperRotateView *self, SEL, id);
id __cdecl -[TASuperRotateView btn](struct TASuperRotateView *self, SEL);
void __cdecl -[TASuperRotateView setBtn:](struct TASuperRotateView *self, SEL, id);
void __cdecl -[TASuperRotateView .cxx_destruct](struct TASuperRotateView *self, SEL);
void __cdecl -[TAOrderTrainRow update:](struct TAOrderTrainRow *self, SEL, id);
id __cdecl +[TAOrderTrainRow attributes](struct TAOrderTrainRow_meta *self, SEL);
id __cdecl -[TAOrderTrainRow cellForTableView:indexPath:](struct TAOrderTrainRow *self, SEL, id, id);
id __cdecl -[TAOrderTrainRow cellClass](struct TAOrderTrainRow *self, SEL);
id __cdecl -[TAOrderTrainRow departDateText](struct TAOrderTrainRow *self, SEL);
void __cdecl -[TAOrderTrainRow setDepartDateText:](struct TAOrderTrainRow *self, SEL, id);
id __cdecl -[TAOrderTrainRow codeText](struct TAOrderTrainRow *self, SEL);
void __cdecl -[TAOrderTrainRow setCodeText:](struct TAOrderTrainRow *self, SEL, id);
id __cdecl -[TAOrderTrainRow departStationText](struct TAOrderTrainRow *self, SEL);
void __cdecl -[TAOrderTrainRow setDepartStationText:](struct TAOrderTrainRow *self, SEL, id);
id __cdecl -[TAOrderTrainRow arrivalStationText](struct TAOrderTrainRow *self, SEL);
void __cdecl -[TAOrderTrainRow setArrivalStationText:](struct TAOrderTrainRow *self, SEL, id);
id __cdecl -[TAOrderTrainRow departTimeText](struct TAOrderTrainRow *self, SEL);
void __cdecl -[TAOrderTrainRow setDepartTimeText:](struct TAOrderTrainRow *self, SEL, id);
id __cdecl -[TAOrderTrainRow arrivalTimeText](struct TAOrderTrainRow *self, SEL);
void __cdecl -[TAOrderTrainRow setArrivalTimeText:](struct TAOrderTrainRow *self, SEL, id);
id __cdecl -[TAOrderTrainRow sequenceNoText](struct TAOrderTrainRow *self, SEL);
void __cdecl -[TAOrderTrainRow setSequenceNoText:](struct TAOrderTrainRow *self, SEL, id);
id __cdecl -[TAOrderTrainRow bgColor](struct TAOrderTrainRow *self, SEL);
void __cdecl -[TAOrderTrainRow setBgColor:](struct TAOrderTrainRow *self, SEL, id);
id __cdecl -[TAOrderTrainRow foregroundColor](struct TAOrderTrainRow *self, SEL);
void __cdecl -[TAOrderTrainRow setForegroundColor:](struct TAOrderTrainRow *self, SEL, id);
id __cdecl -[TAOrderTrainRow toImageViewText](struct TAOrderTrainRow *self, SEL);
void __cdecl -[TAOrderTrainRow setToImageViewText:](struct TAOrderTrainRow *self, SEL, id);
id __cdecl -[TAOrderTrainRow colorStyle](struct TAOrderTrainRow *self, SEL);
void __cdecl -[TAOrderTrainRow setColorStyle:](struct TAOrderTrainRow *self, SEL, id);
void __cdecl -[TAOrderTrainRow .cxx_destruct](struct TAOrderTrainRow *self, SEL);
id __cdecl -[BBAction screenshot](struct BBAction *self, SEL);
void __cdecl -[BBAction screenshot:handler:](struct BBAction *self, SEL, id, id);
void __cdecl -[TATrainTableViewCell dealloc](struct TATrainTableViewCell *self, SEL);
id __cdecl -[TATrainTableViewCell initWithCoder:](struct TATrainTableViewCell *self, SEL, id);
void __cdecl -[TATrainTableViewCell awakeFromNib](struct TATrainTableViewCell *self, SEL);
void __cdecl -[TATrainTableViewCell deviceOrientationDidChange:](struct TATrainTableViewCell *self, SEL, id);
id __cdecl -[TATrainTableViewCell timeImageView](struct TATrainTableViewCell *self, SEL);
void __cdecl -[TATrainTableViewCell setTimeImageView:](struct TATrainTableViewCell *self, SEL, id);
id __cdecl -[TATrainTableViewCell codeLabel](struct TATrainTableViewCell *self, SEL);
void __cdecl -[TATrainTableViewCell setCodeLabel:](struct TATrainTableViewCell *self, SEL, id);
id __cdecl -[TATrainTableViewCell durationLabel](struct TATrainTableViewCell *self, SEL);
void __cdecl -[TATrainTableViewCell setDurationLabel:](struct TATrainTableViewCell *self, SEL, id);
id __cdecl -[TATrainTableViewCell lowestPriceLabel](struct TATrainTableViewCell *self, SEL);
void __cdecl -[TATrainTableViewCell setLowestPriceLabel:](struct TATrainTableViewCell *self, SEL, id);
id __cdecl -[TATrainTableViewCell departTimeLabel](struct TATrainTableViewCell *self, SEL);
void __cdecl -[TATrainTableViewCell setDepartTimeLabel:](struct TATrainTableViewCell *self, SEL, id);
id __cdecl -[TATrainTableViewCell arrivalTimeLabel](struct TATrainTableViewCell *self, SEL);
void __cdecl -[TATrainTableViewCell setArrivalTimeLabel:](struct TATrainTableViewCell *self, SEL, id);
id __cdecl -[TATrainTableViewCell departStationLabel](struct TATrainTableViewCell *self, SEL);
void __cdecl -[TATrainTableViewCell setDepartStationLabel:](struct TATrainTableViewCell *self, SEL, id);
id __cdecl -[TATrainTableViewCell arrivalStationLabel](struct TATrainTableViewCell *self, SEL);
void __cdecl -[TATrainTableViewCell setArrivalStationLabel:](struct TATrainTableViewCell *self, SEL, id);
id __cdecl -[TATrainTableViewCell departStationImageView](struct TATrainTableViewCell *self, SEL);
void __cdecl -[TATrainTableViewCell setDepartStationImageView:](struct TATrainTableViewCell *self, SEL, id);
id __cdecl -[TATrainTableViewCell arrivalStationImageView](struct TATrainTableViewCell *self, SEL);
void __cdecl -[TATrainTableViewCell setArrivalStationImageView:](struct TATrainTableViewCell *self, SEL, id);
id __cdecl -[TATrainTableViewCell detailLabel](struct TATrainTableViewCell *self, SEL);
void __cdecl -[TATrainTableViewCell setDetailLabel:](struct TATrainTableViewCell *self, SEL, id);
id __cdecl -[TATrainTableViewCell seatOrPriceLabel1](struct TATrainTableViewCell *self, SEL);
void __cdecl -[TATrainTableViewCell setSeatOrPriceLabel1:](struct TATrainTableViewCell *self, SEL, id);
id __cdecl -[TATrainTableViewCell seatOrPriceLabel2](struct TATrainTableViewCell *self, SEL);
void __cdecl -[TATrainTableViewCell setSeatOrPriceLabel2:](struct TATrainTableViewCell *self, SEL, id);
id __cdecl -[TATrainTableViewCell seatOrPriceLabel3](struct TATrainTableViewCell *self, SEL);
void __cdecl -[TATrainTableViewCell setSeatOrPriceLabel3:](struct TATrainTableViewCell *self, SEL, id);
id __cdecl -[TATrainTableViewCell seatOrPriceLabel4](struct TATrainTableViewCell *self, SEL);
void __cdecl -[TATrainTableViewCell setSeatOrPriceLabel4:](struct TATrainTableViewCell *self, SEL, id);
void __cdecl -[TATrainTableViewCell .cxx_destruct](struct TATrainTableViewCell *self, SEL);
void __cdecl -[TAExchangeTableViewCell dealloc](struct TAExchangeTableViewCell *self, SEL);
id __cdecl -[TAExchangeTableViewCell initWithCoder:](struct TAExchangeTableViewCell *self, SEL, id);
void __cdecl -[TAExchangeTableViewCell deviceOrientationDidChange:](struct TAExchangeTableViewCell *self, SEL, id);
void __cdecl -[TAExchangeTableViewCell resetButtonStyle](struct TAExchangeTableViewCell *self, SEL);
void __cdecl -[TAExchangeTableViewCell awakeFromNib](struct TAExchangeTableViewCell *self, SEL);
void __cdecl -[TAExchangeTableViewCell prepareForReuse](struct TAExchangeTableViewCell *self, SEL);
void __cdecl -[TAExchangeTableViewCell initForReuse](struct TAExchangeTableViewCell *self, SEL);
id __cdecl -[TAExchangeTableViewCell defaultButtonTextColor](struct TAExchangeTableViewCell *self, SEL);
id __cdecl -[TAExchangeTableViewCell buttonImageFromColor:size:cornerRadius:](struct TAExchangeTableViewCell *self, SEL, id, struct CGSize, float);
void __cdecl -[TAExchangeTableViewCell exchageAction](struct TAExchangeTableViewCell *self, SEL);
void __cdecl -[TAExchangeTableViewCell oneAction](struct TAExchangeTableViewCell *self, SEL);
void __cdecl -[TAExchangeTableViewCell secondAction](struct TAExchangeTableViewCell *self, SEL);
id __cdecl -[TAExchangeTableViewCell exchangeButton](struct TAExchangeTableViewCell *self, SEL);
void __cdecl -[TAExchangeTableViewCell setExchangeButton:](struct TAExchangeTableViewCell *self, SEL, id);
id __cdecl -[TAExchangeTableViewCell oneLabel](struct TAExchangeTableViewCell *self, SEL);
void __cdecl -[TAExchangeTableViewCell setOneLabel:](struct TAExchangeTableViewCell *self, SEL, id);
id __cdecl -[TAExchangeTableViewCell oneButton](struct TAExchangeTableViewCell *self, SEL);
void __cdecl -[TAExchangeTableViewCell setOneButton:](struct TAExchangeTableViewCell *self, SEL, id);
id __cdecl -[TAExchangeTableViewCell secondLabel](struct TAExchangeTableViewCell *self, SEL);
void __cdecl -[TAExchangeTableViewCell setSecondLabel:](struct TAExchangeTableViewCell *self, SEL, id);
id __cdecl -[TAExchangeTableViewCell secondButton](struct TAExchangeTableViewCell *self, SEL);
void __cdecl -[TAExchangeTableViewCell setSecondButton:](struct TAExchangeTableViewCell *self, SEL, id);
id __cdecl -[TAExchangeTableViewCell exchangeHandler](struct TAExchangeTableViewCell *self, SEL);
void __cdecl -[TAExchangeTableViewCell setExchangeHandler:](struct TAExchangeTableViewCell *self, SEL, id);
id __cdecl -[TAExchangeTableViewCell clickHandler](struct TAExchangeTableViewCell *self, SEL);
void __cdecl -[TAExchangeTableViewCell setClickHandler:](struct TAExchangeTableViewCell *self, SEL, id);
void __cdecl -[TAExchangeTableViewCell .cxx_destruct](struct TAExchangeTableViewCell *self, SEL);
void __cdecl -[TAExchangeRow update:](struct TAExchangeRow *self, SEL, id);
id __cdecl +[TAExchangeRow attributes](struct TAExchangeRow_meta *self, SEL);
id __cdecl -[TAExchangeRow cellForTableView:indexPath:](struct TAExchangeRow *self, SEL, id, id);
void __fastcall sub_169CC(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_16A74(int a1, int a2);
void __fastcall sub_16A90(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_16AAC(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_16B24(int a1, int a2);
void __fastcall sub_16B40(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[TAExchangeRow cellClass](struct TAExchangeRow *self, SEL);
id __cdecl -[TAExchangeRow oneLabel](struct TAExchangeRow *self, SEL);
void __cdecl -[TAExchangeRow setOneLabel:](struct TAExchangeRow *self, SEL, id);
id __cdecl -[TAExchangeRow exchangeImage](struct TAExchangeRow *self, SEL);
void __cdecl -[TAExchangeRow setExchangeImage:](struct TAExchangeRow *self, SEL, id);
id __cdecl -[TAExchangeRow secondLabel](struct TAExchangeRow *self, SEL);
void __cdecl -[TAExchangeRow setSecondLabel:](struct TAExchangeRow *self, SEL, id);
id __cdecl -[TAExchangeRow oneText](struct TAExchangeRow *self, SEL);
void __cdecl -[TAExchangeRow setOneText:](struct TAExchangeRow *self, SEL, id);
id __cdecl -[TAExchangeRow secondText](struct TAExchangeRow *self, SEL);
void __cdecl -[TAExchangeRow setSecondText:](struct TAExchangeRow *self, SEL, id);
id __cdecl -[TAExchangeRow exchangeAction](struct TAExchangeRow *self, SEL);
void __cdecl -[TAExchangeRow setExchangeAction:](struct TAExchangeRow *self, SEL, id);
void __cdecl -[TAExchangeRow .cxx_destruct](struct TAExchangeRow *self, SEL);
void __cdecl +[TADecaptcha test](struct TADecaptcha_meta *self, SEL);
id __cdecl +[TADecaptcha m12306:](struct TADecaptcha *self, SEL, id);
id __cdecl +[TADecaptcha getImageString:threshold:](struct TADecaptcha *self, SEL, id, int);
id __cdecl +[TADecaptcha search:source_size:dict:dict_size:glyphs:rect:](struct TADecaptcha *self, SEL, id, id, id, id, id, id);
void __cdecl -[TAMyOrderTableViewCell setSelected:animated:](struct TAMyOrderTableViewCell *self, SEL, char, char);
id __cdecl -[TAMyOrderTableViewCell departStationLabel](struct TAMyOrderTableViewCell *self, SEL);
void __cdecl -[TAMyOrderTableViewCell setDepartStationLabel:](struct TAMyOrderTableViewCell *self, SEL, id);
id __cdecl -[TAMyOrderTableViewCell arrivalStationLabel](struct TAMyOrderTableViewCell *self, SEL);
void __cdecl -[TAMyOrderTableViewCell setArrivalStationLabel:](struct TAMyOrderTableViewCell *self, SEL, id);
id __cdecl -[TAMyOrderTableViewCell codeLabel](struct TAMyOrderTableViewCell *self, SEL);
void __cdecl -[TAMyOrderTableViewCell setCodeLabel:](struct TAMyOrderTableViewCell *self, SEL, id);
id __cdecl -[TAMyOrderTableViewCell departTimeLabel](struct TAMyOrderTableViewCell *self, SEL);
void __cdecl -[TAMyOrderTableViewCell setDepartTimeLabel:](struct TAMyOrderTableViewCell *self, SEL, id);
id __cdecl -[TAMyOrderTableViewCell priceLabel](struct TAMyOrderTableViewCell *self, SEL);
void __cdecl -[TAMyOrderTableViewCell setPriceLabel:](struct TAMyOrderTableViewCell *self, SEL, id);
id __cdecl -[TAMyOrderTableViewCell passengerNamesLabel](struct TAMyOrderTableViewCell *self, SEL);
void __cdecl -[TAMyOrderTableViewCell setPassengerNamesLabel:](struct TAMyOrderTableViewCell *self, SEL, id);
id __cdecl -[TAMyOrderTableViewCell statusLabel](struct TAMyOrderTableViewCell *self, SEL);
void __cdecl -[TAMyOrderTableViewCell setStatusLabel:](struct TAMyOrderTableViewCell *self, SEL, id);
id __cdecl -[TAMyOrderTableViewCell toImageView](struct TAMyOrderTableViewCell *self, SEL);
void __cdecl -[TAMyOrderTableViewCell setToImageView:](struct TAMyOrderTableViewCell *self, SEL, id);
id __cdecl -[TAMyOrderTableViewCell statusLabelWidth](struct TAMyOrderTableViewCell *self, SEL);
void __cdecl -[TAMyOrderTableViewCell setStatusLabelWidth:](struct TAMyOrderTableViewCell *self, SEL, id);
void __cdecl -[TAMyOrderTableViewCell .cxx_destruct](struct TAMyOrderTableViewCell *self, SEL);
void __cdecl -[TAAppDelegate mirgateZXAccounts](struct TAAppDelegate *self, SEL);
char __cdecl -[TAAppDelegate application:didFinishLaunchingWithOptions:](struct TAAppDelegate *self, SEL, id, id);
void __fastcall sub_18468(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1868C(int a1, int a2);
void __fastcall sub_18694(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[TAMonitorsTableViewCell setSelected:animated:](struct TAMonitorsTableViewCell *self, SEL, char, char);
id __cdecl -[TAMonitorsTableViewCell departArrivalStation](struct TAMonitorsTableViewCell *self, SEL);
void __cdecl -[TAMonitorsTableViewCell setDepartArrivalStation:](struct TAMonitorsTableViewCell *self, SEL, id);
id __cdecl -[TAMonitorsTableViewCell seatTypeLabel](struct TAMonitorsTableViewCell *self, SEL);
void __cdecl -[TAMonitorsTableViewCell setSeatTypeLabel:](struct TAMonitorsTableViewCell *self, SEL, id);
id __cdecl -[TAMonitorsTableViewCell monitorTimeLabel](struct TAMonitorsTableViewCell *self, SEL);
void __cdecl -[TAMonitorsTableViewCell setMonitorTimeLabel:](struct TAMonitorsTableViewCell *self, SEL, id);
id __cdecl -[TAMonitorsTableViewCell departDateLabel](struct TAMonitorsTableViewCell *self, SEL);
void __cdecl -[TAMonitorsTableViewCell setDepartDateLabel:](struct TAMonitorsTableViewCell *self, SEL, id);
void __cdecl -[TAMonitorsTableViewCell .cxx_destruct](struct TAMonitorsTableViewCell *self, SEL);
void __cdecl -[TAWindow addScript:withSourceURL:](struct TAWindow *self, SEL, id, id);
id __cdecl +[TAWindow decodeScript:](struct TAWindow *self, SEL, id);
id __cdecl -[TABadgeLabel init](struct TABadgeLabel *self, SEL);
void __cdecl -[TABadgeLabel defaultInit](struct TABadgeLabel *self, SEL);
id __cdecl -[TABadgeLabel initWithCoder:](struct TABadgeLabel *self, SEL, id);
void __cdecl -[TABadgeLabel awakeFromNib](struct TABadgeLabel *self, SEL);
void __cdecl -[TABadgeLabel drawRect:](struct TABadgeLabel *self, SEL, struct CGRect);
id __cdecl -[TABadgeLabel badgeColor](struct TABadgeLabel *self, SEL);
void __cdecl -[TABadgeLabel setBadgeColor:](struct TABadgeLabel *self, SEL, id);
void __cdecl -[TABadgeLabel .cxx_destruct](struct TABadgeLabel *self, SEL);
void __cdecl +[BBAction getIP:handler:](struct BBAction *self, SEL, id, id);
void __fastcall sub_18EFC(int a1);
int __fastcall sub_18F90(int a1);
int __fastcall sub_18FB0(int a1, int a2);
void __fastcall sub_18FCC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_18FE4(int a1, int a2);
void __fastcall sub_19004(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
char *__fastcall sub_1901C(int a1);
int __fastcall sub_191E0(int a1);
int __fastcall sub_19200(int a1, int a2);
void __fastcall sub_1921C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_19234(int a1, int a2);
void __fastcall sub_19254(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl +[BBAction getIP:](struct BBAction *self, SEL, id);
void __cdecl +[BBAction getProxy:handler:](struct BBAction *self, SEL, id, id);
void __cdecl -[TAOrderOperationTableViewCell setSelected:animated:](struct TAOrderOperationTableViewCell *self, SEL, char, char);
void __cdecl -[TAOrderOperationTableViewCell refund:](struct TAOrderOperationTableViewCell *self, SEL, id);
void __cdecl -[TAOrderOperationTableViewCell resign:](struct TAOrderOperationTableViewCell *self, SEL, id);
void __cdecl -[TAOrderOperationTableViewCell changeTS:](struct TAOrderOperationTableViewCell *self, SEL, id);
id __cdecl -[TAOrderOperationTableViewCell refund](struct TAOrderOperationTableViewCell *self, SEL);
void __cdecl -[TAOrderOperationTableViewCell setRefund:](struct TAOrderOperationTableViewCell *self, SEL, id);
id __cdecl -[TAOrderOperationTableViewCell resign](struct TAOrderOperationTableViewCell *self, SEL);
void __cdecl -[TAOrderOperationTableViewCell setResign:](struct TAOrderOperationTableViewCell *self, SEL, id);
id __cdecl -[TAOrderOperationTableViewCell changeTS](struct TAOrderOperationTableViewCell *self, SEL);
void __cdecl -[TAOrderOperationTableViewCell setChangeTS:](struct TAOrderOperationTableViewCell *self, SEL, id);
id __cdecl -[TAOrderOperationTableViewCell refundAlignRight](struct TAOrderOperationTableViewCell *self, SEL);
void __cdecl -[TAOrderOperationTableViewCell setRefundAlignRight:](struct TAOrderOperationTableViewCell *self, SEL, id);
id __cdecl -[TAOrderOperationTableViewCell resignAlignRight](struct TAOrderOperationTableViewCell *self, SEL);
void __cdecl -[TAOrderOperationTableViewCell setResignAlignRight:](struct TAOrderOperationTableViewCell *self, SEL, id);
id __cdecl -[TAOrderOperationTableViewCell changeTSAlignRight](struct TAOrderOperationTableViewCell *self, SEL);
void __cdecl -[TAOrderOperationTableViewCell setChangeTSAlignRight:](struct TAOrderOperationTableViewCell *self, SEL, id);
id __cdecl -[TAOrderOperationTableViewCell refundImageView](struct TAOrderOperationTableViewCell *self, SEL);
void __cdecl -[TAOrderOperationTableViewCell setRefundImageView:](struct TAOrderOperationTableViewCell *self, SEL, id);
id __cdecl -[TAOrderOperationTableViewCell resignImageView](struct TAOrderOperationTableViewCell *self, SEL);
void __cdecl -[TAOrderOperationTableViewCell setResignImageView:](struct TAOrderOperationTableViewCell *self, SEL, id);
id __cdecl -[TAOrderOperationTableViewCell changeTSImageView](struct TAOrderOperationTableViewCell *self, SEL);
void __cdecl -[TAOrderOperationTableViewCell setChangeTSImageView:](struct TAOrderOperationTableViewCell *self, SEL, id);
void __cdecl -[TAOrderOperationTableViewCell .cxx_destruct](struct TAOrderOperationTableViewCell *self, SEL);
id __cdecl -[AFHTTPRequestOperation initWithRequest:](struct AFHTTPRequestOperation *self, SEL, id);
void __cdecl -[AFHTTPRequestOperation setResponseSerializer:](struct AFHTTPRequestOperation *self, SEL, id);
id __cdecl -[AFHTTPRequestOperation responseObject](struct AFHTTPRequestOperation *self, SEL);
id __cdecl -[AFHTTPRequestOperation error](struct AFHTTPRequestOperation *self, SEL);
void __cdecl -[AFHTTPRequestOperation setCompletionBlockWithSuccess:failure:](struct AFHTTPRequestOperation *self, SEL, id, id);
void __fastcall sub_19C90(int a1);
void __fastcall sub_19D8C(int a1);
void __fastcall sub_1A150(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1A194(int a1, int a2);
void __fastcall sub_1A1B0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_1A1C8(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1A20C(int a1, int a2);
void __fastcall sub_1A228(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_1A240(int a1);
int __fastcall sub_1A250(int a1, int a2);
void __fastcall sub_1A270(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_1A28C(int a1, int a2);
void __fastcall sub_1A2B8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_1A2D4(int a1, int a2);
void __fastcall sub_1A300(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[AFHTTPRequestOperation pause](struct AFHTTPRequestOperation *self, SEL);
char __cdecl +[AFHTTPRequestOperation supportsSecureCoding](struct AFHTTPRequestOperation_meta *self, SEL);
id __cdecl -[AFHTTPRequestOperation initWithCoder:](struct AFHTTPRequestOperation *self, SEL, id);
void __cdecl -[AFHTTPRequestOperation encodeWithCoder:](struct AFHTTPRequestOperation *self, SEL, id);
id __cdecl -[AFHTTPRequestOperation copyWithZone:](struct AFHTTPRequestOperation *self, SEL, struct _NSZone *);
id __cdecl -[AFHTTPRequestOperation responseSerializer](struct AFHTTPRequestOperation *self, SEL);
void __cdecl -[AFHTTPRequestOperation setResponseObject:](struct AFHTTPRequestOperation *self, SEL, id);
id __cdecl -[AFHTTPRequestOperation responseSerializationError](struct AFHTTPRequestOperation *self, SEL);
void __cdecl -[AFHTTPRequestOperation setResponseSerializationError:](struct AFHTTPRequestOperation *self, SEL, id);
void __cdecl -[AFHTTPRequestOperation .cxx_destruct](struct AFHTTPRequestOperation *self, SEL);
void __fastcall sub_1A8F4(int a1, int a2, int a3, int a4, struct objc_object *a5);
int sub_1A92C();
void __fastcall sub_1A970(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl +[AFHTTPRequestOperationManager manager](struct AFHTTPRequestOperationManager_meta *self, SEL);
id __cdecl -[AFHTTPRequestOperationManager init](struct AFHTTPRequestOperationManager *self, SEL);
id __cdecl -[AFHTTPRequestOperationManager initWithBaseURL:](struct AFHTTPRequestOperationManager *self, SEL, id);
void __cdecl -[AFHTTPRequestOperationManager setRequestSerializer:](struct AFHTTPRequestOperationManager *self, SEL, id);
void __cdecl -[AFHTTPRequestOperationManager setResponseSerializer:](struct AFHTTPRequestOperationManager *self, SEL, id);
id __cdecl -[AFHTTPRequestOperationManager HTTPRequestOperationWithHTTPMethod:URLString:parameters:success:failure:](struct AFHTTPRequestOperationManager *self, SEL, id, id, id, id, id);
int __fastcall sub_1AEBC(int a1);
int __fastcall sub_1AECC(int a1, int a2);
void __fastcall sub_1AEE8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[AFHTTPRequestOperationManager HTTPRequestOperationWithRequest:success:failure:](struct AFHTTPRequestOperationManager *self, SEL, id, id, id);
id __cdecl -[AFHTTPRequestOperationManager GET:parameters:success:failure:](struct AFHTTPRequestOperationManager *self, SEL, id, id, id, id);
id __cdecl -[AFHTTPRequestOperationManager HEAD:parameters:success:failure:](struct AFHTTPRequestOperationManager *self, SEL, id, id, id, id);
void __fastcall sub_1B264(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1B288(int a1, int a2);
void __fastcall sub_1B294(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[AFHTTPRequestOperationManager POST:parameters:success:failure:](struct AFHTTPRequestOperationManager *self, SEL, id, id, id, id);
id __cdecl -[AFHTTPRequestOperationManager POST:parameters:constructingBodyWithBlock:success:failure:](struct AFHTTPRequestOperationManager *self, SEL, id, id, id, id, id);
int __fastcall sub_1B5C4(int a1);
int __fastcall sub_1B5D4(int a1, int a2);
void __fastcall sub_1B5F0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[AFHTTPRequestOperationManager PUT:parameters:success:failure:](struct AFHTTPRequestOperationManager *self, SEL, id, id, id, id);
id __cdecl -[AFHTTPRequestOperationManager PATCH:parameters:success:failure:](struct AFHTTPRequestOperationManager *self, SEL, id, id, id, id);
id __cdecl -[AFHTTPRequestOperationManager DELETE:parameters:success:failure:](struct AFHTTPRequestOperationManager *self, SEL, id, id, id, id);
id __cdecl -[AFHTTPRequestOperationManager description](struct AFHTTPRequestOperationManager *self, SEL);
char __cdecl +[AFHTTPRequestOperationManager supportsSecureCoding](struct AFHTTPRequestOperationManager_meta *self, SEL);
id __cdecl -[AFHTTPRequestOperationManager initWithCoder:](struct AFHTTPRequestOperationManager *self, SEL, id);
void __cdecl -[AFHTTPRequestOperationManager encodeWithCoder:](struct AFHTTPRequestOperationManager *self, SEL, id);
id __cdecl -[AFHTTPRequestOperationManager copyWithZone:](struct AFHTTPRequestOperationManager *self, SEL, struct _NSZone *);
id __cdecl -[AFHTTPRequestOperationManager baseURL](struct AFHTTPRequestOperationManager *self, SEL);
void __cdecl -[AFHTTPRequestOperationManager setBaseURL:](struct AFHTTPRequestOperationManager *self, SEL, id);
id __cdecl -[AFHTTPRequestOperationManager requestSerializer](struct AFHTTPRequestOperationManager *self, SEL);
id __cdecl -[AFHTTPRequestOperationManager responseSerializer](struct AFHTTPRequestOperationManager *self, SEL);
id __cdecl -[AFHTTPRequestOperationManager operationQueue](struct AFHTTPRequestOperationManager *self, SEL);
void __cdecl -[AFHTTPRequestOperationManager setOperationQueue:](struct AFHTTPRequestOperationManager *self, SEL, id);
char __cdecl -[AFHTTPRequestOperationManager shouldUseCredentialStorage](struct AFHTTPRequestOperationManager *self, SEL);
void __cdecl -[AFHTTPRequestOperationManager setShouldUseCredentialStorage:](struct AFHTTPRequestOperationManager *self, SEL, char);
id __cdecl -[AFHTTPRequestOperationManager credential](struct AFHTTPRequestOperationManager *self, SEL);
void __cdecl -[AFHTTPRequestOperationManager setCredential:](struct AFHTTPRequestOperationManager *self, SEL, id);
id __cdecl -[AFHTTPRequestOperationManager securityPolicy](struct AFHTTPRequestOperationManager *self, SEL);
void __cdecl -[AFHTTPRequestOperationManager setSecurityPolicy:](struct AFHTTPRequestOperationManager *self, SEL, id);
id __cdecl -[AFHTTPRequestOperationManager reachabilityManager](struct AFHTTPRequestOperationManager *self, SEL);
void __cdecl -[AFHTTPRequestOperationManager setReachabilityManager:](struct AFHTTPRequestOperationManager *self, SEL, id);
id __cdecl -[AFHTTPRequestOperationManager completionQueue](struct AFHTTPRequestOperationManager *self, SEL);
void __cdecl -[AFHTTPRequestOperationManager setCompletionQueue:](struct AFHTTPRequestOperationManager *self, SEL, id);
id __cdecl -[AFHTTPRequestOperationManager completionGroup](struct AFHTTPRequestOperationManager *self, SEL);
void __cdecl -[AFHTTPRequestOperationManager setCompletionGroup:](struct AFHTTPRequestOperationManager *self, SEL, id);
void __cdecl -[AFHTTPRequestOperationManager .cxx_destruct](struct AFHTTPRequestOperationManager *self, SEL);
id __cdecl +[AFHTTPSessionManager manager](struct AFHTTPSessionManager_meta *self, SEL);
id __cdecl -[AFHTTPSessionManager init](struct AFHTTPSessionManager *self, SEL);
id __cdecl -[AFHTTPSessionManager initWithBaseURL:](struct AFHTTPSessionManager *self, SEL, id);
id __cdecl -[AFHTTPSessionManager initWithSessionConfiguration:](struct AFHTTPSessionManager *self, SEL, id);
id __cdecl -[AFHTTPSessionManager initWithBaseURL:sessionConfiguration:](struct AFHTTPSessionManager *self, SEL, id, id);
void __cdecl -[AFHTTPSessionManager setRequestSerializer:](struct AFHTTPSessionManager *self, SEL, id);
void __cdecl -[AFHTTPSessionManager setResponseSerializer:](struct AFHTTPSessionManager *self, SEL, id);
id __cdecl -[AFHTTPSessionManager GET:parameters:success:failure:](struct AFHTTPSessionManager *self, SEL, id, id, id, id);
id __cdecl -[AFHTTPSessionManager HEAD:parameters:success:failure:](struct AFHTTPSessionManager *self, SEL, id, id, id, id);
void __fastcall sub_1C2B0(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1C2D4(int a1, int a2);
void __fastcall sub_1C2E0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[AFHTTPSessionManager POST:parameters:success:failure:](struct AFHTTPSessionManager *self, SEL, id, id, id, id);
id __cdecl -[AFHTTPSessionManager POST:parameters:constructingBodyWithBlock:success:failure:](struct AFHTTPSessionManager *self, SEL, id, id, id, id, id);
void __fastcall sub_1C6CE(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, int a25, int a26, int a27, int a28, int a29, int a30, int a31, int a32, int a33, int a34, int a35, int a36, int a37, int a38, int a39, int a40, unsigned int a41);
int __fastcall sub_1C6FC(int a1);
int __fastcall sub_1C70C(int a1, int a2);
void __fastcall sub_1C728(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_1C740(int a1, int a2);
void __fastcall sub_1C74C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_1C754(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1C7A0(int a1, int a2);
void __fastcall sub_1C7D0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[AFHTTPSessionManager PUT:parameters:success:failure:](struct AFHTTPSessionManager *self, SEL, id, id, id, id);
id __cdecl -[AFHTTPSessionManager PATCH:parameters:success:failure:](struct AFHTTPSessionManager *self, SEL, id, id, id, id);
id __cdecl -[AFHTTPSessionManager DELETE:parameters:success:failure:](struct AFHTTPSessionManager *self, SEL, id, id, id, id);
id __cdecl -[AFHTTPSessionManager dataTaskWithHTTPMethod:URLString:parameters:success:failure:](struct AFHTTPSessionManager *self, SEL, id, id, id, id, id);
void __fastcall sub_1CCCC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, int a25, int a26, int a27, int a28, int a29, int a30, int a31, int a32, int a33, int a34, int a35, int a36, int a37, int a38, int a39, int a40, unsigned int a41);
int __fastcall sub_1CCF8(int a1);
int __fastcall sub_1CD08(int a1, int a2);
void __fastcall sub_1CD24(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_1CD3C(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1CD88(int a1, int a2);
void __fastcall sub_1CDB8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[AFHTTPSessionManager description](struct AFHTTPSessionManager *self, SEL);
char __cdecl +[AFHTTPSessionManager supportsSecureCoding](struct AFHTTPSessionManager_meta *self, SEL);
id __cdecl -[AFHTTPSessionManager initWithCoder:](struct AFHTTPSessionManager *self, SEL, id);
void __cdecl -[AFHTTPSessionManager encodeWithCoder:](struct AFHTTPSessionManager *self, SEL, id);
id __cdecl -[AFHTTPSessionManager copyWithZone:](struct AFHTTPSessionManager *self, SEL, struct _NSZone *);
id __cdecl -[AFHTTPSessionManager baseURL](struct AFHTTPSessionManager *self, SEL);
void __cdecl -[AFHTTPSessionManager setBaseURL:](struct AFHTTPSessionManager *self, SEL, id);
id __cdecl -[AFHTTPSessionManager requestSerializer](struct AFHTTPSessionManager *self, SEL);
void __cdecl -[AFHTTPSessionManager .cxx_destruct](struct AFHTTPSessionManager *self, SEL);
id __cdecl +[AFNetworkActivityIndicatorManager sharedManager](struct AFNetworkActivityIndicatorManager_meta *self, SEL);
void __fastcall sub_1D540(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl +[AFNetworkActivityIndicatorManager keyPathsForValuesAffectingIsNetworkActivityIndicatorVisible](struct AFNetworkActivityIndicatorManager_meta *self, SEL);
id __cdecl -[AFNetworkActivityIndicatorManager init](struct AFNetworkActivityIndicatorManager *self, SEL);
void __cdecl -[AFNetworkActivityIndicatorManager dealloc](struct AFNetworkActivityIndicatorManager *self, SEL);
void __cdecl -[AFNetworkActivityIndicatorManager updateNetworkActivityIndicatorVisibilityDelayed](struct AFNetworkActivityIndicatorManager *self, SEL);
char __cdecl -[AFNetworkActivityIndicatorManager isNetworkActivityIndicatorVisible](struct AFNetworkActivityIndicatorManager *self, SEL);
void __cdecl -[AFNetworkActivityIndicatorManager updateNetworkActivityIndicatorVisibility](struct AFNetworkActivityIndicatorManager *self, SEL);
void __cdecl -[AFNetworkActivityIndicatorManager setActivityCount:](struct AFNetworkActivityIndicatorManager *self, SEL, int);
void *__fastcall sub_1DA7C(int a1, int a2, int a3);
int __fastcall sub_1DA90(int a1, int a2);
void __fastcall sub_1DA98(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[AFNetworkActivityIndicatorManager incrementActivityCount](struct AFNetworkActivityIndicatorManager *self, SEL);
void *__fastcall sub_1DB50(int a1, int a2, int a3);
int __fastcall sub_1DB64(int a1, int a2);
void __fastcall sub_1DB6C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[AFNetworkActivityIndicatorManager decrementActivityCount](struct AFNetworkActivityIndicatorManager *self, SEL);
void *__fastcall sub_1DC28(int a1, int a2, int a3);
int __fastcall sub_1DC3C(int a1, int a2);
void __fastcall sub_1DC44(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[AFNetworkActivityIndicatorManager networkRequestDidStart:](struct AFNetworkActivityIndicatorManager *self, SEL, id);
id __fastcall sub_1DCA0(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[AFNetworkActivityIndicatorManager networkRequestDidFinish:](struct AFNetworkActivityIndicatorManager *self, SEL, id);
char __cdecl -[AFNetworkActivityIndicatorManager isEnabled](struct AFNetworkActivityIndicatorManager *self, SEL);
void __cdecl -[AFNetworkActivityIndicatorManager setEnabled:](struct AFNetworkActivityIndicatorManager *self, SEL, char);
int __cdecl -[AFNetworkActivityIndicatorManager activityCount](struct AFNetworkActivityIndicatorManager *self, SEL);
id __cdecl -[AFNetworkActivityIndicatorManager activityIndicatorVisibilityTimer](struct AFNetworkActivityIndicatorManager *self, SEL);
void __cdecl -[AFNetworkActivityIndicatorManager setActivityIndicatorVisibilityTimer:](struct AFNetworkActivityIndicatorManager *self, SEL, id);
void __cdecl -[AFNetworkActivityIndicatorManager .cxx_destruct](struct AFNetworkActivityIndicatorManager *self, SEL);
id __fastcall sub_1DE74(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl +[AFNetworkReachabilityManager sharedManager](struct AFNetworkReachabilityManager_meta *self, SEL);
int __fastcall sub_1E07C(int a1);
id __cdecl +[AFNetworkReachabilityManager managerForDomain:](struct AFNetworkReachabilityManager *self, SEL, id);
id __cdecl +[AFNetworkReachabilityManager managerForAddress:](struct AFNetworkReachabilityManager *self, SEL, const void *);
id __cdecl -[AFNetworkReachabilityManager initWithReachability:](struct AFNetworkReachabilityManager *self, SEL, struct __SCNetworkReachability *);
void __cdecl -[AFNetworkReachabilityManager dealloc](struct AFNetworkReachabilityManager *self, SEL);
char __cdecl -[AFNetworkReachabilityManager isReachable](struct AFNetworkReachabilityManager *self, SEL);
char __cdecl -[AFNetworkReachabilityManager isReachableViaWWAN](struct AFNetworkReachabilityManager *self, SEL);
char __cdecl -[AFNetworkReachabilityManager isReachableViaWiFi](struct AFNetworkReachabilityManager *self, SEL);
void __cdecl -[AFNetworkReachabilityManager startMonitoring](struct AFNetworkReachabilityManager *self, SEL);
void __fastcall sub_1E502(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, int a25, int a26, int a27, int a28, unsigned int a29, int a30);
void __fastcall sub_1E530(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1E5A4(int a1, int a2);
int __fastcall sub_1E5AC(int a1);
int __fastcall sub_1E5B8(int result);
void __fastcall sub_1E5C4(int a1, unsigned int a2, int a3);
void __fastcall sub_1E638(int a1);
int __fastcall sub_1E6B8(unsigned int a1);
void __fastcall sub_1E6E8(int a1);
int __fastcall sub_1E7A4(int a1, int a2);
void __fastcall sub_1E7B0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_1E7B8(int a1, int a2);
void __fastcall sub_1E7D8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[AFNetworkReachabilityManager stopMonitoring](struct AFNetworkReachabilityManager *self, SEL);
id __cdecl -[AFNetworkReachabilityManager localizedNetworkReachabilityStatusString](struct AFNetworkReachabilityManager *self, SEL);
void __cdecl -[AFNetworkReachabilityManager setReachabilityStatusChangeBlock:](struct AFNetworkReachabilityManager *self, SEL, id);
id __cdecl +[AFNetworkReachabilityManager keyPathsForValuesAffectingValueForKey:](struct AFNetworkReachabilityManager *self, SEL, id);
int __cdecl -[AFNetworkReachabilityManager networkReachabilityStatus](struct AFNetworkReachabilityManager *self, SEL);
void __cdecl -[AFNetworkReachabilityManager setNetworkReachabilityStatus:](struct AFNetworkReachabilityManager *self, SEL, int);
struct __SCNetworkReachability *__cdecl -[AFNetworkReachabilityManager networkReachability](struct AFNetworkReachabilityManager *self, SEL);
void __cdecl -[AFNetworkReachabilityManager setNetworkReachability:](struct AFNetworkReachabilityManager *self, SEL, struct __SCNetworkReachability *);
unsigned int __cdecl -[AFNetworkReachabilityManager networkReachabilityAssociation](struct AFNetworkReachabilityManager *self, SEL);
void __cdecl -[AFNetworkReachabilityManager setNetworkReachabilityAssociation:](struct AFNetworkReachabilityManager *self, SEL, unsigned int);
id __cdecl -[AFNetworkReachabilityManager networkReachabilityStatusBlock](struct AFNetworkReachabilityManager *self, SEL);
void __cdecl -[AFNetworkReachabilityManager setNetworkReachabilityStatusBlock:](struct AFNetworkReachabilityManager *self, SEL, id);
void __cdecl -[AFNetworkReachabilityManager .cxx_destruct](struct AFNetworkReachabilityManager *self, SEL);
void __fastcall sub_1E9CC(int a1);
id __cdecl +[AFSecurityPolicy defaultPinnedCertificates](struct AFSecurityPolicy_meta *self, SEL);
char *__fastcall sub_1EB08(int a1);
id __cdecl +[AFSecurityPolicy defaultPolicy](struct AFSecurityPolicy_meta *self, SEL);
id __cdecl +[AFSecurityPolicy policyWithPinningMode:](struct AFSecurityPolicy *self, SEL, unsigned int);
id __cdecl -[AFSecurityPolicy init](struct AFSecurityPolicy *self, SEL);
void __cdecl -[AFSecurityPolicy setPinnedCertificates:](struct AFSecurityPolicy *self, SEL, id);
char __cdecl -[AFSecurityPolicy evaluateServerTrust:](struct AFSecurityPolicy *self, SEL, struct __SecTrust *);
char __cdecl -[AFSecurityPolicy evaluateServerTrust:forDomain:](struct AFSecurityPolicy *self, SEL, struct __SecTrust *, id);
id __cdecl +[AFSecurityPolicy keyPathsForValuesAffectingPinnedPublicKeys](struct AFSecurityPolicy_meta *self, SEL);
unsigned int __cdecl -[AFSecurityPolicy SSLPinningMode](struct AFSecurityPolicy *self, SEL);
void __cdecl -[AFSecurityPolicy setSSLPinningMode:](struct AFSecurityPolicy *self, SEL, unsigned int);
char __cdecl -[AFSecurityPolicy validatesCertificateChain](struct AFSecurityPolicy *self, SEL);
void __cdecl -[AFSecurityPolicy setValidatesCertificateChain:](struct AFSecurityPolicy *self, SEL, char);
id __cdecl -[AFSecurityPolicy pinnedCertificates](struct AFSecurityPolicy *self, SEL);
char __cdecl -[AFSecurityPolicy allowInvalidCertificates](struct AFSecurityPolicy *self, SEL);
void __cdecl -[AFSecurityPolicy setAllowInvalidCertificates:](struct AFSecurityPolicy *self, SEL, char);
char __cdecl -[AFSecurityPolicy validatesDomainName](struct AFSecurityPolicy *self, SEL);
void __cdecl -[AFSecurityPolicy setValidatesDomainName:](struct AFSecurityPolicy *self, SEL, char);
id __cdecl -[AFSecurityPolicy pinnedPublicKeys](struct AFSecurityPolicy *self, SEL);
void __cdecl -[AFSecurityPolicy setPinnedPublicKeys:](struct AFSecurityPolicy *self, SEL, id);
void __cdecl -[AFSecurityPolicy .cxx_destruct](struct AFSecurityPolicy *self, SEL);
void __cdecl +[AFURLConnectionOperation networkRequestThreadEntryPoint:](struct AFURLConnectionOperation *self, SEL, id);
id __cdecl +[AFURLConnectionOperation networkRequestThread](struct AFURLConnectionOperation_meta *self, SEL);
void *__fastcall sub_1FAD4(int a1);
id __cdecl -[AFURLConnectionOperation initWithRequest:](struct AFURLConnectionOperation *self, SEL, id);
void __cdecl -[AFURLConnectionOperation dealloc](struct AFURLConnectionOperation *self, SEL);
void __cdecl -[AFURLConnectionOperation setResponseData:](struct AFURLConnectionOperation *self, SEL, id);
id __cdecl -[AFURLConnectionOperation responseString](struct AFURLConnectionOperation *self, SEL);
unsigned int __cdecl -[AFURLConnectionOperation responseStringEncoding](struct AFURLConnectionOperation *self, SEL);
id __cdecl -[AFURLConnectionOperation inputStream](struct AFURLConnectionOperation *self, SEL);
void __cdecl -[AFURLConnectionOperation setInputStream:](struct AFURLConnectionOperation *self, SEL, id);
id __cdecl -[AFURLConnectionOperation outputStream](struct AFURLConnectionOperation *self, SEL);
void __cdecl -[AFURLConnectionOperation setOutputStream:](struct AFURLConnectionOperation *self, SEL, id);
void __cdecl -[AFURLConnectionOperation setShouldExecuteAsBackgroundTaskWithExpirationHandler:](struct AFURLConnectionOperation *self, SEL, id);
void __fastcall sub_204A4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, unsigned int a21, int a22);
void __fastcall sub_204D0(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_20550(int a1, int a2);
void __fastcall sub_2057C(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[AFURLConnectionOperation setState:](struct AFURLConnectionOperation *self, SEL, int);
void __cdecl -[AFURLConnectionOperation pause](struct AFURLConnectionOperation *self, SEL);
void __fastcall sub_20960(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_209B4(int a1, int a2);
void __fastcall sub_209BC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[AFURLConnectionOperation operationDidPause](struct AFURLConnectionOperation *self, SEL);
char __cdecl -[AFURLConnectionOperation isPaused](struct AFURLConnectionOperation *self, SEL);
void __cdecl -[AFURLConnectionOperation resume](struct AFURLConnectionOperation *self, SEL);
void __cdecl -[AFURLConnectionOperation setUploadProgressBlock:](struct AFURLConnectionOperation *self, SEL, id);
void __cdecl -[AFURLConnectionOperation setDownloadProgressBlock:](struct AFURLConnectionOperation *self, SEL, id);
void __cdecl -[AFURLConnectionOperation setWillSendRequestForAuthenticationChallengeBlock:](struct AFURLConnectionOperation *self, SEL, id);
void __cdecl -[AFURLConnectionOperation setCacheResponseBlock:](struct AFURLConnectionOperation *self, SEL, id);
void __cdecl -[AFURLConnectionOperation setRedirectResponseBlock:](struct AFURLConnectionOperation *self, SEL, id);
void __cdecl -[AFURLConnectionOperation setCompletionBlock:](struct AFURLConnectionOperation *self, SEL, id);
void __fastcall sub_20CF2(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, unsigned int a21);
void __fastcall sub_20D1C(int a1);
int __fastcall sub_20ECC(int a1);
int __fastcall sub_20ED4(int a1, int a2);
void __fastcall sub_20EE0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void *__fastcall sub_20EE8(int a1);
int __fastcall sub_20EFC(int a1, int a2);
void __fastcall sub_20F04(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_20F0C(int a1, int a2);
void __fastcall sub_20F30(int a1, int a2, int a3, int a4, struct objc_object *a5);
char __cdecl -[AFURLConnectionOperation isReady](struct AFURLConnectionOperation *self, SEL);
char __cdecl -[AFURLConnectionOperation isExecuting](struct AFURLConnectionOperation *self, SEL);
char __cdecl -[AFURLConnectionOperation isFinished](struct AFURLConnectionOperation *self, SEL);
char __cdecl -[AFURLConnectionOperation isConcurrent](struct AFURLConnectionOperation *self, SEL);
void __cdecl -[AFURLConnectionOperation start](struct AFURLConnectionOperation *self, SEL);
void __cdecl -[AFURLConnectionOperation operationDidStart](struct AFURLConnectionOperation *self, SEL);
void __fastcall sub_21488(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_214DC(int a1, int a2);
void __fastcall sub_214E4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[AFURLConnectionOperation finish](struct AFURLConnectionOperation *self, SEL);
void __fastcall sub_215B0(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_21604(int a1, int a2);
void __fastcall sub_2160C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[AFURLConnectionOperation cancel](struct AFURLConnectionOperation *self, SEL);
void __cdecl -[AFURLConnectionOperation cancelConnection](struct AFURLConnectionOperation *self, SEL);
id __cdecl +[AFURLConnectionOperation batchOfRequestOperations:progressBlock:completionBlock:](struct AFURLConnectionOperation *self, SEL, id, id, id);
void __fastcall sub_21DAE(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, int a25, int a26, int a27, int a28, int a29, int a30, int a31, int a32, int a33, int a34, int a35, int a36, int a37, int a38, int a39, int a40, int a41, int a42, int a43, int a44, int a45, int a46, int a47, int a48, int a49, int a50, int a51, char a52, int a53, int a54, int a55, int a56, int a57, int a58, int a59, int a60, int a61, int a62, int a63);
void __fastcall sub_21DF4(int a1);
int __fastcall sub_21E54(int result);
int __fastcall sub_21E8C(int a1, int a2);
void __fastcall sub_21E98(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_21EA0(int a1, int a2);
void __fastcall sub_21EAC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_21EB4(int a1, int a2);
void __fastcall sub_21EC0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_21EC8(int a1);
int __fastcall sub_21F3C(int a1);
int __fastcall sub_21F4C(int a1, int a2);
void __fastcall sub_21F68(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_21F80(int a1, int a2);
void __fastcall sub_21FAC(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_21FCC(int a1);
int __fastcall sub_220A4(int a1);
void *__fastcall sub_22120(int a1, int a2);
int __fastcall sub_22134(int a1, int a2);
int __fastcall sub_2216C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4);
int __fastcall sub_22190(int a1, int a2);
void __fastcall sub_221D4(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[AFURLConnectionOperation description](struct AFURLConnectionOperation *self, SEL);
void __cdecl -[AFURLConnectionOperation connection:willSendRequestForAuthenticationChallenge:](struct AFURLConnectionOperation *self, SEL, id, id);
char __cdecl -[AFURLConnectionOperation connectionShouldUseCredentialStorage:](struct AFURLConnectionOperation *self, SEL, id);
id __cdecl -[AFURLConnectionOperation connection:willSendRequest:redirectResponse:](struct AFURLConnectionOperation *self, SEL, id, id, id);
void __cdecl -[AFURLConnectionOperation connection:didSendBodyData:totalBytesWritten:totalBytesExpectedToWrite:](struct AFURLConnectionOperation *self, SEL, id, int, int, int);
void __fastcall sub_227DC(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_2283C(int a1, int a2);
void __fastcall sub_22844(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[AFURLConnectionOperation connection:didReceiveResponse:](struct AFURLConnectionOperation *self, SEL, id, id);
void __cdecl -[AFURLConnectionOperation connection:didReceiveData:](struct AFURLConnectionOperation *self, SEL, id, id);
void __fastcall sub_22A60(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_22B40(int a1, int a2);
void __fastcall sub_22B48(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[AFURLConnectionOperation connectionDidFinishLoading:](struct AFURLConnectionOperation *self, SEL, id);
void __cdecl -[AFURLConnectionOperation connection:didFailWithError:](struct AFURLConnectionOperation *self, SEL, id, id);
id __cdecl -[AFURLConnectionOperation connection:willCacheResponse:](struct AFURLConnectionOperation *self, SEL, id, id);
char __cdecl +[AFURLConnectionOperation supportsSecureCoding](struct AFURLConnectionOperation_meta *self, SEL);
id __cdecl -[AFURLConnectionOperation initWithCoder:](struct AFURLConnectionOperation *self, SEL, id);
void __cdecl -[AFURLConnectionOperation encodeWithCoder:](struct AFURLConnectionOperation *self, SEL, id);
id __cdecl -[AFURLConnectionOperation copyWithZone:](struct AFURLConnectionOperation *self, SEL, struct _NSZone *);
id __cdecl -[AFURLConnectionOperation runLoopModes](struct AFURLConnectionOperation *self, SEL);
void __cdecl -[AFURLConnectionOperation setRunLoopModes:](struct AFURLConnectionOperation *self, SEL, id);
id __cdecl -[AFURLConnectionOperation request](struct AFURLConnectionOperation *self, SEL);
void __cdecl -[AFURLConnectionOperation setRequest:](struct AFURLConnectionOperation *self, SEL, id);
id __cdecl -[AFURLConnectionOperation response](struct AFURLConnectionOperation *self, SEL);
void __cdecl -[AFURLConnectionOperation setResponse:](struct AFURLConnectionOperation *self, SEL, id);
id __cdecl -[AFURLConnectionOperation error](struct AFURLConnectionOperation *self, SEL);
void __cdecl -[AFURLConnectionOperation setError:](struct AFURLConnectionOperation *self, SEL, id);
id __cdecl -[AFURLConnectionOperation responseData](struct AFURLConnectionOperation *self, SEL);
void __cdecl -[AFURLConnectionOperation setResponseString:](struct AFURLConnectionOperation *self, SEL, id);
void __cdecl -[AFURLConnectionOperation setResponseStringEncoding:](struct AFURLConnectionOperation *self, SEL, unsigned int);
char __cdecl -[AFURLConnectionOperation shouldUseCredentialStorage](struct AFURLConnectionOperation *self, SEL);
void __cdecl -[AFURLConnectionOperation setShouldUseCredentialStorage:](struct AFURLConnectionOperation *self, SEL, char);
id __cdecl -[AFURLConnectionOperation credential](struct AFURLConnectionOperation *self, SEL);
void __cdecl -[AFURLConnectionOperation setCredential:](struct AFURLConnectionOperation *self, SEL, id);
id __cdecl -[AFURLConnectionOperation securityPolicy](struct AFURLConnectionOperation *self, SEL);
void __cdecl -[AFURLConnectionOperation setSecurityPolicy:](struct AFURLConnectionOperation *self, SEL, id);
id __cdecl -[AFURLConnectionOperation completionQueue](struct AFURLConnectionOperation *self, SEL);
void __cdecl -[AFURLConnectionOperation setCompletionQueue:](struct AFURLConnectionOperation *self, SEL, id);
id __cdecl -[AFURLConnectionOperation completionGroup](struct AFURLConnectionOperation *self, SEL);
void __cdecl -[AFURLConnectionOperation setCompletionGroup:](struct AFURLConnectionOperation *self, SEL, id);
id __cdecl -[AFURLConnectionOperation userInfo](struct AFURLConnectionOperation *self, SEL);
void __cdecl -[AFURLConnectionOperation setUserInfo:](struct AFURLConnectionOperation *self, SEL, id);
int __cdecl -[AFURLConnectionOperation state](struct AFURLConnectionOperation *self, SEL);
id __cdecl -[AFURLConnectionOperation lock](struct AFURLConnectionOperation *self, SEL);
void __cdecl -[AFURLConnectionOperation setLock:](struct AFURLConnectionOperation *self, SEL, id);
id __cdecl -[AFURLConnectionOperation connection](struct AFURLConnectionOperation *self, SEL);
void __cdecl -[AFURLConnectionOperation setConnection:](struct AFURLConnectionOperation *self, SEL, id);
int64_t __cdecl -[AFURLConnectionOperation totalBytesRead](struct AFURLConnectionOperation *self, SEL);
void __cdecl -[AFURLConnectionOperation setTotalBytesRead:](struct AFURLConnectionOperation *self, SEL, int64_t);
unsigned int __cdecl -[AFURLConnectionOperation backgroundTaskIdentifier](struct AFURLConnectionOperation *self, SEL);
void __cdecl -[AFURLConnectionOperation setBackgroundTaskIdentifier:](struct AFURLConnectionOperation *self, SEL, unsigned int);
id __cdecl -[AFURLConnectionOperation uploadProgress](struct AFURLConnectionOperation *self, SEL);
void __cdecl -[AFURLConnectionOperation setUploadProgress:](struct AFURLConnectionOperation *self, SEL, id);
id __cdecl -[AFURLConnectionOperation downloadProgress](struct AFURLConnectionOperation *self, SEL);
void __cdecl -[AFURLConnectionOperation setDownloadProgress:](struct AFURLConnectionOperation *self, SEL, id);
id __cdecl -[AFURLConnectionOperation authenticationChallenge](struct AFURLConnectionOperation *self, SEL);
void __cdecl -[AFURLConnectionOperation setAuthenticationChallenge:](struct AFURLConnectionOperation *self, SEL, id);
id __cdecl -[AFURLConnectionOperation cacheResponse](struct AFURLConnectionOperation *self, SEL);
void __cdecl -[AFURLConnectionOperation setCacheResponse:](struct AFURLConnectionOperation *self, SEL, id);
id __cdecl -[AFURLConnectionOperation redirectResponse](struct AFURLConnectionOperation *self, SEL);
void __cdecl -[AFURLConnectionOperation setRedirectResponse:](struct AFURLConnectionOperation *self, SEL, id);
void __cdecl -[AFURLConnectionOperation .cxx_destruct](struct AFURLConnectionOperation *self, SEL);
void __fastcall sub_23994(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_239B4(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[AFQueryStringPair initWithField:value:](struct AFQueryStringPair *self, SEL, id, id);
id __cdecl -[AFQueryStringPair URLEncodedStringValueWithEncoding:](struct AFQueryStringPair *self, SEL, unsigned int);
id __fastcall sub_23C60(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[AFQueryStringPair field](struct AFQueryStringPair *self, SEL);
void __cdecl -[AFQueryStringPair setField:](struct AFQueryStringPair *self, SEL, id);
id __cdecl -[AFQueryStringPair value](struct AFQueryStringPair *self, SEL);
void __cdecl -[AFQueryStringPair setValue:](struct AFQueryStringPair *self, SEL, id);
void __cdecl -[AFQueryStringPair .cxx_destruct](struct AFQueryStringPair *self, SEL);
id __fastcall sub_23D3C(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl +[AFHTTPRequestSerializer serializer](struct AFHTTPRequestSerializer_meta *self, SEL);
id __cdecl -[AFHTTPRequestSerializer init](struct AFHTTPRequestSerializer *self, SEL);
signed int __fastcall sub_248FC(int a1, int a2, int _R2, int a4);
int __fastcall sub_24994(int a1, int a2);
void __fastcall sub_2499C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[AFHTTPRequestSerializer dealloc](struct AFHTTPRequestSerializer *self, SEL);
void __cdecl -[AFHTTPRequestSerializer setAllowsCellularAccess:](struct AFHTTPRequestSerializer *self, SEL, char);
void __cdecl -[AFHTTPRequestSerializer setCachePolicy:](struct AFHTTPRequestSerializer *self, SEL, unsigned int);
void __cdecl -[AFHTTPRequestSerializer setHTTPShouldHandleCookies:](struct AFHTTPRequestSerializer *self, SEL, char);
void __cdecl -[AFHTTPRequestSerializer setHTTPShouldUsePipelining:](struct AFHTTPRequestSerializer *self, SEL, char);
void __cdecl -[AFHTTPRequestSerializer setNetworkServiceType:](struct AFHTTPRequestSerializer *self, SEL, unsigned int);
void __cdecl -[AFHTTPRequestSerializer setTimeoutInterval:](struct AFHTTPRequestSerializer *self, SEL, double);
id __cdecl -[AFHTTPRequestSerializer HTTPRequestHeaders](struct AFHTTPRequestSerializer *self, SEL);
void __cdecl -[AFHTTPRequestSerializer setValue:forHTTPHeaderField:](struct AFHTTPRequestSerializer *self, SEL, id, id);
id __cdecl -[AFHTTPRequestSerializer valueForHTTPHeaderField:](struct AFHTTPRequestSerializer *self, SEL, id);
void __cdecl -[AFHTTPRequestSerializer setAuthorizationHeaderFieldWithUsername:password:](struct AFHTTPRequestSerializer *self, SEL, id, id);
void __cdecl -[AFHTTPRequestSerializer setAuthorizationHeaderFieldWithToken:](struct AFHTTPRequestSerializer *self, SEL, id);
void __cdecl -[AFHTTPRequestSerializer clearAuthorizationHeader](struct AFHTTPRequestSerializer *self, SEL);
void __cdecl -[AFHTTPRequestSerializer setQueryStringSerializationWithStyle:](struct AFHTTPRequestSerializer *self, SEL, unsigned int);
void __cdecl -[AFHTTPRequestSerializer setQueryStringSerializationWithBlock:](struct AFHTTPRequestSerializer *self, SEL, id);
id __cdecl -[AFHTTPRequestSerializer requestWithMethod:URLString:parameters:](struct AFHTTPRequestSerializer *self, SEL, id, id, id);
id __cdecl -[AFHTTPRequestSerializer requestWithMethod:URLString:parameters:error:](struct AFHTTPRequestSerializer *self, SEL, id, id, id, id *);
id __cdecl -[AFHTTPRequestSerializer multipartFormRequestWithMethod:URLString:parameters:constructingBodyWithBlock:](struct AFHTTPRequestSerializer *self, SEL, id, id, id, id);
id __cdecl -[AFHTTPRequestSerializer multipartFormRequestWithMethod:URLString:parameters:constructingBodyWithBlock:error:](struct AFHTTPRequestSerializer *self, SEL, id, id, id, id, id *);
void __fastcall sub_259E2(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, int a25, int a26, int a27, int a28, int a29, int a30, int a31, int a32, int a33, int a34, int a35, int a36, int a37, int a38, int a39, int a40, int a41, int a42, int a43, char a44, int a45, int a46, int a47, int a48, int a49, int a50, int a51, unsigned int a52, int a53);
int __fastcall sub_25A28(int a1, int a2);
void __fastcall sub_25A34(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[AFHTTPRequestSerializer requestWithMultipartFormRequest:writingStreamContentsToFile:completionHandler:](struct AFHTTPRequestSerializer *self, SEL, id, id, id);
void __fastcall sub_25C22(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, char a21, int a22, int a23, int a24, int a25, int a26, int a27, int a28, unsigned int a29, int a30);
char *__fastcall sub_25C50(int a1);
int __fastcall sub_25E9C(int a1);
int __fastcall sub_25EA8(int a1, int a2);
int __fastcall sub_25ECC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4);
int __fastcall sub_25EE4(int a1, int a2);
void __fastcall sub_25F14(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[AFHTTPRequestSerializer requestBySerializingRequest:withParameters:error:](struct AFHTTPRequestSerializer *self, SEL, id, id, id *);
void __fastcall sub_26488(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_264F0(int a1, int a2);
void __fastcall sub_26508(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
char __cdecl +[AFHTTPRequestSerializer automaticallyNotifiesObserversForKey:](struct AFHTTPRequestSerializer *self, SEL, id);
void __cdecl -[AFHTTPRequestSerializer observeValueForKeyPath:ofObject:change:context:](struct AFHTTPRequestSerializer *self, SEL, id, id, id, void *);
char __cdecl +[AFHTTPRequestSerializer supportsSecureCoding](struct AFHTTPRequestSerializer_meta *self, SEL);
id __cdecl -[AFHTTPRequestSerializer initWithCoder:](struct AFHTTPRequestSerializer *self, SEL, id);
void __cdecl -[AFHTTPRequestSerializer encodeWithCoder:](struct AFHTTPRequestSerializer *self, SEL, id);
id __cdecl -[AFHTTPRequestSerializer copyWithZone:](struct AFHTTPRequestSerializer *self, SEL, struct _NSZone *);
unsigned int __cdecl -[AFHTTPRequestSerializer stringEncoding](struct AFHTTPRequestSerializer *self, SEL);
void __cdecl -[AFHTTPRequestSerializer setStringEncoding:](struct AFHTTPRequestSerializer *self, SEL, unsigned int);
char __cdecl -[AFHTTPRequestSerializer allowsCellularAccess](struct AFHTTPRequestSerializer *self, SEL);
unsigned int __cdecl -[AFHTTPRequestSerializer cachePolicy](struct AFHTTPRequestSerializer *self, SEL);
char __cdecl -[AFHTTPRequestSerializer HTTPShouldHandleCookies](struct AFHTTPRequestSerializer *self, SEL);
char __cdecl -[AFHTTPRequestSerializer HTTPShouldUsePipelining](struct AFHTTPRequestSerializer *self, SEL);
unsigned int __cdecl -[AFHTTPRequestSerializer networkServiceType](struct AFHTTPRequestSerializer *self, SEL);
double __cdecl -[AFHTTPRequestSerializer timeoutInterval](struct AFHTTPRequestSerializer *self, SEL);
id __cdecl -[AFHTTPRequestSerializer HTTPMethodsEncodingParametersInURI](struct AFHTTPRequestSerializer *self, SEL);
void __cdecl -[AFHTTPRequestSerializer setHTTPMethodsEncodingParametersInURI:](struct AFHTTPRequestSerializer *self, SEL, id);
id __cdecl -[AFHTTPRequestSerializer mutableObservedChangedKeyPaths](struct AFHTTPRequestSerializer *self, SEL);
void __cdecl -[AFHTTPRequestSerializer setMutableObservedChangedKeyPaths:](struct AFHTTPRequestSerializer *self, SEL, id);
id __cdecl -[AFHTTPRequestSerializer mutableHTTPRequestHeaders](struct AFHTTPRequestSerializer *self, SEL);
void __cdecl -[AFHTTPRequestSerializer setMutableHTTPRequestHeaders:](struct AFHTTPRequestSerializer *self, SEL, id);
unsigned int __cdecl -[AFHTTPRequestSerializer queryStringSerializationStyle](struct AFHTTPRequestSerializer *self, SEL);
void __cdecl -[AFHTTPRequestSerializer setQueryStringSerializationStyle:](struct AFHTTPRequestSerializer *self, SEL, unsigned int);
id __cdecl -[AFHTTPRequestSerializer queryStringSerialization](struct AFHTTPRequestSerializer *self, SEL);
void __cdecl -[AFHTTPRequestSerializer setQueryStringSerialization:](struct AFHTTPRequestSerializer *self, SEL, id);
void __cdecl -[AFHTTPRequestSerializer .cxx_destruct](struct AFHTTPRequestSerializer *self, SEL);
id __cdecl -[AFStreamingMultipartFormData initWithURLRequest:stringEncoding:](struct AFStreamingMultipartFormData *self, SEL, id, unsigned int);
char __cdecl -[AFStreamingMultipartFormData appendPartWithFileURL:name:error:](struct AFStreamingMultipartFormData *self, SEL, id, id, id *);
char __cdecl -[AFStreamingMultipartFormData appendPartWithFileURL:name:fileName:mimeType:error:](struct AFStreamingMultipartFormData *self, SEL, id, id, id, id, id *);
void __cdecl -[AFStreamingMultipartFormData appendPartWithInputStream:name:fileName:length:mimeType:](struct AFStreamingMultipartFormData *self, SEL, id, id, id, int64_t, id);
void __cdecl -[AFStreamingMultipartFormData appendPartWithFileData:name:fileName:mimeType:](struct AFStreamingMultipartFormData *self, SEL, id, id, id, id);
void __cdecl -[AFStreamingMultipartFormData appendPartWithFormData:name:](struct AFStreamingMultipartFormData *self, SEL, id, id);
void __cdecl -[AFStreamingMultipartFormData appendPartWithHeaders:body:](struct AFStreamingMultipartFormData *self, SEL, id, id);
void __cdecl -[AFStreamingMultipartFormData throttleBandwidthWithPacketSize:delay:](struct AFStreamingMultipartFormData *self, SEL, unsigned int, double);
id __cdecl -[AFStreamingMultipartFormData requestByFinalizingMultipartFormData](struct AFStreamingMultipartFormData *self, SEL);
id __cdecl -[AFStreamingMultipartFormData request](struct AFStreamingMultipartFormData *self, SEL);
void __cdecl -[AFStreamingMultipartFormData setRequest:](struct AFStreamingMultipartFormData *self, SEL, id);
unsigned int __cdecl -[AFStreamingMultipartFormData stringEncoding](struct AFStreamingMultipartFormData *self, SEL);
void __cdecl -[AFStreamingMultipartFormData setStringEncoding:](struct AFStreamingMultipartFormData *self, SEL, unsigned int);
id __cdecl -[AFStreamingMultipartFormData boundary](struct AFStreamingMultipartFormData *self, SEL);
void __cdecl -[AFStreamingMultipartFormData setBoundary:](struct AFStreamingMultipartFormData *self, SEL, id);
id __cdecl -[AFStreamingMultipartFormData bodyStream](struct AFStreamingMultipartFormData *self, SEL);
void __cdecl -[AFStreamingMultipartFormData setBodyStream:](struct AFStreamingMultipartFormData *self, SEL, id);
void __cdecl -[AFStreamingMultipartFormData .cxx_destruct](struct AFStreamingMultipartFormData *self, SEL);
id __cdecl -[AFMultipartBodyStream initWithStringEncoding:](struct AFMultipartBodyStream *self, SEL, unsigned int);
void __cdecl -[AFMultipartBodyStream setInitialAndFinalBoundaries](struct AFMultipartBodyStream *self, SEL);
void __cdecl -[AFMultipartBodyStream appendHTTPBodyPart:](struct AFMultipartBodyStream *self, SEL, id);
char __cdecl -[AFMultipartBodyStream isEmpty](struct AFMultipartBodyStream *self, SEL);
int __cdecl -[AFMultipartBodyStream read:maxLength:](struct AFMultipartBodyStream *self, SEL, char *, unsigned int);
char __cdecl -[AFMultipartBodyStream getBuffer:length:](struct AFMultipartBodyStream *self, SEL, char **, unsigned int *);
char __cdecl -[AFMultipartBodyStream hasBytesAvailable](struct AFMultipartBodyStream *self, SEL);
void __cdecl -[AFMultipartBodyStream open](struct AFMultipartBodyStream *self, SEL);
void __cdecl -[AFMultipartBodyStream close](struct AFMultipartBodyStream *self, SEL);
id __cdecl -[AFMultipartBodyStream propertyForKey:](struct AFMultipartBodyStream *self, SEL, id);
char __cdecl -[AFMultipartBodyStream setProperty:forKey:](struct AFMultipartBodyStream *self, SEL, id, id);
uint64_t __cdecl -[AFMultipartBodyStream contentLength](struct AFMultipartBodyStream *self, SEL);
char __cdecl -[AFMultipartBodyStream _setCFClientFlags:callback:context:](struct AFMultipartBodyStream *self, SEL, uint32_t, void **, struct anon_struct_0 *);
id __cdecl -[AFMultipartBodyStream copyWithZone:](struct AFMultipartBodyStream *self, SEL, struct _NSZone *);
id __cdecl -[AFMultipartBodyStream delegate](struct AFMultipartBodyStream *self, SEL);
void __cdecl -[AFMultipartBodyStream setDelegate:](struct AFMultipartBodyStream *self, SEL, id);
unsigned int __cdecl -[AFMultipartBodyStream streamStatus](struct AFMultipartBodyStream *self, SEL);
void __cdecl -[AFMultipartBodyStream setStreamStatus:](struct AFMultipartBodyStream *self, SEL, unsigned int);
id __cdecl -[AFMultipartBodyStream streamError](struct AFMultipartBodyStream *self, SEL);
void __cdecl -[AFMultipartBodyStream setStreamError:](struct AFMultipartBodyStream *self, SEL, id);
unsigned int __cdecl -[AFMultipartBodyStream numberOfBytesInPacket](struct AFMultipartBodyStream *self, SEL);
void __cdecl -[AFMultipartBodyStream setNumberOfBytesInPacket:](struct AFMultipartBodyStream *self, SEL, unsigned int);
double __cdecl -[AFMultipartBodyStream delay](struct AFMultipartBodyStream *self, SEL);
void __cdecl -[AFMultipartBodyStream setDelay:](struct AFMultipartBodyStream *self, SEL, double);
id __cdecl -[AFMultipartBodyStream inputStream](struct AFMultipartBodyStream *self, SEL);
void __cdecl -[AFMultipartBodyStream setInputStream:](struct AFMultipartBodyStream *self, SEL, id);
unsigned int __cdecl -[AFMultipartBodyStream stringEncoding](struct AFMultipartBodyStream *self, SEL);
void __cdecl -[AFMultipartBodyStream setStringEncoding:](struct AFMultipartBodyStream *self, SEL, unsigned int);
id __cdecl -[AFMultipartBodyStream HTTPBodyParts](struct AFMultipartBodyStream *self, SEL);
void __cdecl -[AFMultipartBodyStream setHTTPBodyParts:](struct AFMultipartBodyStream *self, SEL, id);
id __cdecl -[AFMultipartBodyStream HTTPBodyPartEnumerator](struct AFMultipartBodyStream *self, SEL);
void __cdecl -[AFMultipartBodyStream setHTTPBodyPartEnumerator:](struct AFMultipartBodyStream *self, SEL, id);
id __cdecl -[AFMultipartBodyStream currentHTTPBodyPart](struct AFMultipartBodyStream *self, SEL);
void __cdecl -[AFMultipartBodyStream setCurrentHTTPBodyPart:](struct AFMultipartBodyStream *self, SEL, id);
id __cdecl -[AFMultipartBodyStream outputStream](struct AFMultipartBodyStream *self, SEL);
void __cdecl -[AFMultipartBodyStream setOutputStream:](struct AFMultipartBodyStream *self, SEL, id);
id __cdecl -[AFMultipartBodyStream buffer](struct AFMultipartBodyStream *self, SEL);
void __cdecl -[AFMultipartBodyStream setBuffer:](struct AFMultipartBodyStream *self, SEL, id);
void __cdecl -[AFMultipartBodyStream .cxx_destruct](struct AFMultipartBodyStream *self, SEL);
id __cdecl -[AFHTTPBodyPart init](struct AFHTTPBodyPart *self, SEL);
void __cdecl -[AFHTTPBodyPart dealloc](struct AFHTTPBodyPart *self, SEL);
id __cdecl -[AFHTTPBodyPart inputStream](struct AFHTTPBodyPart *self, SEL);
id __cdecl -[AFHTTPBodyPart stringForHeaders](struct AFHTTPBodyPart *self, SEL);
uint64_t __cdecl -[AFHTTPBodyPart contentLength](struct AFHTTPBodyPart *self, SEL);
char __cdecl -[AFHTTPBodyPart hasBytesAvailable](struct AFHTTPBodyPart *self, SEL);
int __cdecl -[AFHTTPBodyPart read:maxLength:](struct AFHTTPBodyPart *self, SEL, char *, unsigned int);
int __cdecl -[AFHTTPBodyPart readData:intoBuffer:maxLength:](struct AFHTTPBodyPart *self, SEL, id, char *, unsigned int);
char __cdecl -[AFHTTPBodyPart transitionToNextPhase](struct AFHTTPBodyPart *self, SEL);
void *__fastcall sub_29318(int a1, int a2, int a3);
int __fastcall sub_2932C(int a1, int a2);
void __fastcall sub_29334(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[AFHTTPBodyPart copyWithZone:](struct AFHTTPBodyPart *self, SEL, struct _NSZone *);
unsigned int __cdecl -[AFHTTPBodyPart stringEncoding](struct AFHTTPBodyPart *self, SEL);
void __cdecl -[AFHTTPBodyPart setStringEncoding:](struct AFHTTPBodyPart *self, SEL, unsigned int);
id __cdecl -[AFHTTPBodyPart headers](struct AFHTTPBodyPart *self, SEL);
void __cdecl -[AFHTTPBodyPart setHeaders:](struct AFHTTPBodyPart *self, SEL, id);
id __cdecl -[AFHTTPBodyPart boundary](struct AFHTTPBodyPart *self, SEL);
void __cdecl -[AFHTTPBodyPart setBoundary:](struct AFHTTPBodyPart *self, SEL, id);
id __cdecl -[AFHTTPBodyPart body](struct AFHTTPBodyPart *self, SEL);
void __cdecl -[AFHTTPBodyPart setBody:](struct AFHTTPBodyPart *self, SEL, id);
uint64_t __cdecl -[AFHTTPBodyPart bodyContentLength](struct AFHTTPBodyPart *self, SEL);
void __cdecl -[AFHTTPBodyPart setBodyContentLength:](struct AFHTTPBodyPart *self, SEL, uint64_t);
void __cdecl -[AFHTTPBodyPart setInputStream:](struct AFHTTPBodyPart *self, SEL, id);
char __cdecl -[AFHTTPBodyPart hasInitialBoundary](struct AFHTTPBodyPart *self, SEL);
void __cdecl -[AFHTTPBodyPart setHasInitialBoundary:](struct AFHTTPBodyPart *self, SEL, char);
char __cdecl -[AFHTTPBodyPart hasFinalBoundary](struct AFHTTPBodyPart *self, SEL);
void __cdecl -[AFHTTPBodyPart setHasFinalBoundary:](struct AFHTTPBodyPart *self, SEL, char);
void __cdecl -[AFHTTPBodyPart .cxx_destruct](struct AFHTTPBodyPart *self, SEL);
id __cdecl +[AFJSONRequestSerializer serializer](struct AFJSONRequestSerializer_meta *self, SEL);
id __cdecl +[AFJSONRequestSerializer serializerWithWritingOptions:](struct AFJSONRequestSerializer *self, SEL, unsigned int);
id __cdecl -[AFJSONRequestSerializer requestBySerializingRequest:withParameters:error:](struct AFJSONRequestSerializer *self, SEL, id, id, id *);
void __fastcall sub_298A8(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_29910(int a1, int a2);
void __fastcall sub_29928(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[AFJSONRequestSerializer initWithCoder:](struct AFJSONRequestSerializer *self, SEL, id);
void __cdecl -[AFJSONRequestSerializer encodeWithCoder:](struct AFJSONRequestSerializer *self, SEL, id);
id __cdecl -[AFJSONRequestSerializer copyWithZone:](struct AFJSONRequestSerializer *self, SEL, struct _NSZone *);
unsigned int __cdecl -[AFJSONRequestSerializer writingOptions](struct AFJSONRequestSerializer *self, SEL);
void __cdecl -[AFJSONRequestSerializer setWritingOptions:](struct AFJSONRequestSerializer *self, SEL, unsigned int);
id __cdecl +[AFPropertyListRequestSerializer serializer](struct AFPropertyListRequestSerializer_meta *self, SEL);
id __cdecl +[AFPropertyListRequestSerializer serializerWithFormat:writeOptions:](struct AFPropertyListRequestSerializer *self, SEL, unsigned int, unsigned int);
id __cdecl -[AFPropertyListRequestSerializer requestBySerializingRequest:withParameters:error:](struct AFPropertyListRequestSerializer *self, SEL, id, id, id *);
void __fastcall sub_29E0C(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_29E74(int a1, int a2);
void __fastcall sub_29E8C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[AFPropertyListRequestSerializer initWithCoder:](struct AFPropertyListRequestSerializer *self, SEL, id);
void __cdecl -[AFPropertyListRequestSerializer encodeWithCoder:](struct AFPropertyListRequestSerializer *self, SEL, id);
id __cdecl -[AFPropertyListRequestSerializer copyWithZone:](struct AFPropertyListRequestSerializer *self, SEL, struct _NSZone *);
unsigned int __cdecl -[AFPropertyListRequestSerializer format](struct AFPropertyListRequestSerializer *self, SEL);
void __cdecl -[AFPropertyListRequestSerializer setFormat:](struct AFPropertyListRequestSerializer *self, SEL, unsigned int);
unsigned int __cdecl -[AFPropertyListRequestSerializer writeOptions](struct AFPropertyListRequestSerializer *self, SEL);
void __cdecl -[AFPropertyListRequestSerializer setWriteOptions:](struct AFPropertyListRequestSerializer *self, SEL, unsigned int);
int sub_2A1B4();
char *sub_2A1F8();
id __cdecl +[AFHTTPResponseSerializer serializer](struct AFHTTPResponseSerializer_meta *self, SEL);
id __cdecl -[AFHTTPResponseSerializer init](struct AFHTTPResponseSerializer *self, SEL);
char __cdecl -[AFHTTPResponseSerializer validateResponse:data:error:](struct AFHTTPResponseSerializer *self, SEL, id, id, id *);
id __fastcall sub_2AA34(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[AFHTTPResponseSerializer responseObjectForResponse:data:error:](struct AFHTTPResponseSerializer *self, SEL, id, id, id *);
char __cdecl +[AFHTTPResponseSerializer supportsSecureCoding](struct AFHTTPResponseSerializer_meta *self, SEL);
id __cdecl -[AFHTTPResponseSerializer initWithCoder:](struct AFHTTPResponseSerializer *self, SEL, id);
void __cdecl -[AFHTTPResponseSerializer encodeWithCoder:](struct AFHTTPResponseSerializer *self, SEL, id);
id __cdecl -[AFHTTPResponseSerializer copyWithZone:](struct AFHTTPResponseSerializer *self, SEL, struct _NSZone *);
unsigned int __cdecl -[AFHTTPResponseSerializer stringEncoding](struct AFHTTPResponseSerializer *self, SEL);
void __cdecl -[AFHTTPResponseSerializer setStringEncoding:](struct AFHTTPResponseSerializer *self, SEL, unsigned int);
id __cdecl -[AFHTTPResponseSerializer acceptableStatusCodes](struct AFHTTPResponseSerializer *self, SEL);
void __cdecl -[AFHTTPResponseSerializer setAcceptableStatusCodes:](struct AFHTTPResponseSerializer *self, SEL, id);
id __cdecl -[AFHTTPResponseSerializer acceptableContentTypes](struct AFHTTPResponseSerializer *self, SEL);
void __cdecl -[AFHTTPResponseSerializer setAcceptableContentTypes:](struct AFHTTPResponseSerializer *self, SEL, id);
void __cdecl -[AFHTTPResponseSerializer .cxx_destruct](struct AFHTTPResponseSerializer *self, SEL);
id __cdecl +[AFJSONResponseSerializer serializer](struct AFJSONResponseSerializer_meta *self, SEL);
id __cdecl +[AFJSONResponseSerializer serializerWithReadingOptions:](struct AFJSONResponseSerializer *self, SEL, unsigned int);
id __cdecl -[AFJSONResponseSerializer init](struct AFJSONResponseSerializer *self, SEL);
id __cdecl -[AFJSONResponseSerializer responseObjectForResponse:data:error:](struct AFJSONResponseSerializer *self, SEL, id, id, id *);
int __fastcall sub_2B468(int a1, int a2, int a3);
id __fastcall sub_2B57C(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[AFJSONResponseSerializer initWithCoder:](struct AFJSONResponseSerializer *self, SEL, id);
void __cdecl -[AFJSONResponseSerializer encodeWithCoder:](struct AFJSONResponseSerializer *self, SEL, id);
id __cdecl -[AFJSONResponseSerializer copyWithZone:](struct AFJSONResponseSerializer *self, SEL, struct _NSZone *);
unsigned int __cdecl -[AFJSONResponseSerializer readingOptions](struct AFJSONResponseSerializer *self, SEL);
void __cdecl -[AFJSONResponseSerializer setReadingOptions:](struct AFJSONResponseSerializer *self, SEL, unsigned int);
char __cdecl -[AFJSONResponseSerializer removesKeysWithNullValues](struct AFJSONResponseSerializer *self, SEL);
void __cdecl -[AFJSONResponseSerializer setRemovesKeysWithNullValues:](struct AFJSONResponseSerializer *self, SEL, char);
id __cdecl +[AFXMLParserResponseSerializer serializer](struct AFXMLParserResponseSerializer_meta *self, SEL);
id __cdecl -[AFXMLParserResponseSerializer init](struct AFXMLParserResponseSerializer *self, SEL);
id __cdecl -[AFXMLParserResponseSerializer responseObjectForResponse:data:error:](struct AFXMLParserResponseSerializer *self, SEL, id, id, id *);
id __cdecl +[AFPropertyListResponseSerializer serializer](struct AFPropertyListResponseSerializer_meta *self, SEL);
id __cdecl +[AFPropertyListResponseSerializer serializerWithFormat:readOptions:](struct AFPropertyListResponseSerializer *self, SEL, unsigned int, unsigned int);
id __cdecl -[AFPropertyListResponseSerializer init](struct AFPropertyListResponseSerializer *self, SEL);
id __cdecl -[AFPropertyListResponseSerializer responseObjectForResponse:data:error:](struct AFPropertyListResponseSerializer *self, SEL, id, id, id *);
id __cdecl -[AFPropertyListResponseSerializer initWithCoder:](struct AFPropertyListResponseSerializer *self, SEL, id);
void __cdecl -[AFPropertyListResponseSerializer encodeWithCoder:](struct AFPropertyListResponseSerializer *self, SEL, id);
id __cdecl -[AFPropertyListResponseSerializer copyWithZone:](struct AFPropertyListResponseSerializer *self, SEL, struct _NSZone *);
unsigned int __cdecl -[AFPropertyListResponseSerializer format](struct AFPropertyListResponseSerializer *self, SEL);
void __cdecl -[AFPropertyListResponseSerializer setFormat:](struct AFPropertyListResponseSerializer *self, SEL, unsigned int);
unsigned int __cdecl -[AFPropertyListResponseSerializer readOptions](struct AFPropertyListResponseSerializer *self, SEL);
void __cdecl -[AFPropertyListResponseSerializer setReadOptions:](struct AFPropertyListResponseSerializer *self, SEL, unsigned int);
id __cdecl -[AFImageResponseSerializer init](struct AFImageResponseSerializer *self, SEL);
id __cdecl -[AFImageResponseSerializer responseObjectForResponse:data:error:](struct AFImageResponseSerializer *self, SEL, id, id, id *);
id __fastcall sub_2C854(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[AFImageResponseSerializer initWithCoder:](struct AFImageResponseSerializer *self, SEL, id);
void __cdecl -[AFImageResponseSerializer encodeWithCoder:](struct AFImageResponseSerializer *self, SEL, id);
id __cdecl -[AFImageResponseSerializer copyWithZone:](struct AFImageResponseSerializer *self, SEL, struct _NSZone *);
float __cdecl -[AFImageResponseSerializer imageScale](struct AFImageResponseSerializer *self, SEL);
void __cdecl -[AFImageResponseSerializer setImageScale:](struct AFImageResponseSerializer *self, SEL, float);
char __cdecl -[AFImageResponseSerializer automaticallyInflatesResponseImage](struct AFImageResponseSerializer *self, SEL);
void __cdecl -[AFImageResponseSerializer setAutomaticallyInflatesResponseImage:](struct AFImageResponseSerializer *self, SEL, char);
id __cdecl +[AFCompoundResponseSerializer compoundSerializerWithResponseSerializers:](struct AFCompoundResponseSerializer *self, SEL, id);
id __cdecl -[AFCompoundResponseSerializer responseObjectForResponse:data:error:](struct AFCompoundResponseSerializer *self, SEL, id, id, id *);
id __cdecl -[AFCompoundResponseSerializer initWithCoder:](struct AFCompoundResponseSerializer *self, SEL, id);
void __cdecl -[AFCompoundResponseSerializer encodeWithCoder:](struct AFCompoundResponseSerializer *self, SEL, id);
id __cdecl -[AFCompoundResponseSerializer copyWithZone:](struct AFCompoundResponseSerializer *self, SEL, struct _NSZone *);
id __cdecl -[AFCompoundResponseSerializer responseSerializers](struct AFCompoundResponseSerializer *self, SEL);
void __cdecl -[AFCompoundResponseSerializer setResponseSerializers:](struct AFCompoundResponseSerializer *self, SEL, id);
void __cdecl -[AFCompoundResponseSerializer .cxx_destruct](struct AFCompoundResponseSerializer *self, SEL);
id __cdecl -[AFURLSessionManagerTaskDelegate init](struct AFURLSessionManagerTaskDelegate *self, SEL);
void __cdecl -[AFURLSessionManagerTaskDelegate URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:](struct AFURLSessionManagerTaskDelegate *self, SEL, id, id, int64_t, int64_t, int64_t);
void __cdecl -[AFURLSessionManagerTaskDelegate URLSession:task:didCompleteWithError:](struct AFURLSessionManagerTaskDelegate *self, SEL, id, id, id);
void __fastcall sub_2D678(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, int a25, int a26, int a27, int a28, int a29, int a30, int a31, int a32, int a33, char a34, int a35, int a36, int a37, int a38, int a39, int a40, char a41, int a42, int a43, int a44, int a45, int a46, int a47, int a48, unsigned int a49, int a50);
int __fastcall sub_2D6C0(int a1, int a2);
void __fastcall sub_2D6CC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_2D6D4(int a1);
void __fastcall sub_2D7AC(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_2D80C(int a1, int a2);
int __fastcall sub_2D82C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4);
int __fastcall sub_2D844(int a1, int a2);
int __fastcall sub_2D87C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4);
void __fastcall sub_2D8A8(int a1);
void __fastcall sub_2DB2C(int a1);
void __fastcall sub_2DC04(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_2DC64(int a1, int a2);
int __fastcall sub_2DC84(int a1, void *a2, struct objc_object *a3, struct objc_object *a4);
int __fastcall sub_2DC9C(int a1, int a2);
int __fastcall sub_2DCD4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4);
int __fastcall sub_2DD00(int a1, int a2);
int __fastcall sub_2DD38(int a1);
void __cdecl -[AFURLSessionManagerTaskDelegate URLSession:dataTask:didReceiveData:](struct AFURLSessionManagerTaskDelegate *self, SEL, id, id, id);
void __cdecl -[AFURLSessionManagerTaskDelegate URLSession:downloadTask:didFinishDownloadingToURL:](struct AFURLSessionManagerTaskDelegate *self, SEL, id, id, id);
void __cdecl -[AFURLSessionManagerTaskDelegate URLSession:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:](struct AFURLSessionManagerTaskDelegate *self, SEL, id, id, int64_t, int64_t, int64_t);
void __cdecl -[AFURLSessionManagerTaskDelegate URLSession:downloadTask:didResumeAtOffset:expectedTotalBytes:](struct AFURLSessionManagerTaskDelegate *self, SEL, id, id, int64_t, int64_t);
id __cdecl -[AFURLSessionManagerTaskDelegate manager](struct AFURLSessionManagerTaskDelegate *self, SEL);
void __cdecl -[AFURLSessionManagerTaskDelegate setManager:](struct AFURLSessionManagerTaskDelegate *self, SEL, id);
id __cdecl -[AFURLSessionManagerTaskDelegate mutableData](struct AFURLSessionManagerTaskDelegate *self, SEL);
void __cdecl -[AFURLSessionManagerTaskDelegate setMutableData:](struct AFURLSessionManagerTaskDelegate *self, SEL, id);
id __cdecl -[AFURLSessionManagerTaskDelegate progress](struct AFURLSessionManagerTaskDelegate *self, SEL);
void __cdecl -[AFURLSessionManagerTaskDelegate setProgress:](struct AFURLSessionManagerTaskDelegate *self, SEL, id);
id __cdecl -[AFURLSessionManagerTaskDelegate downloadFileURL](struct AFURLSessionManagerTaskDelegate *self, SEL);
void __cdecl -[AFURLSessionManagerTaskDelegate setDownloadFileURL:](struct AFURLSessionManagerTaskDelegate *self, SEL, id);
id __cdecl -[AFURLSessionManagerTaskDelegate downloadTaskDidFinishDownloading](struct AFURLSessionManagerTaskDelegate *self, SEL);
void __cdecl -[AFURLSessionManagerTaskDelegate setDownloadTaskDidFinishDownloading:](struct AFURLSessionManagerTaskDelegate *self, SEL, id);
id __cdecl -[AFURLSessionManagerTaskDelegate completionHandler](struct AFURLSessionManagerTaskDelegate *self, SEL);
void __cdecl -[AFURLSessionManagerTaskDelegate setCompletionHandler:](struct AFURLSessionManagerTaskDelegate *self, SEL, id);
void __cdecl -[AFURLSessionManagerTaskDelegate .cxx_destruct](struct AFURLSessionManagerTaskDelegate *self, SEL);
void __cdecl +[_AFURLSessionTaskSwizzling load](struct _AFURLSessionTaskSwizzling_meta *self, SEL);
void __cdecl +[_AFURLSessionTaskSwizzling swizzleResumeAndSuspendMethodForClass:](struct _AFURLSessionTaskSwizzling *self, SEL, Class);
int __cdecl -[_AFURLSessionTaskSwizzling state](struct _AFURLSessionTaskSwizzling *self, SEL);
void __cdecl -[_AFURLSessionTaskSwizzling af_resume](struct _AFURLSessionTaskSwizzling *self, SEL);
void __cdecl -[_AFURLSessionTaskSwizzling af_suspend](struct _AFURLSessionTaskSwizzling *self, SEL);
id __cdecl -[AFURLSessionManager init](struct AFURLSessionManager *self, SEL);
id __cdecl -[AFURLSessionManager initWithSessionConfiguration:](struct AFURLSessionManager *self, SEL, id);
char *__fastcall sub_2E920(int a1, int a2, int a3, int a4);
int __fastcall sub_2EB54(int a1, int a2);
void __fastcall sub_2EB5C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[AFURLSessionManager dealloc](struct AFURLSessionManager *self, SEL);
id __cdecl -[AFURLSessionManager taskDescriptionForSessionTasks](struct AFURLSessionManager *self, SEL);
void __cdecl -[AFURLSessionManager taskDidResume:](struct AFURLSessionManager *self, SEL, id);
void __fastcall sub_2ED00(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_2ED54(int a1, int a2);
void __fastcall sub_2ED5C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[AFURLSessionManager taskDidSuspend:](struct AFURLSessionManager *self, SEL, id);
void __fastcall sub_2EE64(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_2EEB8(int a1, int a2);
void __fastcall sub_2EEC0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[AFURLSessionManager delegateForTask:](struct AFURLSessionManager *self, SEL, id);
void __cdecl -[AFURLSessionManager setDelegate:forTask:](struct AFURLSessionManager *self, SEL, id, id);
void __cdecl -[AFURLSessionManager addDelegateForDataTask:completionHandler:](struct AFURLSessionManager *self, SEL, id, id);
void __cdecl -[AFURLSessionManager addDelegateForUploadTask:progress:completionHandler:](struct AFURLSessionManager *self, SEL, id, id *, id);
void *__fastcall sub_2F498(int a1, int a2, int a3);
int __fastcall sub_2F4AC(int a1, int a2);
void __fastcall sub_2F4B4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void *__fastcall sub_2F4BC(int a1, int a2, int a3);
int __fastcall sub_2F4D0(int a1, int a2);
void __fastcall sub_2F4D8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[AFURLSessionManager addDelegateForDownloadTask:progress:destination:completionHandler:](struct AFURLSessionManager *self, SEL, id, id *, id, id);
id __fastcall sub_2F648(int a1, int a2, void *a3, int a4, struct objc_object *a5);
int __fastcall sub_2F6BC(int a1, int a2);
void __fastcall sub_2F6C8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[AFURLSessionManager removeDelegateForTask:](struct AFURLSessionManager *self, SEL, id);
void __cdecl -[AFURLSessionManager removeAllDelegates](struct AFURLSessionManager *self, SEL);
id __cdecl -[AFURLSessionManager tasksForKeyPath:](struct AFURLSessionManager *self, SEL, id);
void __fastcall sub_2F9C0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, char a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, unsigned int a25, int a26);
int __fastcall sub_2F9EC(int a1, int a2, int a3, int a4);
int __fastcall sub_2FBE0(int a1, int a2);
void __fastcall sub_2FC04(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[AFURLSessionManager tasks](struct AFURLSessionManager *self, SEL);
id __cdecl -[AFURLSessionManager dataTasks](struct AFURLSessionManager *self, SEL);
id __cdecl -[AFURLSessionManager uploadTasks](struct AFURLSessionManager *self, SEL);
id __cdecl -[AFURLSessionManager downloadTasks](struct AFURLSessionManager *self, SEL);
void __cdecl -[AFURLSessionManager invalidateSessionCancelingTasks:](struct AFURLSessionManager *self, SEL, char);
void __fastcall sub_2FD84(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_2FDD0(int a1, int a2);
void __fastcall sub_2FDD8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[AFURLSessionManager setResponseSerializer:](struct AFURLSessionManager *self, SEL, id);
id __cdecl -[AFURLSessionManager dataTaskWithRequest:completionHandler:](struct AFURLSessionManager *self, SEL, id, id);
void __fastcall sub_2FF58(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, unsigned int a25);
void __fastcall sub_2FF84(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_2FFD8(int a1, int a2);
void __fastcall sub_2FFF8(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[AFURLSessionManager uploadTaskWithRequest:fromFile:progress:completionHandler:](struct AFURLSessionManager *self, SEL, id, id, id *, id);
void __fastcall sub_302A6(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, char a25, int a26, int a27, int a28, int a29, int a30, int a31, int a32, unsigned int a33, int a34);
void __fastcall sub_302DC(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_30330(int a1, int a2);
void __fastcall sub_30358(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[AFURLSessionManager uploadTaskWithRequest:fromData:progress:completionHandler:](struct AFURLSessionManager *self, SEL, id, id, id *, id);
void __fastcall sub_304FC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, int a25, int a26, int a27, int a28, unsigned int a29);
void __fastcall sub_30528(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_3057C(int a1, int a2);
void __fastcall sub_305A4(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[AFURLSessionManager uploadTaskWithStreamedRequest:progress:completionHandler:](struct AFURLSessionManager *self, SEL, id, id *, id);
void __fastcall sub_30730(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, unsigned int a25);
void __fastcall sub_3075C(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_307B0(int a1, int a2);
void __fastcall sub_307D0(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[AFURLSessionManager downloadTaskWithRequest:progress:destination:completionHandler:](struct AFURLSessionManager *self, SEL, id, id *, id, id);
void __fastcall sub_30964(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, int a25, int a26, int a27, int a28, unsigned int a29);
void __fastcall sub_30990(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_309E4(int a1, int a2);
void __fastcall sub_30A04(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[AFURLSessionManager downloadTaskWithResumeData:progress:destination:completionHandler:](struct AFURLSessionManager *self, SEL, id, id *, id, id);
void __fastcall sub_30B98(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, int a25, int a26, int a27, int a28, unsigned int a29);
void __fastcall sub_30BC4(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_30C18(int a1, int a2);
void __fastcall sub_30C38(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[AFURLSessionManager uploadProgressForTask:](struct AFURLSessionManager *self, SEL, id);
id __cdecl -[AFURLSessionManager downloadProgressForTask:](struct AFURLSessionManager *self, SEL, id);
void __cdecl -[AFURLSessionManager setSessionDidBecomeInvalidBlock:](struct AFURLSessionManager *self, SEL, id);
void __cdecl -[AFURLSessionManager setSessionDidReceiveAuthenticationChallengeBlock:](struct AFURLSessionManager *self, SEL, id);
void __cdecl -[AFURLSessionManager setDidFinishEventsForBackgroundURLSessionBlock:](struct AFURLSessionManager *self, SEL, id);
void __cdecl -[AFURLSessionManager setTaskNeedNewBodyStreamBlock:](struct AFURLSessionManager *self, SEL, id);
void __cdecl -[AFURLSessionManager setTaskWillPerformHTTPRedirectionBlock:](struct AFURLSessionManager *self, SEL, id);
void __cdecl -[AFURLSessionManager setTaskDidReceiveAuthenticationChallengeBlock:](struct AFURLSessionManager *self, SEL, id);
void __cdecl -[AFURLSessionManager setTaskDidSendBodyDataBlock:](struct AFURLSessionManager *self, SEL, id);
void __cdecl -[AFURLSessionManager setTaskDidCompleteBlock:](struct AFURLSessionManager *self, SEL, id);
void __cdecl -[AFURLSessionManager setDataTaskDidReceiveResponseBlock:](struct AFURLSessionManager *self, SEL, id);
void __cdecl -[AFURLSessionManager setDataTaskDidBecomeDownloadTaskBlock:](struct AFURLSessionManager *self, SEL, id);
void __cdecl -[AFURLSessionManager setDataTaskDidReceiveDataBlock:](struct AFURLSessionManager *self, SEL, id);
void __cdecl -[AFURLSessionManager setDataTaskWillCacheResponseBlock:](struct AFURLSessionManager *self, SEL, id);
void __cdecl -[AFURLSessionManager setDownloadTaskDidFinishDownloadingBlock:](struct AFURLSessionManager *self, SEL, id);
void __cdecl -[AFURLSessionManager setDownloadTaskDidWriteDataBlock:](struct AFURLSessionManager *self, SEL, id);
void __cdecl -[AFURLSessionManager setDownloadTaskDidResumeBlock:](struct AFURLSessionManager *self, SEL, id);
id __cdecl -[AFURLSessionManager description](struct AFURLSessionManager *self, SEL);
char __cdecl -[AFURLSessionManager respondsToSelector:](struct AFURLSessionManager *self, SEL, SEL);
void __cdecl -[AFURLSessionManager URLSession:didBecomeInvalidWithError:](struct AFURLSessionManager *self, SEL, id, id);
void __cdecl -[AFURLSessionManager URLSession:didReceiveChallenge:completionHandler:](struct AFURLSessionManager *self, SEL, id, id, id);
void __fastcall sub_3134A(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, char a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, unsigned int a25, int a26);
void __cdecl -[AFURLSessionManager URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:](struct AFURLSessionManager *self, SEL, id, id, id, id, id);
void __cdecl -[AFURLSessionManager URLSession:task:didReceiveChallenge:completionHandler:](struct AFURLSessionManager *self, SEL, id, id, id, id);
void __fastcall sub_31782(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, char a21, int a22, int a23, int a24, int a25, int a26, int a27, int a28, unsigned int a29, int a30);
void __cdecl -[AFURLSessionManager URLSession:task:needNewBodyStream:](struct AFURLSessionManager *self, SEL, id, id, id);
void __cdecl -[AFURLSessionManager URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:](struct AFURLSessionManager *self, SEL, id, id, int64_t, int64_t, int64_t);
void __cdecl -[AFURLSessionManager URLSession:task:didCompleteWithError:](struct AFURLSessionManager *self, SEL, id, id, id);
void __cdecl -[AFURLSessionManager URLSession:dataTask:didReceiveResponse:completionHandler:](struct AFURLSessionManager *self, SEL, id, id, id, id);
void __cdecl -[AFURLSessionManager URLSession:dataTask:didBecomeDownloadTask:](struct AFURLSessionManager *self, SEL, id, id, id);
void __cdecl -[AFURLSessionManager URLSession:dataTask:didReceiveData:](struct AFURLSessionManager *self, SEL, id, id, id);
void __cdecl -[AFURLSessionManager URLSession:dataTask:willCacheResponse:completionHandler:](struct AFURLSessionManager *self, SEL, id, id, id, id);
void __cdecl -[AFURLSessionManager URLSessionDidFinishEventsForBackgroundURLSession:](struct AFURLSessionManager *self, SEL, id);
void __fastcall sub_31F80(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_31FB0(int a1, int a2);
void __fastcall sub_31FC8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[AFURLSessionManager URLSession:downloadTask:didFinishDownloadingToURL:](struct AFURLSessionManager *self, SEL, id, id, id);
void __cdecl -[AFURLSessionManager URLSession:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:](struct AFURLSessionManager *self, SEL, id, id, int64_t, int64_t, int64_t);
void __cdecl -[AFURLSessionManager URLSession:downloadTask:didResumeAtOffset:expectedTotalBytes:](struct AFURLSessionManager *self, SEL, id, id, int64_t, int64_t);
char __cdecl +[AFURLSessionManager supportsSecureCoding](struct AFURLSessionManager_meta *self, SEL);
id __cdecl -[AFURLSessionManager initWithCoder:](struct AFURLSessionManager *self, SEL, id);
void __cdecl -[AFURLSessionManager encodeWithCoder:](struct AFURLSessionManager *self, SEL, id);
id __cdecl -[AFURLSessionManager copyWithZone:](struct AFURLSessionManager *self, SEL, struct _NSZone *);
id __cdecl -[AFURLSessionManager session](struct AFURLSessionManager *self, SEL);
void __cdecl -[AFURLSessionManager setSession:](struct AFURLSessionManager *self, SEL, id);
id __cdecl -[AFURLSessionManager operationQueue](struct AFURLSessionManager *self, SEL);
void __cdecl -[AFURLSessionManager setOperationQueue:](struct AFURLSessionManager *self, SEL, id);
id __cdecl -[AFURLSessionManager responseSerializer](struct AFURLSessionManager *self, SEL);
id __cdecl -[AFURLSessionManager securityPolicy](struct AFURLSessionManager *self, SEL);
void __cdecl -[AFURLSessionManager setSecurityPolicy:](struct AFURLSessionManager *self, SEL, id);
id __cdecl -[AFURLSessionManager reachabilityManager](struct AFURLSessionManager *self, SEL);
void __cdecl -[AFURLSessionManager setReachabilityManager:](struct AFURLSessionManager *self, SEL, id);
id __cdecl -[AFURLSessionManager completionQueue](struct AFURLSessionManager *self, SEL);
void __cdecl -[AFURLSessionManager setCompletionQueue:](struct AFURLSessionManager *self, SEL, id);
id __cdecl -[AFURLSessionManager completionGroup](struct AFURLSessionManager *self, SEL);
void __cdecl -[AFURLSessionManager setCompletionGroup:](struct AFURLSessionManager *self, SEL, id);
char __cdecl -[AFURLSessionManager attemptsToRecreateUploadTasksForBackgroundSessions](struct AFURLSessionManager *self, SEL);
void __cdecl -[AFURLSessionManager setAttemptsToRecreateUploadTasksForBackgroundSessions:](struct AFURLSessionManager *self, SEL, char);
id __cdecl -[AFURLSessionManager sessionConfiguration](struct AFURLSessionManager *self, SEL);
void __cdecl -[AFURLSessionManager setSessionConfiguration:](struct AFURLSessionManager *self, SEL, id);
id __cdecl -[AFURLSessionManager mutableTaskDelegatesKeyedByTaskIdentifier](struct AFURLSessionManager *self, SEL);
void __cdecl -[AFURLSessionManager setMutableTaskDelegatesKeyedByTaskIdentifier:](struct AFURLSessionManager *self, SEL, id);
id __cdecl -[AFURLSessionManager lock](struct AFURLSessionManager *self, SEL);
void __cdecl -[AFURLSessionManager setLock:](struct AFURLSessionManager *self, SEL, id);
id __cdecl -[AFURLSessionManager sessionDidBecomeInvalid](struct AFURLSessionManager *self, SEL);
void __cdecl -[AFURLSessionManager setSessionDidBecomeInvalid:](struct AFURLSessionManager *self, SEL, id);
id __cdecl -[AFURLSessionManager sessionDidReceiveAuthenticationChallenge](struct AFURLSessionManager *self, SEL);
void __cdecl -[AFURLSessionManager setSessionDidReceiveAuthenticationChallenge:](struct AFURLSessionManager *self, SEL, id);
id __cdecl -[AFURLSessionManager didFinishEventsForBackgroundURLSession](struct AFURLSessionManager *self, SEL);
void __cdecl -[AFURLSessionManager setDidFinishEventsForBackgroundURLSession:](struct AFURLSessionManager *self, SEL, id);
id __cdecl -[AFURLSessionManager taskWillPerformHTTPRedirection](struct AFURLSessionManager *self, SEL);
void __cdecl -[AFURLSessionManager setTaskWillPerformHTTPRedirection:](struct AFURLSessionManager *self, SEL, id);
id __cdecl -[AFURLSessionManager taskDidReceiveAuthenticationChallenge](struct AFURLSessionManager *self, SEL);
void __cdecl -[AFURLSessionManager setTaskDidReceiveAuthenticationChallenge:](struct AFURLSessionManager *self, SEL, id);
id __cdecl -[AFURLSessionManager taskNeedNewBodyStream](struct AFURLSessionManager *self, SEL);
void __cdecl -[AFURLSessionManager setTaskNeedNewBodyStream:](struct AFURLSessionManager *self, SEL, id);
id __cdecl -[AFURLSessionManager taskDidSendBodyData](struct AFURLSessionManager *self, SEL);
void __cdecl -[AFURLSessionManager setTaskDidSendBodyData:](struct AFURLSessionManager *self, SEL, id);
id __cdecl -[AFURLSessionManager taskDidComplete](struct AFURLSessionManager *self, SEL);
void __cdecl -[AFURLSessionManager setTaskDidComplete:](struct AFURLSessionManager *self, SEL, id);
id __cdecl -[AFURLSessionManager dataTaskDidReceiveResponse](struct AFURLSessionManager *self, SEL);
void __cdecl -[AFURLSessionManager setDataTaskDidReceiveResponse:](struct AFURLSessionManager *self, SEL, id);
id __cdecl -[AFURLSessionManager dataTaskDidBecomeDownloadTask](struct AFURLSessionManager *self, SEL);
void __cdecl -[AFURLSessionManager setDataTaskDidBecomeDownloadTask:](struct AFURLSessionManager *self, SEL, id);
id __cdecl -[AFURLSessionManager dataTaskDidReceiveData](struct AFURLSessionManager *self, SEL);
void __cdecl -[AFURLSessionManager setDataTaskDidReceiveData:](struct AFURLSessionManager *self, SEL, id);
id __cdecl -[AFURLSessionManager dataTaskWillCacheResponse](struct AFURLSessionManager *self, SEL);
void __cdecl -[AFURLSessionManager setDataTaskWillCacheResponse:](struct AFURLSessionManager *self, SEL, id);
id __cdecl -[AFURLSessionManager downloadTaskDidFinishDownloading](struct AFURLSessionManager *self, SEL);
void __cdecl -[AFURLSessionManager setDownloadTaskDidFinishDownloading:](struct AFURLSessionManager *self, SEL, id);
id __cdecl -[AFURLSessionManager downloadTaskDidWriteData](struct AFURLSessionManager *self, SEL);
void __cdecl -[AFURLSessionManager setDownloadTaskDidWriteData:](struct AFURLSessionManager *self, SEL, id);
id __cdecl -[AFURLSessionManager downloadTaskDidResume](struct AFURLSessionManager *self, SEL);
void __cdecl -[AFURLSessionManager setDownloadTaskDidResume:](struct AFURLSessionManager *self, SEL, id);
void __cdecl -[AFURLSessionManager .cxx_destruct](struct AFURLSessionManager *self, SEL);
int sub_32B58();
void __fastcall sub_32B9C(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_32BBC(int a1, int a2, int a3, int a4, struct objc_object *a5);
int sub_32BF4();
void __fastcall sub_32C38(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[UIActivityIndicatorView(AFNetworking) setAnimatingWithStateOfOperation:](struct UIActivityIndicatorView *self, SEL, id);
void __cdecl -[UIActivityIndicatorView(AFNetworking) af_startAnimating](struct UIActivityIndicatorView *self, SEL);
void *__fastcall sub_32DF4(int a1, int a2, int a3);
int __fastcall sub_32E08(int a1, int a2);
void __fastcall sub_32E10(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[UIActivityIndicatorView(AFNetworking) af_stopAnimating](struct UIActivityIndicatorView *self, SEL);
void *__fastcall sub_32E74(int a1, int a2, int a3);
int __fastcall sub_32E88(int a1, int a2);
void __fastcall sub_32E90(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl +[UIAlertView(AFNetworking) showAlertViewForRequestOperationWithErrorOnCompletion:delegate:](struct UIAlertView *self, SEL, id, id);
void __cdecl +[UIAlertView(AFNetworking) showAlertViewForRequestOperationWithErrorOnCompletion:delegate:cancelButtonTitle:otherButtonTitles:](struct UIAlertView *self, SEL, id, id, id, id);
int sub_33164(); // weak
int __fastcall sub_3316C(int a1);
int __fastcall sub_33174(int a1, int a2, int a3);
int __fastcall sub_33658(int a1, int a2);
int __fastcall sub_33684(int a1, void *a2, struct objc_object *a3, struct objc_object *a4);
id __cdecl +[UIButton(_AFNetworking) af_sharedImageRequestOperationQueue](struct UIButton_meta *self, SEL);
void *sub_336EC();
id __cdecl -[UIButton(_AFNetworking) af_imageRequestOperationForState:](struct UIButton *self, SEL, unsigned int);
void __cdecl -[UIButton(_AFNetworking) af_setImageRequestOperation:forState:](struct UIButton *self, SEL, id, unsigned int);
id __cdecl -[UIButton(_AFNetworking) af_backgroundImageRequestOperationForState:](struct UIButton *self, SEL, unsigned int);
void __cdecl -[UIButton(_AFNetworking) af_setBackgroundImageRequestOperation:forState:](struct UIButton *self, SEL, id, unsigned int);
id __cdecl +[UIButton(AFNetworking) sharedImageCache](struct UIButton_meta *self, SEL);
void __cdecl +[UIButton(AFNetworking) setSharedImageCache:](struct UIButton *self, SEL, id);
id __cdecl -[UIButton(AFNetworking) imageResponseSerializer](struct UIButton *self, SEL);
void __fastcall sub_338C4(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[UIButton(AFNetworking) setImageResponseSerializer:](struct UIButton *self, SEL, id);
void __cdecl -[UIButton(AFNetworking) setImageForState:withURL:](struct UIButton *self, SEL, unsigned int, id);
void __cdecl -[UIButton(AFNetworking) setImageForState:withURL:placeholderImage:](struct UIButton *self, SEL, unsigned int, id, id);
void __cdecl -[UIButton(AFNetworking) setImageForState:withURLRequest:placeholderImage:success:failure:](struct UIButton *self, SEL, unsigned int, id, id, id, id);
void __fastcall sub_33D64(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, int a25, int a26, int a27, int a28, int a29, int a30, int a31, int a32, int a33, char a34, int a35, int a36, unsigned int a37, int a38);
void __fastcall sub_33DA4(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_33F1C(int a1, int a2);
void __fastcall sub_33F48(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_33F68(struct objc_object *a1, void *a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_34020(int a1, int a2);
void __fastcall sub_34040(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[UIButton(AFNetworking) setBackgroundImageForState:withURL:](struct UIButton *self, SEL, unsigned int, id);
void __cdecl -[UIButton(AFNetworking) setBackgroundImageForState:withURL:placeholderImage:](struct UIButton *self, SEL, unsigned int, id, id);
void __cdecl -[UIButton(AFNetworking) setBackgroundImageForState:withURLRequest:placeholderImage:success:failure:](struct UIButton *self, SEL, unsigned int, id, id, id, id);
void __fastcall sub_344A4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, int a25, int a26, int a27, int a28, int a29, int a30, int a31, int a32, int a33, char a34, int a35, int a36, unsigned int a37, int a38);
void __fastcall sub_344E4(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_3465C(int a1, int a2);
void __fastcall sub_34688(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_346A8(struct objc_object *a1, void *a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_34760(int a1, int a2);
void __fastcall sub_34780(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[UIButton(AFNetworking) cancelImageRequestOperationForState:](struct UIButton *self, SEL, unsigned int);
void __cdecl -[UIButton(AFNetworking) cancelBackgroundImageRequestOperationForState:](struct UIButton *self, SEL, unsigned int);
id __cdecl +[UIImageView(_AFNetworking) af_sharedImageRequestOperationQueue](struct UIImageView_meta *self, SEL);
void *sub_34884();
id __cdecl -[UIImageView(_AFNetworking) af_imageRequestOperation](struct UIImageView *self, SEL);
void __cdecl -[UIImageView(_AFNetworking) af_setImageRequestOperation:](struct UIImageView *self, SEL, id);
id __cdecl +[UIImageView(AFNetworking) sharedImageCache](struct UIImageView_meta *self, SEL);
void __fastcall sub_34978(int a1, int a2, int a3, int a4, struct objc_object *a5);
void *sub_34A5C();
void __cdecl +[UIImageView(AFNetworking) setSharedImageCache:](struct UIImageView *self, SEL, id);
id __cdecl -[UIImageView(AFNetworking) imageResponseSerializer](struct UIImageView *self, SEL);
void __fastcall sub_34AFC(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[UIImageView(AFNetworking) setImageResponseSerializer:](struct UIImageView *self, SEL, id);
void __cdecl -[UIImageView(AFNetworking) setImageWithURL:](struct UIImageView *self, SEL, id);
void __cdecl -[UIImageView(AFNetworking) setImageWithURL:placeholderImage:](struct UIImageView *self, SEL, id, id);
void __cdecl -[UIImageView(AFNetworking) setImageWithURLRequest:placeholderImage:success:failure:](struct UIImageView *self, SEL, id, id, id, id);
void __fastcall sub_35000(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, int a25, int a26, int a27, int a28, int a29, int a30, int a31, int a32, char a33, int a34, int a35, int a36, unsigned int a37, int a38);
void __fastcall sub_3504C(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_35200(int a1, int a2);
void __fastcall sub_3522C(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_3524C(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_35398(int a1, int a2);
void __fastcall sub_353C4(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[UIImageView(AFNetworking) cancelImageRequestOperation](struct UIImageView *self, SEL);
id __cdecl -[AFImageCache cachedImageForRequest:](struct AFImageCache *self, SEL, id);
void __cdecl -[AFImageCache cacheImage:forRequest:](struct AFImageCache *self, SEL, id, id);
char __cdecl -[UIProgressView(AFNetworking) af_uploadProgressAnimated](struct UIProgressView *self, SEL);
void __cdecl -[UIProgressView(AFNetworking) af_setUploadProgressAnimated:](struct UIProgressView *self, SEL, char);
char __cdecl -[UIProgressView(AFNetworking) af_downloadProgressAnimated](struct UIProgressView *self, SEL);
void __cdecl -[UIProgressView(AFNetworking) af_setDownloadProgressAnimated:](struct UIProgressView *self, SEL, char);
void __cdecl -[UIProgressView(AFNetworking) setProgressWithUploadProgressOfOperation:animated:](struct UIProgressView *self, SEL, id, char);
void __fastcall sub_357B2(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, char a18, int a19, int a20, unsigned int a21, int a22);
int __fastcall sub_357EC(int a1, int a2, int a3, int a4, int a5, int a6);
void __fastcall sub_358A4(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_35928(int a1, int a2);
int __fastcall sub_35930(int a1);
int __fastcall sub_35938(int a1, int a2);
int __fastcall sub_3595C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4);
void __cdecl -[UIProgressView(AFNetworking) setProgressWithDownloadProgressOfOperation:animated:](struct UIProgressView *self, SEL, id, char);
void __fastcall sub_35AC2(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, char a18, int a19, int a20, unsigned int a21, int a22);
int __fastcall sub_35AFC(int a1, int a2, int a3, int a4, int a5, int a6);
void __fastcall sub_35BB4(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_35C38(int a1, int a2);
int __fastcall sub_35C40(int a1);
int __fastcall sub_35C48(int a1, int a2);
int __fastcall sub_35C6C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4);
void __cdecl -[UIRefreshControl(AFNetworking) setRefreshingWithStateOfOperation:](struct UIRefreshControl *self, SEL, id);
void __cdecl -[UIRefreshControl(AFNetworking) af_beginRefreshing](struct UIRefreshControl *self, SEL);
void *__fastcall sub_35E18(int a1, int a2, int a3);
int __fastcall sub_35E2C(int a1, int a2);
void __fastcall sub_35E34(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[UIRefreshControl(AFNetworking) af_endRefreshing](struct UIRefreshControl *self, SEL);
void *__fastcall sub_35E98(int a1, int a2, int a3);
int __fastcall sub_35EAC(int a1, int a2);
void __fastcall sub_35EB4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[UIWebView(_AFNetworking) af_HTTPRequestOperation](struct UIWebView *self, SEL);
void __cdecl -[UIWebView(_AFNetworking) af_setHTTPRequestOperation:](struct UIWebView *self, SEL, id);
id __cdecl -[UIWebView(AFNetworking) requestSerializer](struct UIWebView *self, SEL);
void __fastcall sub_35F50(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[UIWebView(AFNetworking) setRequestSerializer:](struct UIWebView *self, SEL, id);
id __cdecl -[UIWebView(AFNetworking) responseSerializer](struct UIWebView *self, SEL);
void __fastcall sub_36014(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[UIWebView(AFNetworking) setResponseSerializer:](struct UIWebView *self, SEL, id);
void __cdecl -[UIWebView(AFNetworking) loadRequest:progress:success:failure:](struct UIWebView *self, SEL, id, id, id, id);
id __fastcall sub_3611C(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_36218(int a1, int a2);
void __fastcall sub_36224(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[UIWebView(AFNetworking) loadRequest:MIMEType:textEncodingName:progress:success:failure:](struct UIWebView *self, SEL, id, id, id, id, id, id);
void __fastcall sub_36646(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, int a25, int a26, int a27, int a28, int a29, int a30, int a31, int a32, int a33, char a34, int a35, int a36, unsigned int a37, int a38);
void __fastcall sub_36688(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_368C8(int a1, int a2);
void __fastcall sub_368F8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_3691C(int a1);
int __fastcall sub_3692C(int a1, int a2);
void __fastcall sub_36938(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl +[BBIconFont(FontAwesome) load](struct BBIconFont_meta *self, SEL);
void __cdecl +[BBIconFont registerFontName:prefix:dictionary:](struct BBIconFont *self, SEL, id, id, id);
id __cdecl +[BBIconFont fonts](struct BBIconFont_meta *self, SEL);
id __cdecl +[BBIconFont fontByName:](struct BBIconFont *self, SEL, id);
id __cdecl +[BBIconFont attributedStringWithMarkup:size:tag:](struct BBIconFont *self, SEL, id, float, id);
id __cdecl +[BBIconFont parseFontName:defaultSize:](struct BBIconFont *self, SEL, id, float);
id __cdecl +[BBIconFont imageWithIconNamed:size:scale:color:backgroundColor:](struct BBIconFont *self, SEL, id, struct CGSize, float, id, id);
id __cdecl +[BBIconFont imageWithIconNamed:defaultColor:](struct BBIconFont *self, SEL, id, id);
id __cdecl +[BBIconFont colorWithString:](struct BBIconFont *self, SEL, id);
void __cdecl +[UIImage(ImageWithIconNamed) load](struct UIImage_meta *self, SEL);
id __cdecl +[UIImage(ImageWithIconNamed) __tintColor](struct UIImage_meta *self, SEL);
id __cdecl +[UIImage(ImageWithIconNamed) imageWithIconNamed:](struct UIImage *self, SEL, id);
id __cdecl +[UIImage(ImageWithIconNamed) imageWithIconNamed:defaultColor:](struct UIImage *self, SEL, id, id);
void __cdecl -[BBAccessoryButton tintColorDidChange](struct BBAccessoryButton *self, SEL);
id __cdecl -[BBAccessoryButton initWithSetting:](struct BBAccessoryButton *self, SEL, id);
id __cdecl -[BBAccessoryButton buttonImageFromColor:cornerRadius:](struct BBAccessoryButton *self, SEL, id, float);
id __cdecl -[BBAccessoryButton borderColor](struct BBAccessoryButton *self, SEL);
void __cdecl -[BBAccessoryButton setBorderColor:](struct BBAccessoryButton *self, SEL, id);
id __cdecl -[BBAccessoryButton textColor](struct BBAccessoryButton *self, SEL);
void __cdecl -[BBAccessoryButton setTextColor:](struct BBAccessoryButton *self, SEL, id);
void __cdecl -[BBAccessoryButton .cxx_destruct](struct BBAccessoryButton *self, SEL);
void __cdecl +[BBAction idle:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction applicationState:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction completeBackgroundURLSession:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction completeRemoteNotificationFetch:handler:](struct BBAction *self, SEL, id, id);
void __cdecl -[BBCalendarViewController collectionView:didSelectItemAtIndexPath:](struct BBCalendarViewController *self, SEL, id, id);
void __cdecl -[BBCalendarViewController viewWillAppear:](struct BBCalendarViewController *self, SEL, char);
void __cdecl -[BBCalendarViewController viewDidDisappear:](struct BBCalendarViewController *self, SEL, char);
id __cdecl -[BBCalendarViewController selectDateBlock](struct BBCalendarViewController *self, SEL);
void __cdecl -[BBCalendarViewController setSelectDateBlock:](struct BBCalendarViewController *self, SEL, id);
void __cdecl -[BBCalendarViewController .cxx_destruct](struct BBCalendarViewController *self, SEL);
void __cdecl +[BBAction(Calendar) load](struct BBAction_meta *self, SEL);
void __cdecl +[BBAction(Calendar) calendarAddHolidays:handler:](struct BBAction *self, SEL, id, id);
void __cdecl -[BBAction(Calendar) calendar:handler:](struct BBAction *self, SEL, id, id);
void __fastcall sub_3DB58(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_3DBE4(int a1, int a2);
void __fastcall sub_3DBF0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[BBAlertView alertView:didDismissWithButtonIndex:](struct BBAlertView *self, SEL, id, int);
id __cdecl -[BBAlertView didDismissBlock](struct BBAlertView *self, SEL);
void __cdecl -[BBAlertView setDidDismissBlock:](struct BBAlertView *self, SEL, id);
void __cdecl -[BBAlertView .cxx_destruct](struct BBAlertView *self, SEL);
void __cdecl -[BBActionSheet actionSheet:didDismissWithButtonIndex:](struct BBActionSheet *self, SEL, id, int);
id __cdecl -[BBActionSheet didDismissBlock](struct BBActionSheet *self, SEL);
void __cdecl -[BBActionSheet setDidDismissBlock:](struct BBActionSheet *self, SEL, id);
void __cdecl -[BBActionSheet .cxx_destruct](struct BBActionSheet *self, SEL);
void __cdecl -[BBAction alert:handler:](struct BBAction *self, SEL, id, id);
void __fastcall sub_3E38C(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_3E3F0(int a1, int a2);
void __fastcall sub_3E3FC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_3E404(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_3E45C(int a1, int a2);
void __fastcall sub_3E468(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_3E470(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_3E4C4(int a1, int a2);
void __fastcall sub_3E4D0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[BBAction actionSheet:handler:](struct BBAction *self, SEL, id, id);
void __fastcall sub_3EF18(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_3EF6C(int a1, int a2);
void __fastcall sub_3EF78(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_3EF80(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_3EFD4(int a1, int a2);
void __fastcall sub_3EFE0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_3EFE8(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_3F03C(int a1, int a2);
void __fastcall sub_3F048(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_3F050(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_3F0A4(int a1, int a2);
void __fastcall sub_3F0B0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl +[BBAction md5:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction sha1:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction sha256:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction sha512:handler:](struct BBAction *self, SEL, id, id);
id __cdecl +[BBAction md5:](struct BBAction *self, SEL, id);
id __cdecl +[BBAction sha1:](struct BBAction *self, SEL, id);
id __cdecl +[BBAction sha256:](struct BBAction *self, SEL, id);
id __cdecl +[BBAction sha512:](struct BBAction *self, SEL, id);
void __cdecl -[BBAction AESEncrypt:handler:](struct BBAction *self, SEL, id, id);
void __cdecl -[BBAction AESDecrypt:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction eventAuth:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction addEvent:handler:](struct BBAction *self, SEL, id, id);
void __fastcall sub_3FB94(int a1, int a2, int a3);
void __fastcall sub_3FC38(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_3FFF0(int a1, int a2);
void __fastcall sub_4001C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_40040(int a1, int a2);
void __fastcall sub_40060(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void *__fastcall sub_4007C(int a1);
void __cdecl +[BBAction(Flurry) load](struct BBAction_meta *self, SEL);
id __cdecl +[BBAction(Flurry) flurryCreatedTime](struct BBAction_meta *self, SEL);
void __cdecl +[BBAction(Flurry) startFlurry:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction(Flurry) logEvent:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction(Flurry) logError:handler:](struct BBAction *self, SEL, id, id);
id __cdecl -[BBAction bbmapViewController](struct BBAction *self, SEL);
void __cdecl -[BBAction addAnnotation:handler:](struct BBAction *self, SEL, id, id);
void __cdecl -[BBAction removeAnnotation:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction openMap:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction locationConverter:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction location:handler:](struct BBAction *self, SEL, id, id);
int __fastcall sub_416A4(int a1, int a2, int a3, int a4);
int __fastcall sub_41AD0(int a1, int a2);
void __fastcall sub_41ADC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl +[BBAction locationAccuracys](struct BBAction_meta *self, SEL);
char *sub_41B28();
id __cdecl +[BBAction locationStatuses](struct BBAction_meta *self, SEL);
char *sub_41CF0();
void __cdecl +[BBMailComposeViewController load](struct BBMailComposeViewController_meta *self, SEL);
id __cdecl -[BBMailComposeViewController init](struct BBMailComposeViewController *self, SEL);
void __cdecl -[BBMailComposeViewController mailComposeController:didFinishWithResult:error:](struct BBMailComposeViewController *self, SEL, id, int, id);
id __cdecl -[BBMailComposeViewController didFinishBlock](struct BBMailComposeViewController *self, SEL);
void __cdecl -[BBMailComposeViewController setDidFinishBlock:](struct BBMailComposeViewController *self, SEL, id);
void __cdecl -[BBMailComposeViewController .cxx_destruct](struct BBMailComposeViewController *self, SEL);
void __cdecl -[BBAction mail:handler:](struct BBAction *self, SEL, id, id);
void __fastcall sub_42360(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_423C8(int a1, int a2);
void __fastcall sub_423D4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[BBAction message:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction message:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction dismissMessage:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction message:controller:overlay:handler:](struct BBAction *self, SEL, id, id, char, id);
void __fastcall sub_42A00(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_42A74(int a1, int a2);
void __fastcall sub_42A80(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_42A88(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_42AD4(int a1, int a2);
void __fastcall sub_42AE0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl +[BBAction tsMessageTypes](struct BBAction_meta *self, SEL);
int sub_42B2C();
void __cdecl +[BBAction setTabIconBadge:handler:](struct BBAction *self, SEL, id, id);
void __cdecl -[BBAction setTabIconBadge:handler:](struct BBAction *self, SEL, id, id);
void __cdecl -[BBAction selectTab:handler:](struct BBAction *self, SEL, id, id);
void __cdecl -[BBAction selectPage:handler:](struct BBAction *self, SEL, id, id);
void __cdecl -[BBAction selectPageAnimated:handler:](struct BBAction *self, SEL, id, id);
void __cdecl -[BBAction child:handler:](struct BBAction *self, SEL, id, id);
void __cdecl -[BBAction back:handler:](struct BBAction *self, SEL, id, id);
void __cdecl -[BBAction dismiss:handler:](struct BBAction *self, SEL, id, id);
void __cdecl -[BBAction _open:handler:](struct BBAction *self, SEL, id, id);
int __cdecl -[BBAction adaptivePresentationStyleForPresentationController:](struct BBAction *self, SEL, id);
void __cdecl -[BBAction popoverPresentationControllerDidDismissPopover:](struct BBAction *self, SEL, id);
void __cdecl -[BBAction _callViewDidPresent:](struct BBAction *self, SEL, id);
void __cdecl -[BBAction _dismissModalViewController](struct BBAction *self, SEL);
id __cdecl +[BBAction transitionStyles](struct BBAction_meta *self, SEL);
int sub_44500();
id __cdecl +[BBAction presentationStyles](struct BBAction_meta *self, SEL);
char *sub_44670();
void __cdecl +[BBAction cancelLocalNotification:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction scheduleLocalNotification:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction localNotifications:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction setApplicationIconBadgeNumber:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction isEnabledForUserNotification:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction isRegisteredForRemoteNotification:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction registerUserNotification:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction handleRegisterUserNotificationSettings:](struct BBAction *self, SEL, id);
void __cdecl +[BBAction registerRemoteNotification:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction handleRemoteNotificationToken:error:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction openURL:](struct BBAction *self, SEL, id);
void __cdecl +[BBAction openURL:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction checkURL:handler:](struct BBAction *self, SEL, id, id);
char __cdecl +[BBAction canOpenURL:](struct BBAction *self, SEL, id);
void __cdecl +[BBAddPassesViewController load](struct BBAddPassesViewController_meta *self, SEL);
void __cdecl -[BBAddPassesViewController addPassesViewControllerDidFinish:](struct BBAddPassesViewController *self, SEL, id);
id __cdecl -[BBAddPassesViewController didFinishBlock](struct BBAddPassesViewController *self, SEL);
void __cdecl -[BBAddPassesViewController setDidFinishBlock:](struct BBAddPassesViewController *self, SEL, id);
void __cdecl -[BBAddPassesViewController .cxx_destruct](struct BBAddPassesViewController *self, SEL);
char __cdecl +[BBAction isPassLibraryAvailable](struct BBAction_meta *self, SEL);
void __cdecl -[BBAction addPass:handler:](struct BBAction *self, SEL, id, id);
void __fastcall sub_460DC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, char a25, int a26, int a27, unsigned int a28, int a29);
void __fastcall sub_46120(int a1, int a2, int a3, int a4);
void __fastcall sub_462D8(int a1, void *a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_46408(int a1, int a2);
void __fastcall sub_46424(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_4643C(int a1, int a2);
void __fastcall sub_4646C(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl +[BBAction checkPass:handler:](struct BBAction *self, SEL, id, id);
char __cdecl +[BBAction hasPass:id:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction pasteboard:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction getPasteboard:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction showWindowPregress:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction hideWindowPregress:handler:](struct BBAction *self, SEL, id, id);
void __cdecl -[BBAction showPregress:handler:](struct BBAction *self, SEL, id, id);
void __cdecl -[BBAction hidePregress:handler:](struct BBAction *self, SEL, id, id);
char __cdecl -[BBAction showPregress:](struct BBAction *self, SEL, id);
char __cdecl -[BBAction hidePregress](struct BBAction *self, SEL);
void __cdecl -[BBAction showPregress](struct BBAction *self, SEL);
id __cdecl -[BBAction pregressView](struct BBAction *self, SEL);
void __fastcall sub_477BE(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, char a22, int a23, int a24, unsigned int a25, int a26);
void __fastcall sub_477F8(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_4786C(int a1, int a2);
int __fastcall sub_47874(int a1);
id __cdecl -[BBQueryStringPair initWithField:value:](struct BBQueryStringPair *self, SEL, id, id);
id __cdecl -[BBQueryStringPair URLEncodedStringValueWithEncoding:](struct BBQueryStringPair *self, SEL, unsigned int);
id __fastcall sub_47AF0(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[BBQueryStringPair field](struct BBQueryStringPair *self, SEL);
void __cdecl -[BBQueryStringPair setField:](struct BBQueryStringPair *self, SEL, id);
id __cdecl -[BBQueryStringPair value](struct BBQueryStringPair *self, SEL);
void __cdecl -[BBQueryStringPair setValue:](struct BBQueryStringPair *self, SEL, id);
void __cdecl -[BBQueryStringPair .cxx_destruct](struct BBQueryStringPair *self, SEL);
id __fastcall sub_47BCC(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[BBHTTPRequestSerializer init](struct BBHTTPRequestSerializer *self, SEL);
void __fastcall sub_48218(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, unsigned int a17);
id __fastcall sub_48244(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_4842C(int a1, int a2);
int __fastcall sub_48434(int a1);
id __cdecl -[BBHTTPRequestSerializer requestWithMethod:URLString:parameters:error:](struct BBHTTPRequestSerializer *self, SEL, id, id, id, id *);
void __cdecl +[BBAction reachability:handler:](struct BBAction *self, SEL, id, id);
void __fastcall sub_485A0(int a1);
int __fastcall sub_486A0(int a1);
int __fastcall sub_486C0(int a1, int a2);
void __fastcall sub_486DC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_486F4(int a1, int a2);
void __fastcall sub_48714(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl +[BBAction reachabilityStartNotifier:handler:](struct BBAction *self, SEL, id, id);
void __fastcall sub_487D0(int a1);
void __fastcall sub_48960(int a1, void *a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_48998(int a1, void *a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_489D0(int a1);
int __fastcall sub_489F0(int a1, int a2);
void __fastcall sub_48A0C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_48A24(int a1, int a2);
void __fastcall sub_48A44(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl +[BBAction reachabilityStopNotifier:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction reachabilityStatus:handler:](struct BBAction *self, SEL, id, id);
void __cdecl -[BBAction cancelRequest:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction cancelRequest:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction cancelRequest:requests:_handler:](struct BBAction *self, SEL, id, id, id);
void __cdecl -[BBAction request:handler:](struct BBAction *self, SEL, id, id);
void __fastcall sub_48F90(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, char a22, int a23, int a24, unsigned int a25, int a26);
void __fastcall sub_48FCC(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_490A8(int a1, int a2);
void __fastcall sub_490CC(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl +[BBAction request:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction request:requests:_handler:](struct BBAction *self, SEL, id, id, id);
void __fastcall sub_492B8(int a1, int a2, int a3, int a4);
int __fastcall sub_496A0(int a1, int a2);
void __fastcall sub_496CC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl +[BBAction requests](struct BBAction_meta *self, SEL);
id __cdecl +[BBAction sessionConfiguration:](struct BBAction *self, SEL, id);
id __cdecl -[BBAction requests](struct BBAction *self, SEL);
char *__fastcall sub_49A10(int a1, int a2, int a3);
int __fastcall sub_49B38(int a1, int a2);
void __fastcall sub_49B40(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl +[BBAction requestForUrlConfig:completionHandler:](struct BBAction *self, SEL, id, id);
id __fastcall sub_4A6A8(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __fastcall sub_4A6D4(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_4A760(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_4A8C0(int a1, int a2);
void __fastcall sub_4A8E0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_4A8F8(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_4A9BC(int a1, int a2);
void __fastcall sub_4A9C8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_4A9D0(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_4AAA0(int a1, int a2);
void __fastcall sub_4AAAC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_4AAB4(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_4ABD4(int a1, int a2);
void __fastcall sub_4ABE0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __fastcall sub_4ABE8(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl +[BBAction setCookie:url:sessionId:](struct BBAction *self, SEL, id, id, id);
id __cdecl +[BBAction getCookie:sessionId:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction setCookie:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction getCookie:handler:](struct BBAction *self, SEL, id, id);
id __cdecl +[BBAction cookieStorageForSessionId:](struct BBAction *self, SEL, id);
void __cdecl +[BBAction saveSessions:handler:](struct BBAction *self, SEL, id, id);
id __cdecl +[BBAction sessionKey:](struct BBAction *self, SEL, id);
void __cdecl +[BBAction cleanSessions:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction restoreSessions:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction reloadWindow:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction syncResource:handler:](struct BBAction *self, SEL, id, id);
void __fastcall sub_4C464(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_4C494(int a1, int a2);
void __fastcall sub_4C4A0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl +[BBAction writeFile:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction readFile:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction shareRegister:handler:](struct BBAction *self, SEL, id, id);
char __cdecl +[BBAction shareRegister:](struct BBAction *self, SEL, id);
id __cdecl +[BBAction shareChannels](struct BBAction_meta *self, SEL);
void __cdecl +[BBAction shareChannels:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction share:handler:](struct BBAction *self, SEL, id, id);
void __fastcall sub_4D3E4(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_4D47C(int a1, int a2);
void __fastcall sub_4D488(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl +[BBAction chooseMultimediaType:AndSetting:](struct BBAction *self, SEL, id, id);
id __cdecl +[BBAction compressImage:](struct BBAction *self, SEL, id);
void __cdecl +[BBAction sendWeibo:handler:](struct BBAction *self, SEL, id, id);
int __fastcall sub_4D7C4(int a1);
int __fastcall sub_4D7E4(int a1, int a2);
void __fastcall sub_4D7F0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_4D7F8(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_4D828(int a1, int a2);
void __fastcall sub_4D834(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl +[BBAction sendQQ:AndMessage:handler:](struct BBAction *self, SEL, id, id, id);
void __fastcall sub_4DBD4(int a1, void *a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_4DC20(int a1, int a2);
void __fastcall sub_4DC2C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_4DC34(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_4DCA0(int a1, int a2);
void __fastcall sub_4DCAC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_4DCB4(int a1, void *a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_4DD00(int a1, int a2);
void __fastcall sub_4DD0C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_4DD14(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_4DD80(int a1, int a2);
void __fastcall sub_4DD8C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_4DD94(int a1, void *a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_4DDE0(int a1, int a2);
void __fastcall sub_4DDEC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_4DDF4(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_4DE60(int a1, int a2);
void __fastcall sub_4DE6C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_4DE74(int a1, void *a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_4DEC0(int a1, int a2);
void __fastcall sub_4DECC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_4DED4(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_4DF40(int a1, int a2);
void __fastcall sub_4DF4C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl +[BBAction sendRenren:AndMessage:handler:](struct BBAction *self, SEL, id, id, id);
void __fastcall sub_4E14C(int a1, void *a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_4E198(int a1, int a2);
void __fastcall sub_4E1A4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_4E1AC(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_4E218(int a1, int a2);
void __fastcall sub_4E224(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_4E22C(int a1, void *a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_4E278(int a1, int a2);
void __fastcall sub_4E284(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_4E28C(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_4E2F8(int a1, int a2);
void __fastcall sub_4E304(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl +[BBAction sendWechat:AndMessage:handler:](struct BBAction *self, SEL, id, id, id);
void __fastcall sub_4E5D8(int a1, void *a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_4E624(int a1, int a2);
void __fastcall sub_4E630(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_4E638(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_4E6A4(int a1, int a2);
void __fastcall sub_4E6B0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_4E6B8(int a1, void *a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_4E704(int a1, int a2);
void __fastcall sub_4E710(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_4E718(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_4E784(int a1, int a2);
void __fastcall sub_4E790(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_4E798(int a1, void *a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_4E7E4(int a1, int a2);
void __fastcall sub_4E7F0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_4E7F8(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_4E864(int a1, int a2);
void __fastcall sub_4E870(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl +[BBAction playSound:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction stopSound:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction registerDefaults:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction setUserDefaults:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction getUserDefaults:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction updateStorage:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction getStorage:handler:](struct BBAction *self, SEL, id, id);
id __cdecl +[BBAction _keychainQuery:](struct BBAction *self, SEL, id);
id __cdecl +[BBAction _keychain](struct BBAction_meta *self, SEL);
void __fastcall sub_4F702(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, unsigned int a9, int a10, int a11);
void __cdecl +[BBAction _updateKeychain:](struct BBAction *self, SEL, id);
id __cdecl +[BBAction _userDefaults](struct BBAction_meta *self, SEL);
void __cdecl +[BBAction _updateUserDefaults:](struct BBAction *self, SEL, id);
id __cdecl -[BBStoreProductViewController init](struct BBStoreProductViewController *self, SEL);
void __cdecl +[BBStoreProductViewController load](struct BBStoreProductViewController_meta *self, SEL);
void __cdecl -[BBStoreProductViewController productViewControllerDidFinish:](struct BBStoreProductViewController *self, SEL, id);
id __cdecl -[BBStoreProductViewController didFinishBlock](struct BBStoreProductViewController *self, SEL);
void __cdecl -[BBStoreProductViewController setDidFinishBlock:](struct BBStoreProductViewController *self, SEL, id);
void __cdecl -[BBStoreProductViewController .cxx_destruct](struct BBStoreProductViewController *self, SEL);
void __cdecl -[BBAction openStore:handler:](struct BBAction *self, SEL, id, id);
void __fastcall sub_4FE80(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, char a24, int a25, int a26, int a27, int a28, unsigned int a29, int a30);
void __fastcall sub_4FEB8(int a1, int a2, int a3);
int __fastcall sub_4FFA8(int a1, void *a2);
int __fastcall sub_4FFE0(int a1, int a2);
void __fastcall sub_4FFEC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_4FFF4(int a1, int a2);
void __fastcall sub_50020(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[BBAction tableView](struct BBAction *self, SEL);
id __cdecl -[BBAction tableViewOrCollectionView](struct BBAction *self, SEL);
void __cdecl -[BBAction deselect:handler:](struct BBAction *self, SEL, id, id);
void __cdecl -[BBAction fetchValues:handler:](struct BBAction *self, SEL, id, id);
void __cdecl -[BBAction focusRow:handler:](struct BBAction *self, SEL, id, id);
void __cdecl -[BBAction deleteRow:handler:](struct BBAction *self, SEL, id, id);
void __cdecl -[BBAction stopRefresh](struct BBAction *self, SEL);
void __cdecl -[BBAction stopRefresh:handler:](struct BBAction *self, SEL, id, id);
void __cdecl -[BBAction refresh:handler:](struct BBAction *self, SEL, id, id);
void __cdecl -[BBAction scrollToTop:handler:](struct BBAction *self, SEL, id, id);
void __cdecl -[BBAction updateRow:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction addTrustedDomain:handler:](struct BBAction *self, SEL, id, id);
id __cdecl -[BBAction bbWebView](struct BBAction *self, SEL);
void __cdecl -[BBAction webViewCanGoBack:handler:](struct BBAction *self, SEL, id, id);
void __cdecl -[BBAction webViewCanGoForward:handler:](struct BBAction *self, SEL, id, id);
void __cdecl -[BBAction webViewGoBack:handler:](struct BBAction *self, SEL, id, id);
void __cdecl -[BBAction webViewGoForward:handler:](struct BBAction *self, SEL, id, id);
void __cdecl -[BBAction webViewReload:handler:](struct BBAction *self, SEL, id, id);
void __cdecl -[BBAction webViewStopLoading:handler:](struct BBAction *self, SEL, id, id);
void __cdecl -[BBAction evalScript:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction setBridge:](struct BBAction *self, SEL, id);
void __cdecl -[BBAction dealloc](struct BBAction *self, SEL);
id __cdecl -[BBAction init](struct BBAction *self, SEL);
id __cdecl -[BBAction initWithPageId:](struct BBAction *self, SEL, int32_t);
void __cdecl -[BBAction windowBecomeActive:](struct BBAction *self, SEL, id);
void __cdecl -[BBAction receiver:](struct BBAction *self, SEL, id);
void __fastcall sub_51938(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_51BBC(int a1, int a2);
void __fastcall sub_51BC8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[BBAction action:data:](struct BBAction *self, SEL, id, id);
void __cdecl -[BBAction action:data:extra:](struct BBAction *self, SEL, id, id, id);
void __cdecl -[BBAction callAction:handler:](struct BBAction *self, SEL, id, id);
void __cdecl -[BBAction parent:handler:](struct BBAction *self, SEL, id, id);
void __cdecl -[BBAction parentAction:handler:](struct BBAction *self, SEL, id, id);
id __cdecl +[BBAction errorWithCode:message:](struct BBAction *self, SEL, int, id);
void __cdecl -[BBAction update:](struct BBAction *self, SEL, id);
void __fastcall sub_52FD0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, char a21, int a22, int a23, int a24, int a25, int a26, int a27, int a28, char a29, int a30, int a31, int a32, int a33, int a34, int a35, int a36, char a37, int a38, int a39, int a40, int a41, int a42, int a43, int a44, int a45, int a46, int a47, int a48, unsigned int a49, int a50);
void __fastcall sub_53020(int a1, void *a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_530C8(int a1, int a2);
void __fastcall sub_530E0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_530F8(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_531C4(int a1, int a2);
int __fastcall sub_531E4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4);
void __fastcall sub_531FC(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_532C8(int a1, int a2);
int __fastcall sub_532E8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4);
void __fastcall sub_53300(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_533CC(int a1, int a2);
int __fastcall sub_533EC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4);
void __cdecl -[BBAction _update:handler:](struct BBAction *self, SEL, id, id);
void __cdecl +[BBAction log:handler:](struct BBAction *self, SEL, id, id);
void __cdecl -[BBAction updateToolBar:](struct BBAction *self, SEL, id);
void __fastcall sub_53F20(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, int a25, int a26, int a27, int a28, int a29, int a30, int a31, int a32, int a33, int a34, int a35, int a36, int a37, int a38, int a39, int a40, int a41, int a42, int a43, int a44, int a45, int a46, int a47, int a48, int a49, int a50, int a51, int a52, int a53, int a54, int a55, int a56, int a57, int a58, int a59, unsigned int a60);
void __fastcall sub_53F50(int a1, void *a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_53FF8(int a1, int a2);
void __fastcall sub_54010(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_54028(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_540D0(int a1, int a2);
void __fastcall sub_540FC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[BBAction updateToolbar](struct BBAction *self, SEL);
id __cdecl +[BBAction toolbarStyles](struct BBAction_meta *self, SEL);
void __fastcall sub_54620(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[BBAction delegate](struct BBAction *self, SEL);
void __cdecl -[BBAction setDelegate:](struct BBAction *self, SEL, id);
id __cdecl -[BBAction bridge](struct BBAction *self, SEL);
void __cdecl -[BBAction setBridge:](struct BBAction *self, SEL, id);
int32_t __cdecl -[BBAction pageId](struct BBAction *self, SEL);
void __cdecl -[BBAction setPageId:](struct BBAction *self, SEL, int32_t);
id __cdecl -[BBAction parent](struct BBAction *self, SEL);
void __cdecl -[BBAction setParent:](struct BBAction *self, SEL, id);
id __cdecl -[BBAction attrs](struct BBAction *self, SEL);
void __cdecl -[BBAction setAttrs:](struct BBAction *self, SEL, id);
id __cdecl -[BBAction deallocs](struct BBAction *self, SEL);
void __cdecl -[BBAction setDeallocs:](struct BBAction *self, SEL, id);
int __cdecl -[BBAction toolbarBarStyle](struct BBAction *self, SEL);
void __cdecl -[BBAction setToolbarBarStyle:](struct BBAction *self, SEL, int);
id __cdecl -[BBAction toolbarTintColor](struct BBAction *self, SEL);
void __cdecl -[BBAction setToolbarTintColor:](struct BBAction *self, SEL, id);
id __cdecl -[BBAction toolbarBarTintColor](struct BBAction *self, SEL);
void __cdecl -[BBAction setToolbarBarTintColor:](struct BBAction *self, SEL, id);
void __cdecl -[BBAction .cxx_destruct](struct BBAction *self, SEL);
char __cdecl -[BBAppDelegate application:didFinishLaunchingWithOptions:](struct BBAppDelegate *self, SEL, id, id);
char __cdecl -[BBAppDelegate application:openURL:sourceApplication:annotation:](struct BBAppDelegate *self, SEL, id, id, id, id);
char __cdecl -[BBAppDelegate application:openURL:options:](struct BBAppDelegate *self, SEL, id, id, id);
void __cdecl -[BBAppDelegate application:didRegisterUserNotificationSettings:](struct BBAppDelegate *self, SEL, id, id);
void __cdecl -[BBAppDelegate application:didReceiveRemoteNotification:](struct BBAppDelegate *self, SEL, id, id);
void __cdecl -[BBAppDelegate application:didReceiveRemoteNotification:fetchCompletionHandler:](struct BBAppDelegate *self, SEL, id, id, id);
char __cdecl -[BBAppDelegate completeRemoteNotificationFetch](struct BBAppDelegate *self, SEL);
void __cdecl -[BBAppDelegate application:didReceiveLocalNotification:](struct BBAppDelegate *self, SEL, id, id);
void __cdecl -[BBAppDelegate handleReceiveLocalNotification:from:](struct BBAppDelegate *self, SEL, id, id);
void __cdecl -[BBAppDelegate handleReceiveRemoteNotification:from:](struct BBAppDelegate *self, SEL, id, id);
void __cdecl -[BBAppDelegate application:didRegisterForRemoteNotificationsWithDeviceToken:](struct BBAppDelegate *self, SEL, id, id);
void __cdecl -[BBAppDelegate application:didFailToRegisterForRemoteNotificationsWithError:](struct BBAppDelegate *self, SEL, id, id);
void __cdecl -[BBAppDelegate applicationWillResignActive:](struct BBAppDelegate *self, SEL, id);
void __cdecl -[BBAppDelegate applicationDidEnterBackground:](struct BBAppDelegate *self, SEL, id);
void __cdecl -[BBAppDelegate applicationWillEnterForeground:](struct BBAppDelegate *self, SEL, id);
void __cdecl -[BBAppDelegate applicationDidBecomeActive:](struct BBAppDelegate *self, SEL, id);
void __cdecl -[BBAppDelegate applicationWillTerminate:](struct BBAppDelegate *self, SEL, id);
char __cdecl -[BBAppDelegate completeBackgroundURLSession](struct BBAppDelegate *self, SEL);
void __cdecl -[BBAppDelegate application:handleEventsForBackgroundURLSession:completionHandler:](struct BBAppDelegate *self, SEL, id, id, id);
id __cdecl -[BBAppDelegate window](struct BBAppDelegate *self, SEL);
void __cdecl -[BBAppDelegate setWindow:](struct BBAppDelegate *self, SEL, id);
id __cdecl -[BBAppDelegate backgroundTask](struct BBAppDelegate *self, SEL);
void __cdecl -[BBAppDelegate setBackgroundTask:](struct BBAppDelegate *self, SEL, id);
id __cdecl -[BBAppDelegate completionBackgroundURLSessionHandler](struct BBAppDelegate *self, SEL);
void __cdecl -[BBAppDelegate setCompletionBackgroundURLSessionHandler:](struct BBAppDelegate *self, SEL, id);
id __cdecl -[BBAppDelegate completionRemoteNotificationFetchHandler](struct BBAppDelegate *self, SEL);
void __cdecl -[BBAppDelegate setCompletionRemoteNotificationFetchHandler:](struct BBAppDelegate *self, SEL, id);
void __cdecl -[BBAppDelegate .cxx_destruct](struct BBAppDelegate *self, SEL);
void __cdecl +[BBAttribute initialize](struct BBAttribute_meta *self, SEL);
id __cdecl +[BBAttribute attributes](struct BBAttribute_meta *self, SEL);
void __cdecl -[BBAttribute update:](struct BBAttribute *self, SEL, id);
id __cdecl -[BBAttribute formatter](struct BBAttribute *self, SEL);
void __cdecl -[BBAttribute setFormatter:](struct BBAttribute *self, SEL, id);
id __cdecl -[BBAttribute setting](struct BBAttribute *self, SEL);
void __cdecl -[BBAttribute setSetting:](struct BBAttribute *self, SEL, id);
void __cdecl -[BBAttribute .cxx_destruct](struct BBAttribute *self, SEL);
id __cdecl -[BBBadgeLabel init](struct BBBadgeLabel *self, SEL);
void __cdecl -[BBBadgeLabel setFrame:](struct BBBadgeLabel *self, SEL, struct CGRect);
void __cdecl -[BBBadgeLabel drawRect:](struct BBBadgeLabel *self, SEL, struct CGRect);
id __cdecl -[BBBadgeLabel badgeColor](struct BBBadgeLabel *self, SEL);
void __cdecl -[BBBadgeLabel setBadgeColor:](struct BBBadgeLabel *self, SEL, id);
void __cdecl -[BBBadgeLabel .cxx_destruct](struct BBBadgeLabel *self, SEL);
id __cdecl -[BBBadgeRow init](struct BBBadgeRow *self, SEL);
id __cdecl +[BBBadgeRow attributes](struct BBBadgeRow_meta *self, SEL);
void __cdecl -[BBBadgeRow updateCell:tableView:indexPath:](struct BBBadgeRow *self, SEL, id, id, id);
Class __cdecl -[BBBadgeRow cellClass](struct BBBadgeRow *self, SEL);
id __cdecl -[BBBadgeRow badge](struct BBBadgeRow *self, SEL);
void __cdecl -[BBBadgeRow setBadge:](struct BBBadgeRow *self, SEL, id);
id __cdecl -[BBBadgeRow badgeColor](struct BBBadgeRow *self, SEL);
void __cdecl -[BBBadgeRow setBadgeColor:](struct BBBadgeRow *self, SEL, id);
id __cdecl -[BBBadgeRow badgeTextColor](struct BBBadgeRow *self, SEL);
void __cdecl -[BBBadgeRow setBadgeTextColor:](struct BBBadgeRow *self, SEL, id);
void __cdecl -[BBBadgeRow .cxx_destruct](struct BBBadgeRow *self, SEL);
id __cdecl -[BBBadgeTableViewCell initWithStyle:reuseIdentifier:](struct BBBadgeTableViewCell *self, SEL, int, id);
void __cdecl -[BBBadgeTableViewCell layoutSubviews](struct BBBadgeTableViewCell *self, SEL);
id __cdecl -[BBBadgeTableViewCell badgeLabel](struct BBBadgeTableViewCell *self, SEL);
void __cdecl -[BBBadgeTableViewCell .cxx_destruct](struct BBBadgeTableViewCell *self, SEL);
void __cdecl -[BBBarButtonItem onClick](struct BBBarButtonItem *self, SEL);
id __cdecl +[BBBarButtonItem barButtonItemWithSetting:](struct BBBarButtonItem *self, SEL, id);
id __cdecl +[BBBarButtonItem barButtonItemWithSetting:defaultStyle:](struct BBBarButtonItem *self, SEL, id, int);
id __cdecl +[BBBarButtonItem systemItems](struct BBBarButtonItem_meta *self, SEL);
char *sub_573B4();
id __cdecl +[BBBarButtonItem styles](struct BBBarButtonItem_meta *self, SEL);
int sub_5781C();
id __cdecl -[BBBarButtonItem setting](struct BBBarButtonItem *self, SEL);
void __cdecl -[BBBarButtonItem setSetting:](struct BBBarButtonItem *self, SEL, id);
id __cdecl -[BBBarButtonItem clickHandler](struct BBBarButtonItem *self, SEL);
void __cdecl -[BBBarButtonItem setClickHandler:](struct BBBarButtonItem *self, SEL, id);
void __cdecl -[BBBarButtonItem .cxx_destruct](struct BBBarButtonItem *self, SEL);
id __cdecl +[BBButton buttonWithSetting:](struct BBButton *self, SEL, id);
void __cdecl -[BBButton onClick](struct BBButton *self, SEL);
id __cdecl -[BBButton init](struct BBButton *self, SEL);
id __cdecl -[BBButton initWithSetting:](struct BBButton *self, SEL, id);
void __cdecl -[BBButton wrapImage](struct BBButton *self, SEL);
id __cdecl -[BBButton clickHandler](struct BBButton *self, SEL);
void __cdecl -[BBButton setClickHandler:](struct BBButton *self, SEL, id);
void __cdecl -[BBButton .cxx_destruct](struct BBButton *self, SEL);
void __cdecl -[BBButtonGroup setItems:](struct BBButtonGroup *self, SEL, id);
void __fastcall sub_5880C(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_58880(int a1, int a2);
void __fastcall sub_58888(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[BBButtonGroup items](struct BBButtonGroup *self, SEL);
id __cdecl -[BBButtonGroup elements](struct BBButtonGroup *self, SEL);
void __cdecl -[BBButtonGroup setElements:](struct BBButtonGroup *self, SEL, id);
char __cdecl -[BBButtonGroup wrapImage](struct BBButtonGroup *self, SEL);
void __cdecl -[BBButtonGroup setWrapImage:](struct BBButtonGroup *self, SEL, char);
id __cdecl -[BBButtonGroup separatorColor](struct BBButtonGroup *self, SEL);
void __cdecl -[BBButtonGroup setSeparatorColor:](struct BBButtonGroup *self, SEL, id);
id __cdecl -[BBButtonGroup clickHandler](struct BBButtonGroup *self, SEL);
void __cdecl -[BBButtonGroup setClickHandler:](struct BBButtonGroup *self, SEL, id);
void __cdecl -[BBButtonGroup .cxx_destruct](struct BBButtonGroup *self, SEL);
id __cdecl +[BBButtonGroupRow attributes](struct BBButtonGroupRow_meta *self, SEL);
Class __cdecl -[BBButtonGroupRow cellClass](struct BBButtonGroupRow *self, SEL);
void __cdecl -[BBButtonGroupRow updateCell:tableView:indexPath:](struct BBButtonGroupRow *self, SEL, id, id, id);
void __fastcall sub_58D04(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_58DC8(int a1, int a2);
void __fastcall sub_58DE4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[BBButtonGroupRow items](struct BBButtonGroupRow *self, SEL);
void __cdecl -[BBButtonGroupRow setItems:](struct BBButtonGroupRow *self, SEL, id);
char __cdecl -[BBButtonGroupRow wrapImage](struct BBButtonGroupRow *self, SEL);
void __cdecl -[BBButtonGroupRow setWrapImage:](struct BBButtonGroupRow *self, SEL, char);
id __cdecl -[BBButtonGroupRow separatorColor](struct BBButtonGroupRow *self, SEL);
void __cdecl -[BBButtonGroupRow setSeparatorColor:](struct BBButtonGroupRow *self, SEL, id);
void __cdecl -[BBButtonGroupRow .cxx_destruct](struct BBButtonGroupRow *self, SEL);
id __cdecl -[BBButtonGroupTableViewCell initWithStyle:reuseIdentifier:](struct BBButtonGroupTableViewCell *self, SEL, int, id);
void __cdecl -[BBButtonGroupTableViewCell layoutSubviews](struct BBButtonGroupTableViewCell *self, SEL);
id __cdecl -[BBButtonGroupTableViewCell buttonGroup](struct BBButtonGroupTableViewCell *self, SEL);
void __cdecl -[BBButtonGroupTableViewCell setButtonGroup:](struct BBButtonGroupTableViewCell *self, SEL, id);
void __cdecl -[BBButtonGroupTableViewCell .cxx_destruct](struct BBButtonGroupTableViewCell *self, SEL);
void __cdecl -[BBButtonRow updateCell:tableView:indexPath:](struct BBButtonRow *self, SEL, id, id, id);
Class __cdecl -[BBButtonRow cellClass](struct BBButtonRow *self, SEL);
void __cdecl -[BBButtonRow selected:indexPath:](struct BBButtonRow *self, SEL, id, id);
id __cdecl -[BBButtonTableViewCell initWithStyle:reuseIdentifier:](struct BBButtonTableViewCell *self, SEL, int, id);
void __cdecl -[BBButtonTableViewCell prepareForReuse](struct BBButtonTableViewCell *self, SEL);
void __cdecl -[BBButtonTableViewCell layoutSubviews](struct BBButtonTableViewCell *self, SEL);
id __cdecl -[BBCalendarRow init](struct BBCalendarRow *self, SEL);
id __cdecl +[BBCalendarRow attributes](struct BBCalendarRow_meta *self, SEL);
void __cdecl -[BBCalendarRow update:](struct BBCalendarRow *self, SEL, id);
void __cdecl -[BBCalendarRow updateCell:tableView:indexPath:](struct BBCalendarRow *self, SEL, id, id, id);
void __cdecl -[BBCalendarRow selected:indexPath:](struct BBCalendarRow *self, SEL, id, id);
void __fastcall sub_59934(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_59B34(int a1, int a2);
void __fastcall sub_59B58(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[BBCalendarRow maximumDate](struct BBCalendarRow *self, SEL);
void __cdecl -[BBCalendarRow setMaximumDate:](struct BBCalendarRow *self, SEL, id);
id __cdecl -[BBCalendarRow minimumDate](struct BBCalendarRow *self, SEL);
void __cdecl -[BBCalendarRow setMinimumDate:](struct BBCalendarRow *self, SEL, id);
id __cdecl -[BBCalendarRow date](struct BBCalendarRow *self, SEL);
void __cdecl -[BBCalendarRow setDate:](struct BBCalendarRow *self, SEL, id);
void __cdecl -[BBCalendarRow .cxx_destruct](struct BBCalendarRow *self, SEL);
id __cdecl +[BBCaptchaRow attributes](struct BBCaptchaRow_meta *self, SEL);
void __cdecl -[BBCaptchaRow load](struct BBCaptchaRow *self, SEL);
void __cdecl -[BBCaptchaRow setValue:](struct BBCaptchaRow *self, SEL, id);
void __cdecl -[BBCaptchaRow setUrl:](struct BBCaptchaRow *self, SEL, id);
void __cdecl -[BBCaptchaRow setCaptchaImageData:](struct BBCaptchaRow *self, SEL, id);
id __cdecl -[BBCaptchaRow captchaView](struct BBCaptchaRow *self, SEL);
void __cdecl -[BBCaptchaRow captchaViewStartLoad:](struct BBCaptchaRow *self, SEL, id);
void __cdecl -[BBCaptchaRow updateCell:tableView:indexPath:](struct BBCaptchaRow *self, SEL, id, id, id);
id __cdecl -[BBCaptchaRow url](struct BBCaptchaRow *self, SEL);
id __cdecl -[BBCaptchaRow captchaImageData](struct BBCaptchaRow *self, SEL);
float __cdecl -[BBCaptchaRow captchaHeight](struct BBCaptchaRow *self, SEL);
void __cdecl -[BBCaptchaRow setCaptchaHeight:](struct BBCaptchaRow *self, SEL, float);
float __cdecl -[BBCaptchaRow captchaWidth](struct BBCaptchaRow *self, SEL);
void __cdecl -[BBCaptchaRow setCaptchaWidth:](struct BBCaptchaRow *self, SEL, float);
id __cdecl -[BBCaptchaRow captchaAction](struct BBCaptchaRow *self, SEL);
void __cdecl -[BBCaptchaRow setCaptchaAction:](struct BBCaptchaRow *self, SEL, id);
id __cdecl -[BBCaptchaRow tableView](struct BBCaptchaRow *self, SEL);
void __cdecl -[BBCaptchaRow setTableView:](struct BBCaptchaRow *self, SEL, id);
void __cdecl -[BBCaptchaRow setCaptchaView:](struct BBCaptchaRow *self, SEL, id);
void __cdecl -[BBCaptchaRow .cxx_destruct](struct BBCaptchaRow *self, SEL);
void __cdecl -[BBCaptchaView cleanRequest](struct BBCaptchaView *self, SEL);
void __cdecl -[BBCaptchaView dealloc](struct BBCaptchaView *self, SEL);
id __cdecl -[BBCaptchaView initWithFrame:](struct BBCaptchaView *self, SEL, struct CGRect);
void __cdecl -[BBCaptchaView handleTapGesture:](struct BBCaptchaView *self, SEL, id);
void __cdecl -[BBCaptchaView setImageData:](struct BBCaptchaView *self, SEL, id);
void __cdecl -[BBCaptchaView faild:](struct BBCaptchaView *self, SEL, id);
void __cdecl -[BBCaptchaView load](struct BBCaptchaView *self, SEL);
void __fastcall sub_5AC54(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, char a18, int a19, int a20, unsigned int a21, int a22);
void __fastcall sub_5AC8C(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_5AD14(int a1, int a2);
int __fastcall sub_5AD1C(int a1);
void __cdecl -[BBCaptchaView didFaildWithError:](struct BBCaptchaView *self, SEL, id);
id __cdecl -[BBCaptchaView url](struct BBCaptchaView *self, SEL);
void __cdecl -[BBCaptchaView setUrl:](struct BBCaptchaView *self, SEL, id);
id __cdecl -[BBCaptchaView imageView](struct BBCaptchaView *self, SEL);
id __cdecl -[BBCaptchaView delegate](struct BBCaptchaView *self, SEL);
void __cdecl -[BBCaptchaView setDelegate:](struct BBCaptchaView *self, SEL, id);
void __cdecl -[BBCaptchaView .cxx_destruct](struct BBCaptchaView *self, SEL);
int __cdecl +[BBCodeReader videoOrientationFromCurrentDeviceOrientation](struct BBCodeReader_meta *self, SEL);
struct CGRect *__cdecl -[BBCodeReader screenRect](struct CGRect *__return_ptr __struct_ptr retstr, struct BBCodeReader *self, SEL);
void __cdecl -[BBCodeReader setScreenRect:](struct BBCodeReader *self, SEL, struct CGRect);
id __cdecl -[BBCodeView initWithFrame:](struct BBCodeView *self, SEL, struct CGRect);
void __cdecl -[BBCodeView layoutSubviews](struct BBCodeView *self, SEL);
void __cdecl -[BBCodeView initQRLine](struct BBCodeView *self, SEL);
void __cdecl -[BBCodeView show](struct BBCodeView *self, SEL);
void *__fastcall sub_5B228(int a1);
int __fastcall sub_5B2AC(int a1, int a2);
void __fastcall sub_5B2B4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_5B2BC(int a1);
int __fastcall sub_5B3CC(int a1, int a2);
void __fastcall sub_5B3D4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[BBCodeView drawRect:](struct BBCodeView *self, SEL, struct CGRect);
void __cdecl -[BBCodeView addScreenFillRect:rect:](struct BBCodeView *self, SEL, struct CGContext *, struct CGRect);
void __cdecl -[BBCodeView addCenterClearRect:rect:](struct BBCodeView *self, SEL, struct CGContext *, struct CGRect);
void __cdecl -[BBCodeView addWhiteRect:rect:](struct BBCodeView *self, SEL, struct CGContext *, struct CGRect);
void __cdecl -[BBCodeView addCornerLineWithContext:rect:](struct BBCodeView *self, SEL, struct CGContext *, struct CGRect);
void __cdecl -[BBCodeView addLine:pointB:ctx:](struct BBCodeView *self, SEL, struct CGPoint *, struct CGPoint *, struct CGContext *);
struct CGSize __cdecl -[BBCodeView transparentArea](struct BBCodeView *self, SEL);
void __cdecl -[BBCodeView setTransparentArea:](struct BBCodeView *self, SEL, struct CGSize);
void __cdecl -[BBCodeView .cxx_destruct](struct BBCodeView *self, SEL);
id __cdecl -[BBCollectionSeparatorView initWithFrame:](struct BBCollectionSeparatorView *self, SEL, struct CGRect);
void __cdecl -[BBCollectionSeparatorView applyLayoutAttributes:](struct BBCollectionSeparatorView *self, SEL, id);
id __cdecl -[BBCollectionSeparatorView separatorColor](struct BBCollectionSeparatorView *self, SEL);
void __cdecl -[BBCollectionSeparatorView setSeparatorColor:](struct BBCollectionSeparatorView *self, SEL, id);
void __cdecl -[BBCollectionSeparatorView .cxx_destruct](struct BBCollectionSeparatorView *self, SEL);
id __cdecl -[BBCollectionView initWithSetting:collectionViewLayout:](struct BBCollectionView *self, SEL, id, id);
void __cdecl -[BBCollectionView update:](struct BBCollectionView *self, SEL, id);
void __cdecl -[BBCollectionView update:init:](struct BBCollectionView *self, SEL, id, char);
void __cdecl -[BBCollectionView scrollToTop](struct BBCollectionView *self, SEL);
void __cdecl -[BBCollectionView refresh](struct BBCollectionView *self, SEL);
void __cdecl -[BBCollectionView stopRefresh](struct BBCollectionView *self, SEL);
void __cdecl -[BBCollectionView handleRefresh:](struct BBCollectionView *self, SEL, id);
void __cdecl -[BBCollectionView deselect](struct BBCollectionView *self, SEL);
void __cdecl -[BBCollectionView deselect:](struct BBCollectionView *self, SEL, char);
void __cdecl -[BBCollectionView action:data:extra:](struct BBCollectionView *self, SEL, id, id, id);
id __cdecl -[BBCollectionView root](struct BBCollectionView *self, SEL);
void __cdecl -[BBCollectionView setRoot:](struct BBCollectionView *self, SEL, id);
id __cdecl -[BBCollectionView action](struct BBCollectionView *self, SEL);
void __cdecl -[BBCollectionView setAction:](struct BBCollectionView *self, SEL, id);
id __cdecl -[BBCollectionView refreshAction](struct BBCollectionView *self, SEL);
void __cdecl -[BBCollectionView setRefreshAction:](struct BBCollectionView *self, SEL, id);
id __cdecl -[BBCollectionView refreshControl](struct BBCollectionView *self, SEL);
void __cdecl -[BBCollectionView setRefreshControl:](struct BBCollectionView *self, SEL, id);
id __cdecl -[BBCollectionView registeredCellClass](struct BBCollectionView *self, SEL);
void __cdecl -[BBCollectionView setRegisteredCellClass:](struct BBCollectionView *self, SEL, id);
float __cdecl -[BBCollectionView height](struct BBCollectionView *self, SEL);
void __cdecl -[BBCollectionView setHeight:](struct BBCollectionView *self, SEL, float);
float __cdecl -[BBCollectionView width](struct BBCollectionView *self, SEL);
void __cdecl -[BBCollectionView setWidth:](struct BBCollectionView *self, SEL, float);
float __cdecl -[BBCollectionView widthPercent](struct BBCollectionView *self, SEL);
void __cdecl -[BBCollectionView setWidthPercent:](struct BBCollectionView *self, SEL, float);
float __cdecl -[BBCollectionView heightPercent](struct BBCollectionView *self, SEL);
void __cdecl -[BBCollectionView setHeightPercent:](struct BBCollectionView *self, SEL, float);
float __cdecl -[BBCollectionView spacing](struct BBCollectionView *self, SEL);
void __cdecl -[BBCollectionView setSpacing:](struct BBCollectionView *self, SEL, float);
float __cdecl -[BBCollectionView lineSpacing](struct BBCollectionView *self, SEL);
void __cdecl -[BBCollectionView setLineSpacing:](struct BBCollectionView *self, SEL, float);
void __cdecl -[BBCollectionView .cxx_destruct](struct BBCollectionView *self, SEL);
void __cdecl -[BBCollectionViewCell setBackgroundColor:](struct BBCollectionViewCell *self, SEL, id);
id __cdecl -[BBCollectionViewCell initWithFrame:](struct BBCollectionViewCell *self, SEL, struct CGRect);
void __cdecl -[BBCollectionViewCell prepareForReuse](struct BBCollectionViewCell *self, SEL);
void __cdecl -[BBCollectionViewCell setHighlighted:](struct BBCollectionViewCell *self, SEL, char);
void __cdecl -[BBCollectionViewCell setSelected:](struct BBCollectionViewCell *self, SEL, char);
id __cdecl -[BBCollectionViewCell collectionView](struct BBCollectionViewCell *self, SEL);
void __cdecl -[BBCollectionViewCell setCollectionView:](struct BBCollectionViewCell *self, SEL, id);
id __cdecl -[BBCollectionViewCell textLabel](struct BBCollectionViewCell *self, SEL);
void __cdecl -[BBCollectionViewCell setTextLabel:](struct BBCollectionViewCell *self, SEL, id);
id __cdecl -[BBCollectionViewCell imageView](struct BBCollectionViewCell *self, SEL);
void __cdecl -[BBCollectionViewCell setImageView:](struct BBCollectionViewCell *self, SEL, id);
id __cdecl -[BBCollectionViewCell selectedBackgroundColor](struct BBCollectionViewCell *self, SEL);
void __cdecl -[BBCollectionViewCell setSelectedBackgroundColor:](struct BBCollectionViewCell *self, SEL, id);
id __cdecl -[BBCollectionViewCell cacheBackgroundColor](struct BBCollectionViewCell *self, SEL);
void __cdecl -[BBCollectionViewCell setCacheBackgroundColor:](struct BBCollectionViewCell *self, SEL, id);
void __cdecl -[BBCollectionViewCell .cxx_destruct](struct BBCollectionViewCell *self, SEL);
id __cdecl -[BBCollectionViewController initWithSetting:](struct BBCollectionViewController *self, SEL, id);
void __cdecl -[BBCollectionViewController loadView](struct BBCollectionViewController *self, SEL);
id __cdecl -[BBCollectionViewController defaultCollectionViewLayout](struct BBCollectionViewController *self, SEL);
void __cdecl -[BBCollectionViewController update:](struct BBCollectionViewController *self, SEL, id);
void __cdecl -[BBCollectionViewController viewDidLoad](struct BBCollectionViewController *self, SEL);
void __cdecl -[BBCollectionViewController viewWillAppear:](struct BBCollectionViewController *self, SEL, char);
void __cdecl -[BBCollectionViewController viewDidAppear:](struct BBCollectionViewController *self, SEL, char);
void __cdecl -[BBCollectionViewController viewWillDisappear:](struct BBCollectionViewController *self, SEL, char);
void __cdecl -[BBCollectionViewController viewDidDisappear:](struct BBCollectionViewController *self, SEL, char);
void __cdecl -[BBCollectionViewController viewDidPresent](struct BBCollectionViewController *self, SEL);
id __cdecl -[BBCollectionViewController setting](struct BBCollectionViewController *self, SEL);
void __cdecl -[BBCollectionViewController setSetting:](struct BBCollectionViewController *self, SEL, id);
id __cdecl -[BBCollectionViewController clickOrigin](struct BBCollectionViewController *self, SEL);
void __cdecl -[BBCollectionViewController setClickOrigin:](struct BBCollectionViewController *self, SEL, id);
id __cdecl -[BBCollectionViewController action](struct BBCollectionViewController *self, SEL);
void __cdecl -[BBCollectionViewController setAction:](struct BBCollectionViewController *self, SEL, id);
void __cdecl -[BBCollectionViewController .cxx_destruct](struct BBCollectionViewController *self, SEL);
int __cdecl -[BBCollectionViewDataSource numberOfSectionsInCollectionView:](struct BBCollectionViewDataSource *self, SEL, id);
int __cdecl -[BBCollectionViewDataSource collectionView:numberOfItemsInSection:](struct BBCollectionViewDataSource *self, SEL, id, int);
id __cdecl -[BBCollectionViewDataSource collectionView:cellForItemAtIndexPath:](struct BBCollectionViewDataSource *self, SEL, id, id);
id __cdecl -[BBCollectionViewDataSource collectionView:viewForSupplementaryElementOfKind:atIndexPath:](struct BBCollectionViewDataSource *self, SEL, id, id, id);
char __cdecl -[BBCollectionViewDelegate collectionView:shouldHighlightItemAtIndexPath:](struct BBCollectionViewDelegate *self, SEL, id, id);
char __cdecl -[BBCollectionViewDelegate collectionView:shouldSelectItemAtIndexPath:](struct BBCollectionViewDelegate *self, SEL, id, id);
void __cdecl -[BBCollectionViewDelegate collectionView:didSelectItemAtIndexPath:](struct BBCollectionViewDelegate *self, SEL, id, id);
struct CGSize __cdecl -[BBCollectionViewDelegate collectionView:layout:sizeForItemAtIndexPath:](struct BBCollectionViewDelegate *self, SEL, id, id, id);
float __cdecl -[BBCollectionViewDelegate collectionView:layout:minimumLineSpacingForSectionAtIndex:](struct BBCollectionViewDelegate *self, SEL, id, id, int);
float __cdecl -[BBCollectionViewDelegate collectionView:layout:minimumInteritemSpacingForSectionAtIndex:](struct BBCollectionViewDelegate *self, SEL, id, id, int);
id __cdecl -[BBCollectionViewSeparatorLayout init](struct BBCollectionViewSeparatorLayout *self, SEL);
char __cdecl -[BBCollectionViewSeparatorLayout shouldInvalidateLayoutForBoundsChange:](struct BBCollectionViewSeparatorLayout *self, SEL, struct CGRect);
id __cdecl -[BBCollectionViewSeparatorLayout initialLayoutAttributesForAppearingDecorationElementOfKind:atIndexPath:](struct BBCollectionViewSeparatorLayout *self, SEL, id, id);
id __cdecl -[BBCollectionViewSeparatorLayout layoutAttributesForDecorationViewOfKind:atIndexPath:](struct BBCollectionViewSeparatorLayout *self, SEL, id, id);
id __cdecl -[BBCollectionViewSeparatorLayout layoutAttributesForElementsInRect:](struct BBCollectionViewSeparatorLayout *self, SEL, struct CGRect);
id __cdecl -[BBDateRow init](struct BBDateRow *self, SEL);
id __cdecl +[BBDateRow attributes](struct BBDateRow_meta *self, SEL);
void __cdecl -[BBDateRow update:](struct BBDateRow *self, SEL, id);
void __cdecl -[BBDateRow tableViewCellDidBeginEditing:](struct BBDateRow *self, SEL, id);
void __cdecl -[BBDateRow tableViewCell:valueChanged:](struct BBDateRow *self, SEL, id, id);
id __cdecl -[BBDateRow formatInterval:](struct BBDateRow *self, SEL, double);
void __cdecl -[BBDateRow updateCell:tableView:indexPath:](struct BBDateRow *self, SEL, id, id, id);
Class __cdecl -[BBDateRow cellClass](struct BBDateRow *self, SEL);
id __cdecl +[BBDateRow modes](struct BBDateRow_meta *self, SEL);
int sub_5F3B4();
int __cdecl -[BBDateRow mode](struct BBDateRow *self, SEL);
void __cdecl -[BBDateRow setMode:](struct BBDateRow *self, SEL, int);
id __cdecl -[BBDateRow maximumDate](struct BBDateRow *self, SEL);
void __cdecl -[BBDateRow setMaximumDate:](struct BBDateRow *self, SEL, id);
id __cdecl -[BBDateRow minimumDate](struct BBDateRow *self, SEL);
void __cdecl -[BBDateRow setMinimumDate:](struct BBDateRow *self, SEL, id);
int __cdecl -[BBDateRow minuteInterval](struct BBDateRow *self, SEL);
void __cdecl -[BBDateRow setMinuteInterval:](struct BBDateRow *self, SEL, int);
id __cdecl -[BBDateRow date](struct BBDateRow *self, SEL);
void __cdecl -[BBDateRow setDate:](struct BBDateRow *self, SEL, id);
void __cdecl -[BBDateRow .cxx_destruct](struct BBDateRow *self, SEL);
id __cdecl -[BBDateTableViewCell initWithStyle:reuseIdentifier:](struct BBDateTableViewCell *self, SEL, int, id);
id __cdecl -[BBDateTableViewCell pickerView](struct BBDateTableViewCell *self, SEL);
void __cdecl -[BBDateTableViewCell textFieldDidBeginEditing:](struct BBDateTableViewCell *self, SEL, id);
void __cdecl -[BBDateTableViewCell dateChanged:](struct BBDateTableViewCell *self, SEL, id);
void __cdecl -[BBDateTableViewCell setPickerView:](struct BBDateTableViewCell *self, SEL, id);
void __cdecl -[BBDateTableViewCell .cxx_destruct](struct BBDateTableViewCell *self, SEL);
id __cdecl -[BBFieldRow createCellForTableView:](struct BBFieldRow *self, SEL, id);
id __cdecl -[BBFieldTableViewCell delegate](struct BBFieldTableViewCell *self, SEL);
void __cdecl -[BBFieldTableViewCell setDelegate:](struct BBFieldTableViewCell *self, SEL, id);
id __cdecl -[BBFieldTableViewCell tableView](struct BBFieldTableViewCell *self, SEL);
void __cdecl -[BBFieldTableViewCell setTableView:](struct BBFieldTableViewCell *self, SEL, id);
void __cdecl -[BBFieldTableViewCell .cxx_destruct](struct BBFieldTableViewCell *self, SEL);
id __cdecl +[BBGoogleAdRow attributes](struct BBGoogleAdRow_meta *self, SEL);
void __cdecl +[BBGoogleAdRow load](struct BBGoogleAdRow_meta *self, SEL);
void __cdecl -[BBGoogleAdRow updateCell:tableView:indexPath:](struct BBGoogleAdRow *self, SEL, id, id, id);
id __cdecl -[BBGoogleAdRow ID](struct BBGoogleAdRow *self, SEL);
void __cdecl -[BBGoogleAdRow setID:](struct BBGoogleAdRow *self, SEL, id);
void __cdecl -[BBGoogleAdRow .cxx_destruct](struct BBGoogleAdRow *self, SEL);
id __cdecl +[BBGridRow attributes](struct BBGridRow_meta *self, SEL);
void __cdecl -[BBGridRow updateCell:tableView:indexPath:](struct BBGridRow *self, SEL, id, id, id);
Class __cdecl -[BBGridRow cellClass](struct BBGridRow *self, SEL);
id __cdecl -[BBGridRow items](struct BBGridRow *self, SEL);
void __cdecl -[BBGridRow setItems:](struct BBGridRow *self, SEL, id);
void __cdecl -[BBGridRow .cxx_destruct](struct BBGridRow *self, SEL);
id __cdecl +[BBGridSection attributes](struct BBGridSection_meta *self, SEL);
void __cdecl -[BBGridSection update:](struct BBGridSection *self, SEL, id);
void __cdecl -[BBGridSection willDisplayHeaderView:forTableView:](struct BBGridSection *self, SEL, id, id);
void __cdecl -[BBGridSection didEndDisplayingHeaderView:forTableView:](struct BBGridSection *self, SEL, id, id);
id __cdecl -[BBGridSection gridView:](struct BBGridSection *self, SEL, id);
id __cdecl -[BBGridSection items](struct BBGridSection *self, SEL);
void __cdecl -[BBGridSection setItems:](struct BBGridSection *self, SEL, id);
id __cdecl -[BBGridSection gridView](struct BBGridSection *self, SEL);
void __cdecl -[BBGridSection setGridView:](struct BBGridSection *self, SEL, id);
float __cdecl -[BBGridSection marginRight](struct BBGridSection *self, SEL);
void __cdecl -[BBGridSection setMarginRight:](struct BBGridSection *self, SEL, float);
void __cdecl -[BBGridSection .cxx_destruct](struct BBGridSection *self, SEL);
void __cdecl -[BBGridTableViewCell setItems:](struct BBGridTableViewCell *self, SEL, id);
void __cdecl -[BBGridTableViewCell layoutSubviews](struct BBGridTableViewCell *self, SEL);
id __cdecl -[BBGridTableViewCell items](struct BBGridTableViewCell *self, SEL);
id __cdecl -[BBGridTableViewCell elements](struct BBGridTableViewCell *self, SEL);
void __cdecl -[BBGridTableViewCell setElements:](struct BBGridTableViewCell *self, SEL, id);
void __cdecl -[BBGridTableViewCell .cxx_destruct](struct BBGridTableViewCell *self, SEL);
id __cdecl -[BBHtmlRow init](struct BBHtmlRow *self, SEL);
id __cdecl +[BBHtmlRow attributes](struct BBHtmlRow_meta *self, SEL);
float __cdecl -[BBHtmlRow heightForTableView:](struct BBHtmlRow *self, SEL, id);
void __cdecl -[BBHtmlRow updateCell:tableView:indexPath:](struct BBHtmlRow *self, SEL, id, id, id);
void __fastcall sub_61680(int a1, void *a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_6172C(int a1, int a2);
void __fastcall sub_61748(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
Class __cdecl -[BBHtmlRow cellClass](struct BBHtmlRow *self, SEL);
id __cdecl -[BBHtmlRow html](struct BBHtmlRow *self, SEL);
void __cdecl -[BBHtmlRow setHtml:](struct BBHtmlRow *self, SEL, id);
int __cdecl -[BBHtmlRow htmlTextLine](struct BBHtmlRow *self, SEL);
void __cdecl -[BBHtmlRow setHtmlTextLine:](struct BBHtmlRow *self, SEL, int);
id __cdecl -[BBHtmlRow linkAction](struct BBHtmlRow *self, SEL);
void __cdecl -[BBHtmlRow setLinkAction:](struct BBHtmlRow *self, SEL, id);
void __cdecl -[BBHtmlRow .cxx_destruct](struct BBHtmlRow *self, SEL);
void __cdecl -[BBHtmlTableViewCell dealloc](struct BBHtmlTableViewCell *self, SEL);
id __cdecl -[BBHtmlTableViewCell initWithStyle:reuseIdentifier:](struct BBHtmlTableViewCell *self, SEL, int, id);
void __cdecl -[BBHtmlTableViewCell deviceOrientationDidChange:](struct BBHtmlTableViewCell *self, SEL, id);
void __cdecl -[BBHtmlTableViewCell layoutSubviews](struct BBHtmlTableViewCell *self, SEL);
void __cdecl -[BBHtmlTableViewCell HTMLLabel:didSelectLinkWithURL:](struct BBHtmlTableViewCell *self, SEL, id, id);
id __cdecl -[BBHtmlTableViewCell htmlLabel](struct BBHtmlTableViewCell *self, SEL);
void __cdecl -[BBHtmlTableViewCell setHtmlLabel:](struct BBHtmlTableViewCell *self, SEL, id);
id __cdecl -[BBHtmlTableViewCell clickHandler](struct BBHtmlTableViewCell *self, SEL);
void __cdecl -[BBHtmlTableViewCell setClickHandler:](struct BBHtmlTableViewCell *self, SEL, id);
void __cdecl -[BBHtmlTableViewCell .cxx_destruct](struct BBHtmlTableViewCell *self, SEL);
id __cdecl -[BBImagePageRow init](struct BBImagePageRow *self, SEL);
id __cdecl +[BBImagePageRow attributes](struct BBImagePageRow_meta *self, SEL);
void __cdecl -[BBImagePageRow updateCell:tableView:indexPath:](struct BBImagePageRow *self, SEL, id, id, id);
void __fastcall sub_62484(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_62510(int a1, int a2);
void __fastcall sub_6252C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_62548(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_625D4(int a1, int a2);
void __fastcall sub_625F0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
Class __cdecl -[BBImagePageRow cellClass](struct BBImagePageRow *self, SEL);
id __cdecl -[BBImagePageRow items](struct BBImagePageRow *self, SEL);
void __cdecl -[BBImagePageRow setItems:](struct BBImagePageRow *self, SEL, id);
id __cdecl -[BBImagePageRow pageChangedAction](struct BBImagePageRow *self, SEL);
void __cdecl -[BBImagePageRow setPageChangedAction:](struct BBImagePageRow *self, SEL, id);
double __cdecl -[BBImagePageRow slideInterval](struct BBImagePageRow *self, SEL);
void __cdecl -[BBImagePageRow setSlideInterval:](struct BBImagePageRow *self, SEL, double);
void __cdecl -[BBImagePageRow .cxx_destruct](struct BBImagePageRow *self, SEL);
id __cdecl -[BBImagePageTableViewCell initWithStyle:reuseIdentifier:](struct BBImagePageTableViewCell *self, SEL, int, id);
void __cdecl -[BBImagePageTableViewCell setItems:](struct BBImagePageTableViewCell *self, SEL, id);
void __cdecl -[BBImagePageTableViewCell layoutSubviews](struct BBImagePageTableViewCell *self, SEL);
id __cdecl -[BBImagePageTableViewCell arrayWithImages](struct BBImagePageTableViewCell *self, SEL);
int __cdecl -[BBImagePageTableViewCell contentModeForImage:](struct BBImagePageTableViewCell *self, SEL, unsigned int);
id __cdecl -[BBImagePageTableViewCell captionForImageAtIndex:](struct BBImagePageTableViewCell *self, SEL, unsigned int);
id __cdecl -[BBImagePageTableViewCell placeHolderImageForImagePageView](struct BBImagePageTableViewCell *self, SEL);
void __cdecl -[BBImagePageTableViewCell imagePageView:didScrollToIndex:](struct BBImagePageTableViewCell *self, SEL, id, unsigned int);
void __cdecl -[BBImagePageTableViewCell imagePageView:didSelectImageAtIndex:](struct BBImagePageTableViewCell *self, SEL, id, unsigned int);
id __cdecl -[BBImagePageTableViewCell items](struct BBImagePageTableViewCell *self, SEL);
id __cdecl -[BBImagePageTableViewCell imagePapeView](struct BBImagePageTableViewCell *self, SEL);
void __cdecl -[BBImagePageTableViewCell setImagePapeView:](struct BBImagePageTableViewCell *self, SEL, id);
id __cdecl -[BBImagePageTableViewCell scrollToIndexHandler](struct BBImagePageTableViewCell *self, SEL);
void __cdecl -[BBImagePageTableViewCell setScrollToIndexHandler:](struct BBImagePageTableViewCell *self, SEL, id);
id __cdecl -[BBImagePageTableViewCell selectIndexHandler](struct BBImagePageTableViewCell *self, SEL);
void __cdecl -[BBImagePageTableViewCell setSelectIndexHandler:](struct BBImagePageTableViewCell *self, SEL, id);
void __cdecl -[BBImagePageTableViewCell .cxx_destruct](struct BBImagePageTableViewCell *self, SEL);
id __cdecl -[BBImagePageView initWithFrame:](struct BBImagePageView *self, SEL, struct CGRect);
id __cdecl -[BBImagePageView initWithCoder:](struct BBImagePageView *self, SEL, id);
void __cdecl -[BBImagePageView awakeFromNib](struct BBImagePageView *self, SEL);
void __cdecl -[BBImagePageView layoutSubviews](struct BBImagePageView *self, SEL);
void __cdecl -[BBImagePageView initialize](struct BBImagePageView *self, SEL);
id __cdecl -[BBImagePageView randomColor](struct BBImagePageView *self, SEL);
void __cdecl -[BBImagePageView initalizeImageCounter](struct BBImagePageView *self, SEL);
void __cdecl -[BBImagePageView initializeCaption](struct BBImagePageView *self, SEL);
void __cdecl -[BBImagePageView reloadData](struct BBImagePageView *self, SEL);
void __cdecl -[BBImagePageView initializeScrollView](struct BBImagePageView *self, SEL);
void __cdecl -[BBImagePageView loadData](struct BBImagePageView *self, SEL);
void __cdecl -[BBImagePageView imageTapped:](struct BBImagePageView *self, SEL, id);
void __cdecl -[BBImagePageView setIndicatorDisabled:](struct BBImagePageView *self, SEL, char);
char __cdecl -[BBImagePageView bounces](struct BBImagePageView *self, SEL);
void __cdecl -[BBImagePageView setBounces:](struct BBImagePageView *self, SEL, char);
void __cdecl -[BBImagePageView setImageCounterDisabled:](struct BBImagePageView *self, SEL, char);
void __cdecl -[BBImagePageView initializePageControl](struct BBImagePageView *self, SEL);
void __cdecl -[BBImagePageView scrollViewWillBeginDragging:](struct BBImagePageView *self, SEL, id);
void __cdecl -[BBImagePageView scrollViewDidEndDecelerating:](struct BBImagePageView *self, SEL, id);
void __cdecl -[BBImagePageView updateCaptionLabelForImageAtIndex:](struct BBImagePageView *self, SEL, unsigned int);
void __cdecl -[BBImagePageView fireDidScrollToIndexDelegateForPage:](struct BBImagePageView *self, SEL, unsigned int);
void __cdecl -[BBImagePageView slideshowTick:](struct BBImagePageView *self, SEL, id);
void __cdecl -[BBImagePageView checkWetherToToggleSlideshowTimer](struct BBImagePageView *self, SEL);
void __cdecl -[BBImagePageView setSlideshowTimeInterval:](struct BBImagePageView *self, SEL, unsigned int);
unsigned int __cdecl -[BBImagePageView slideshowTimeInterval](struct BBImagePageView *self, SEL);
void __cdecl -[BBImagePageView setCaptionBackgroundColor:](struct BBImagePageView *self, SEL, id);
void __cdecl -[BBImagePageView setCaptionTextColor:](struct BBImagePageView *self, SEL, id);
void __cdecl -[BBImagePageView setCaptionFont:](struct BBImagePageView *self, SEL, id);
void __cdecl -[BBImagePageView setHidePageControlForSinglePages:](struct BBImagePageView *self, SEL, char);
void __cdecl -[BBImagePageView setPageControlCenter:](struct BBImagePageView *self, SEL, struct CGPoint);
unsigned int __cdecl -[BBImagePageView currentPage](struct BBImagePageView *self, SEL);
void __cdecl -[BBImagePageView setCurrentPage:](struct BBImagePageView *self, SEL, unsigned int);
void __cdecl -[BBImagePageView setCurrentPage:animated:](struct BBImagePageView *self, SEL, unsigned int, char);
id __cdecl -[BBImagePageView dataSource](struct BBImagePageView *self, SEL);
void __cdecl -[BBImagePageView setDataSource:](struct BBImagePageView *self, SEL, id);
id __cdecl -[BBImagePageView delegate](struct BBImagePageView *self, SEL);
void __cdecl -[BBImagePageView setDelegate:](struct BBImagePageView *self, SEL, id);
int __cdecl -[BBImagePageView contentMode](struct BBImagePageView *self, SEL);
void __cdecl -[BBImagePageView setContentMode:](struct BBImagePageView *self, SEL, int);
id __cdecl -[BBImagePageView pageControl](struct BBImagePageView *self, SEL);
void __cdecl -[BBImagePageView setPageControl:](struct BBImagePageView *self, SEL, id);
char __cdecl -[BBImagePageView indicatorDisabled](struct BBImagePageView *self, SEL);
id __cdecl -[BBImagePageView scrollView](struct BBImagePageView *self, SEL);
void __cdecl -[BBImagePageView setScrollView:](struct BBImagePageView *self, SEL, id);
char __cdecl -[BBImagePageView imageCounterDisabled](struct BBImagePageView *self, SEL);
char __cdecl -[BBImagePageView hidePageControlForSinglePages](struct BBImagePageView *self, SEL);
char __cdecl -[BBImagePageView slideshowShouldCallScrollToDelegate](struct BBImagePageView *self, SEL);
void __cdecl -[BBImagePageView setSlideshowShouldCallScrollToDelegate:](struct BBImagePageView *self, SEL, char);
id __cdecl -[BBImagePageView captionTextColor](struct BBImagePageView *self, SEL);
id __cdecl -[BBImagePageView captionBackgroundColor](struct BBImagePageView *self, SEL);
id __cdecl -[BBImagePageView captionFont](struct BBImagePageView *self, SEL);
void __cdecl -[BBImagePageView .cxx_destruct](struct BBImagePageView *self, SEL);
id __cdecl -[BBInputRow init](struct BBInputRow *self, SEL);
id __cdecl +[BBInputRow attributes](struct BBInputRow_meta *self, SEL);
void __cdecl -[BBInputRow update:](struct BBInputRow *self, SEL, id);
void __cdecl -[BBInputRow updateCell:tableView:indexPath:](struct BBInputRow *self, SEL, id, id, id);
Class __cdecl -[BBInputRow cellClass](struct BBInputRow *self, SEL);
void __cdecl -[BBInputRow selected:indexPath:](struct BBInputRow *self, SEL, id, id);
void __cdecl -[BBInputRow tableViewCell:valueChanged:](struct BBInputRow *self, SEL, id, id);
char __cdecl -[BBInputRow tableViewCellShouldBeginEditing:](struct BBInputRow *self, SEL, id);
void __cdecl -[BBInputRow tableViewCellDidBeginEditing:](struct BBInputRow *self, SEL, id);
void __cdecl -[BBInputRow tableViewCellDidEndEditing:](struct BBInputRow *self, SEL, id);
void __cdecl -[BBInputRow tableViewCellActionNext:](struct BBInputRow *self, SEL, id);
void __cdecl -[BBInputRow tableViewCellActionPrev:](struct BBInputRow *self, SEL, id);
void __cdecl -[BBInputRow tableViewCellActionDone:](struct BBInputRow *self, SEL, id);
void __fastcall sub_66430(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_664C8(int a1, int a2);
void __fastcall sub_664E4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl +[BBInputRow autocapitalizationTypes](struct BBInputRow_meta *self, SEL);
int sub_66544();
id __cdecl +[BBInputRow autocorrectionTypes](struct BBInputRow_meta *self, SEL);
int sub_666B4();
id __cdecl +[BBInputRow keyboardTypes](struct BBInputRow_meta *self, SEL);
char *sub_667F8();
id __cdecl +[BBInputRow keyboardAppearances](struct BBInputRow_meta *self, SEL);
int sub_66A88();
id __cdecl +[BBInputRow returnKeyTypes](struct BBInputRow_meta *self, SEL);
char *sub_66BCC();
id __cdecl -[BBInputRow textFieldColor](struct BBInputRow *self, SEL);
void __cdecl -[BBInputRow setTextFieldColor:](struct BBInputRow *self, SEL, id);
id __cdecl -[BBInputRow placeholder](struct BBInputRow *self, SEL);
void __cdecl -[BBInputRow setPlaceholder:](struct BBInputRow *self, SEL, id);
int __cdecl -[BBInputRow autocapitalizationType](struct BBInputRow *self, SEL);
void __cdecl -[BBInputRow setAutocapitalizationType:](struct BBInputRow *self, SEL, int);
int __cdecl -[BBInputRow autocorrectionType](struct BBInputRow *self, SEL);
void __cdecl -[BBInputRow setAutocorrectionType:](struct BBInputRow *self, SEL, int);
int __cdecl -[BBInputRow keyboardType](struct BBInputRow *self, SEL);
void __cdecl -[BBInputRow setKeyboardType:](struct BBInputRow *self, SEL, int);
int __cdecl -[BBInputRow keyboardAppearance](struct BBInputRow *self, SEL);
void __cdecl -[BBInputRow setKeyboardAppearance:](struct BBInputRow *self, SEL, int);
int __cdecl -[BBInputRow returnKeyType](struct BBInputRow *self, SEL);
void __cdecl -[BBInputRow setReturnKeyType:](struct BBInputRow *self, SEL, int);
char __cdecl -[BBInputRow enablesReturnKeyAutomatically](struct BBInputRow *self, SEL);
void __cdecl -[BBInputRow setEnablesReturnKeyAutomatically:](struct BBInputRow *self, SEL, char);
char __cdecl -[BBInputRow secureTextEntry](struct BBInputRow *self, SEL);
void __cdecl -[BBInputRow setSecureTextEntry:](struct BBInputRow *self, SEL, char);
char __cdecl -[BBInputRow clearsOnBeginEditing](struct BBInputRow *self, SEL);
void __cdecl -[BBInputRow setClearsOnBeginEditing:](struct BBInputRow *self, SEL, char);
char __cdecl -[BBInputRow hiddenPrevAndNext](struct BBInputRow *self, SEL);
void __cdecl -[BBInputRow setHiddenPrevAndNext:](struct BBInputRow *self, SEL, char);
char __cdecl -[BBInputRow hiddenToolbar](struct BBInputRow *self, SEL);
void __cdecl -[BBInputRow setHiddenToolbar:](struct BBInputRow *self, SEL, char);
float __cdecl -[BBInputRow textWidth](struct BBInputRow *self, SEL);
void __cdecl -[BBInputRow setTextWidth:](struct BBInputRow *self, SEL, float);
id __cdecl -[BBInputRow focusAction](struct BBInputRow *self, SEL);
void __cdecl -[BBInputRow setFocusAction:](struct BBInputRow *self, SEL, id);
id __cdecl -[BBInputRow blurAction](struct BBInputRow *self, SEL);
void __cdecl -[BBInputRow setBlurAction:](struct BBInputRow *self, SEL, id);
void __cdecl -[BBInputRow .cxx_destruct](struct BBInputRow *self, SEL);
id __cdecl -[BBInputTableViewCell initWithStyle:reuseIdentifier:](struct BBInputTableViewCell *self, SEL, int, id);
void __cdecl -[BBInputTableViewCell setHiddenToolbar:](struct BBInputTableViewCell *self, SEL, char);
void __cdecl -[BBInputTableViewCell setHiddenPrevAndNext:](struct BBInputTableViewCell *self, SEL, char);
void __cdecl -[BBInputTableViewCell setPrevEnabled:](struct BBInputTableViewCell *self, SEL, char);
void __cdecl -[BBInputTableViewCell setNextEnabled:](struct BBInputTableViewCell *self, SEL, char);
id __cdecl -[BBInputTableViewCell createActionBar](struct BBInputTableViewCell *self, SEL);
char __cdecl -[BBInputTableViewCell handleActionBarDone:](struct BBInputTableViewCell *self, SEL, id);
void __cdecl -[BBInputTableViewCell handleActionBarPreviousNext:](struct BBInputTableViewCell *self, SEL, id);
void __cdecl -[BBInputTableViewCell actionPrev](struct BBInputTableViewCell *self, SEL);
void __cdecl -[BBInputTableViewCell actionNext](struct BBInputTableViewCell *self, SEL);
void __cdecl -[BBInputTableViewCell textFieldEditingChanged:](struct BBInputTableViewCell *self, SEL, id);
char __cdecl -[BBInputTableViewCell textFieldShouldBeginEditing:](struct BBInputTableViewCell *self, SEL, id);
void __cdecl -[BBInputTableViewCell textFieldDidBeginEditing:](struct BBInputTableViewCell *self, SEL, id);
void __cdecl -[BBInputTableViewCell textFieldDidEndEditing:](struct BBInputTableViewCell *self, SEL, id);
char __cdecl -[BBInputTableViewCell textFieldShouldReturn:](struct BBInputTableViewCell *self, SEL, id);
char __cdecl -[BBInputTableViewCell becomeFirstResponder](struct BBInputTableViewCell *self, SEL);
char __cdecl -[BBInputTableViewCell resignFirstResponder](struct BBInputTableViewCell *self, SEL);
void __cdecl -[BBInputTableViewCell fixPosition](struct BBInputTableViewCell *self, SEL);
void __cdecl -[BBInputTableViewCell layoutSubviews](struct BBInputTableViewCell *self, SEL);
id __cdecl -[BBInputTableViewCell textField](struct BBInputTableViewCell *self, SEL);
void __cdecl -[BBInputTableViewCell setTextField:](struct BBInputTableViewCell *self, SEL, id);
char __cdecl -[BBInputTableViewCell prevEnabled](struct BBInputTableViewCell *self, SEL);
char __cdecl -[BBInputTableViewCell nextEnabled](struct BBInputTableViewCell *self, SEL);
char __cdecl -[BBInputTableViewCell hiddenToolbar](struct BBInputTableViewCell *self, SEL);
id __cdecl -[BBInputTableViewCell delegate](struct BBInputTableViewCell *self, SEL);
void __cdecl -[BBInputTableViewCell setDelegate:](struct BBInputTableViewCell *self, SEL, id);
char __cdecl -[BBInputTableViewCell hiddenPrevAndNext](struct BBInputTableViewCell *self, SEL);
float __cdecl -[BBInputTableViewCell textWidth](struct BBInputTableViewCell *self, SEL);
void __cdecl -[BBInputTableViewCell setTextWidth:](struct BBInputTableViewCell *self, SEL, float);
void __cdecl -[BBInputTableViewCell .cxx_destruct](struct BBInputTableViewCell *self, SEL);
id __cdecl +[BBItem rowWithSetting:](struct BBItem *self, SEL, id);
id __cdecl +[BBItem attributes](struct BBItem_meta *self, SEL);
id __cdecl -[BBItem cellClass](struct BBItem *self, SEL);
void __cdecl -[BBItem selected:indexPath:](struct BBItem *self, SEL, id, id);
id __cdecl -[BBItem createCellForCollectionView:indexPath:](struct BBItem *self, SEL, id, id);
id __cdecl -[BBItem cellForCollectionView:indexPath:](struct BBItem *self, SEL, id, id);
void __fastcall sub_696C8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, int a25, char a26, int a27, int a28, unsigned int a29, int a30);
void __fastcall sub_69708(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_69794(int a1, int a2);
int __fastcall sub_6979C(int a1);
id __cdecl -[BBItem selectedBackgroundColor](struct BBItem *self, SEL);
void __cdecl -[BBItem setSelectedBackgroundColor:](struct BBItem *self, SEL, id);
void __cdecl -[BBItem .cxx_destruct](struct BBItem *self, SEL);
void __cdecl +[BBJavaScriptBridge setEnv:forKey:](struct BBJavaScriptBridge *self, SEL, id, id);
id __cdecl +[BBJavaScriptBridge env](struct BBJavaScriptBridge_meta *self, SEL);
id __cdecl -[BBJavaScriptBridge init](struct BBJavaScriptBridge *self, SEL);
void __fastcall sub_6A054(int a1, int a2, int a3);
void __fastcall sub_6A338(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_6A5BC(int a1, int a2);
void __fastcall sub_6A5C8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_6A5D0(int a1, int a2);
void __fastcall sub_6A5D8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[BBJavaScriptBridge initBaseScript](struct BBJavaScriptBridge *self, SEL);
id __cdecl -[BBJavaScriptBridge stringify:](struct BBJavaScriptBridge *self, SEL, id);
void __cdecl -[BBJavaScriptBridge addScript:withSourceURL:](struct BBJavaScriptBridge *self, SEL, id, id);
id __cdecl -[BBJavaScriptBridge eval:](struct BBJavaScriptBridge *self, SEL, id);
void __cdecl -[BBJavaScriptBridge callPage:action:arguments:](struct BBJavaScriptBridge *self, SEL, int32_t, id, id);
id __cdecl +[BBJavaScriptBridge actions](struct BBJavaScriptBridge_meta *self, SEL);
id __cdecl +[BBJavaScriptBridge methods](struct BBJavaScriptBridge_meta *self, SEL);
id __cdecl +[BBJavaScriptBridge rows](struct BBJavaScriptBridge_meta *self, SEL);
id __cdecl -[BBJavaScriptBridge context](struct BBJavaScriptBridge *self, SEL);
void __cdecl -[BBJavaScriptBridge setContext:](struct BBJavaScriptBridge *self, SEL, id);
void __cdecl -[BBJavaScriptBridge .cxx_destruct](struct BBJavaScriptBridge *self, SEL);
id __cdecl +[BBJavaScriptContext contextWithReceiver:](struct BBJavaScriptContext *self, SEL, id);
void __cdecl -[BBJavaScriptContext dealloc](struct BBJavaScriptContext *self, SEL);
id __cdecl -[BBJavaScriptContext initWithReceiver:](struct BBJavaScriptContext *self, SEL, id);
id __cdecl -[BBJavaScriptContext eval:](struct BBJavaScriptContext *self, SEL, id);
void __cdecl -[BBJavaScriptContext initBaseScript](struct BBJavaScriptContext *self, SEL);
id __cdecl -[BBJavaScriptContext send:](struct BBJavaScriptContext *self, SEL, id);
id __cdecl -[BBJavaScriptContext send:handler:](struct BBJavaScriptContext *self, SEL, id, id);
id __cdecl -[BBJavaScriptContext sendData:](struct BBJavaScriptContext *self, SEL, id);
void __cdecl -[BBJavaScriptContext handle:](struct BBJavaScriptContext *self, SEL, id);
void __cdecl -[BBJavaScriptContext handleSafe:](struct BBJavaScriptContext *self, SEL, id);
void __fastcall sub_6B5CC(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_6B64C(int a1, int a2);
void __fastcall sub_6B664(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[BBJavaScriptContext receiver](struct BBJavaScriptContext *self, SEL);
void __cdecl -[BBJavaScriptContext setReceiver:](struct BBJavaScriptContext *self, SEL, id);
void __cdecl -[BBJavaScriptContext .cxx_destruct](struct BBJavaScriptContext *self, SEL);
id __cdecl -[BBJavaScriptCoreContext initWithReceiver:](struct BBJavaScriptCoreContext *self, SEL, id);
void __fastcall sub_6BA5A(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, int a25, int a26, int a27, int a28, int a29, char a30, int a31, int a32, int a33, int a34, int a35, int a36, unsigned int a37, int a38);
void __fastcall sub_6BABC(int a1, int a2, int a3);
void *__fastcall sub_6BBA8(int a1, int a2, int a3);
int __fastcall sub_6BDDC(int a1, int a2);
int __fastcall sub_6BDE4(int a1);
signed int __fastcall sub_6BDEC(int a1, int a2, int a3);
int __fastcall sub_6BF70(int a1, int a2);
int __fastcall sub_6BF78(int a1);
void __fastcall sub_6BF80(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_6C060(int a1, int a2);
int __fastcall sub_6C068(int a1);
void __cdecl -[BBJavaScriptCoreContext runTimeout:](struct BBJavaScriptCoreContext *self, SEL, id);
void __cdecl -[BBJavaScriptCoreContext runTimeoutSafe:](struct BBJavaScriptCoreContext *self, SEL, id);
id __cdecl -[BBJavaScriptCoreContext eval:](struct BBJavaScriptCoreContext *self, SEL, id);
void __cdecl -[BBJavaScriptCoreContext addScript:withSourceURL:](struct BBJavaScriptCoreContext *self, SEL, id, id);
id __cdecl -[BBJavaScriptCoreContext context](struct BBJavaScriptCoreContext *self, SEL);
void __cdecl -[BBJavaScriptCoreContext setContext:](struct BBJavaScriptCoreContext *self, SEL, id);
id __cdecl -[BBJavaScriptCoreContext timers](struct BBJavaScriptCoreContext *self, SEL);
void __cdecl -[BBJavaScriptCoreContext setTimers:](struct BBJavaScriptCoreContext *self, SEL, id);
int32_t __cdecl -[BBJavaScriptCoreContext timerCount](struct BBJavaScriptCoreContext *self, SEL);
void __cdecl -[BBJavaScriptCoreContext setTimerCount:](struct BBJavaScriptCoreContext *self, SEL, int32_t);
void __cdecl -[BBJavaScriptCoreContext .cxx_destruct](struct BBJavaScriptCoreContext *self, SEL);
double __cdecl +[BBLocationConverter transformLat:bdLon:](struct BBLocationConverter *self, SEL, double, double);
double __cdecl +[BBLocationConverter transformLon:bdLon:](struct BBLocationConverter *self, SEL, double, double);
char __cdecl +[BBLocationConverter outOfChina:bdLon:](struct BBLocationConverter *self, SEL, double, double);
struct anon_struct_1 *__cdecl +[BBLocationConverter gcj02Encrypt:bdLon:](struct anon_struct_1 *__return_ptr __struct_ptr retstr, struct BBLocationConverter *self, SEL, double, double);
struct anon_struct_2 *__cdecl +[BBLocationConverter gcj02Decrypt:gjLon:](struct anon_struct_2 *__return_ptr __struct_ptr retstr, struct BBLocationConverter *self, SEL, double, double);
struct anon_struct_3 *__cdecl +[BBLocationConverter bd09Decrypt:bdLon:](struct anon_struct_3 *__return_ptr __struct_ptr retstr, struct BBLocationConverter *self, SEL, double, double);
struct anon_struct_4 *__cdecl +[BBLocationConverter bd09Encrypt:bdLon:](struct anon_struct_4 *__return_ptr __struct_ptr retstr, struct BBLocationConverter *self, SEL, double, double);
struct anon_struct_5 *__cdecl +[BBLocationConverter wgs84ToGcj02:](struct anon_struct_5 *__return_ptr __struct_ptr retstr, struct BBLocationConverter *self, SEL, struct anon_struct_6);
struct anon_struct_7 *__cdecl +[BBLocationConverter gcj02ToWgs84:](struct anon_struct_7 *__return_ptr __struct_ptr retstr, struct BBLocationConverter *self, SEL, struct anon_struct_8);
struct anon_struct_9 *__cdecl +[BBLocationConverter wgs84ToBd09:](struct anon_struct_9 *__return_ptr __struct_ptr retstr, struct BBLocationConverter *self, SEL, struct anon_struct_10);
struct anon_struct_11 *__cdecl +[BBLocationConverter gcj02ToBd09:](struct anon_struct_11 *__return_ptr __struct_ptr retstr, struct BBLocationConverter *self, SEL, struct anon_struct_12);
struct anon_struct_13 *__cdecl +[BBLocationConverter bd09ToGcj02:](struct anon_struct_13 *__return_ptr __struct_ptr retstr, struct BBLocationConverter *self, SEL, struct anon_struct_14);
struct anon_struct_15 *__cdecl +[BBLocationConverter bd09ToWgs84:](struct anon_struct_15 *__return_ptr __struct_ptr retstr, struct BBLocationConverter *self, SEL, struct anon_struct_16);
id __cdecl -[BBMailRow init](struct BBMailRow *self, SEL);
id __cdecl +[BBMailRow attributes](struct BBMailRow_meta *self, SEL);
void __cdecl -[BBMailRow updateCell:tableView:indexPath:](struct BBMailRow *self, SEL, id, id, id);
void __cdecl -[BBMailRow selected:indexPath:](struct BBMailRow *self, SEL, id, id);
void __fastcall sub_6D334(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_6D468(int a1, int a2);
void __fastcall sub_6D480(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[BBMailRow subject](struct BBMailRow *self, SEL);
void __cdecl -[BBMailRow setSubject:](struct BBMailRow *self, SEL, id);
id __cdecl -[BBMailRow messageBody](struct BBMailRow *self, SEL);
void __cdecl -[BBMailRow setMessageBody:](struct BBMailRow *self, SEL, id);
id __cdecl -[BBMailRow toRecipients](struct BBMailRow *self, SEL);
void __cdecl -[BBMailRow setToRecipients:](struct BBMailRow *self, SEL, id);
id __cdecl -[BBMailRow ccRecipients](struct BBMailRow *self, SEL);
void __cdecl -[BBMailRow setCcRecipients:](struct BBMailRow *self, SEL, id);
id __cdecl -[BBMailRow bccRecipients](struct BBMailRow *self, SEL);
void __cdecl -[BBMailRow setBccRecipients:](struct BBMailRow *self, SEL, id);
void __cdecl -[BBMailRow .cxx_destruct](struct BBMailRow *self, SEL);
id __cdecl -[BBMapAnnotation initWithSetting:action:](struct BBMapAnnotation *self, SEL, id, id);
id __cdecl -[BBMapAnnotation initWithCoordinate:title:](struct BBMapAnnotation *self, SEL, struct anon_struct_20, id);
struct anon_struct_21 *__cdecl -[BBMapAnnotation coordinate](struct anon_struct_21 *__return_ptr __struct_ptr retstr, struct BBMapAnnotation *self, SEL);
void __cdecl -[BBMapAnnotation setCoordinate:](struct BBMapAnnotation *self, SEL, struct anon_struct_22);
id __cdecl -[BBMapAnnotation title](struct BBMapAnnotation *self, SEL);
id __cdecl -[BBMapAnnotation subtitle](struct BBMapAnnotation *self, SEL);
id __cdecl -[BBMapAnnotation id](struct BBMapAnnotation *self, SEL);
void __cdecl -[BBMapAnnotation setId:](struct BBMapAnnotation *self, SEL, id);
id __cdecl -[BBMapAnnotation data](struct BBMapAnnotation *self, SEL);
void __cdecl -[BBMapAnnotation setData:](struct BBMapAnnotation *self, SEL, id);
char __cdecl -[BBMapAnnotation animate](struct BBMapAnnotation *self, SEL);
void __cdecl -[BBMapAnnotation setAnimate:](struct BBMapAnnotation *self, SEL, char);
unsigned int __cdecl -[BBMapAnnotation color](struct BBMapAnnotation *self, SEL);
void __cdecl -[BBMapAnnotation setColor:](struct BBMapAnnotation *self, SEL, unsigned int);
id __cdecl -[BBMapAnnotation action](struct BBMapAnnotation *self, SEL);
void __cdecl -[BBMapAnnotation setAction:](struct BBMapAnnotation *self, SEL, id);
void __cdecl -[BBMapAnnotation .cxx_destruct](struct BBMapAnnotation *self, SEL);
id __cdecl -[BBMapViewController initWithSetting:](struct BBMapViewController *self, SEL, id);
void __cdecl -[BBMapViewController updateSetting:](struct BBMapViewController *self, SEL, id);
void __cdecl -[BBMapViewController update:](struct BBMapViewController *self, SEL, id);
void __cdecl -[BBMapViewController updateRegion](struct BBMapViewController *self, SEL);
void __cdecl -[BBMapViewController loadView](struct BBMapViewController *self, SEL);
void __cdecl -[BBMapViewController addAnnotation:](struct BBMapViewController *self, SEL, id);
void __cdecl -[BBMapViewController removeAnnotation:](struct BBMapViewController *self, SEL, id);
void __cdecl -[BBMapViewController viewWillAppear:](struct BBMapViewController *self, SEL, char);
id __cdecl -[BBMapViewController mapView:viewForAnnotation:](struct BBMapViewController *self, SEL, id, id);
void __cdecl -[BBMapViewController mapView:annotationView:calloutAccessoryControlTapped:](struct BBMapViewController *self, SEL, id, id, id);
double __cdecl -[BBMapViewController latitude](struct BBMapViewController *self, SEL);
void __cdecl -[BBMapViewController setLatitude:](struct BBMapViewController *self, SEL, double);
double __cdecl -[BBMapViewController longitude](struct BBMapViewController *self, SEL);
void __cdecl -[BBMapViewController setLongitude:](struct BBMapViewController *self, SEL, double);
id __cdecl -[BBMapViewController mapView](struct BBMapViewController *self, SEL);
void __cdecl -[BBMapViewController setMapView:](struct BBMapViewController *self, SEL, id);
double __cdecl -[BBMapViewController longitudeDelta](struct BBMapViewController *self, SEL);
void __cdecl -[BBMapViewController setLongitudeDelta:](struct BBMapViewController *self, SEL, double);
double __cdecl -[BBMapViewController latitudeDelta](struct BBMapViewController *self, SEL);
void __cdecl -[BBMapViewController setLatitudeDelta:](struct BBMapViewController *self, SEL, double);
char __cdecl -[BBMapViewController zoomEnabled](struct BBMapViewController *self, SEL);
void __cdecl -[BBMapViewController setZoomEnabled:](struct BBMapViewController *self, SEL, char);
char __cdecl -[BBMapViewController showsUserLocation](struct BBMapViewController *self, SEL);
void __cdecl -[BBMapViewController setShowsUserLocation:](struct BBMapViewController *self, SEL, char);
id __cdecl -[BBMapViewController annotationAction](struct BBMapViewController *self, SEL);
void __cdecl -[BBMapViewController setAnnotationAction:](struct BBMapViewController *self, SEL, id);
struct anon_struct_28 *__cdecl -[BBMapViewController coordinate](struct anon_struct_28 *__return_ptr __struct_ptr retstr, struct BBMapViewController *self, SEL);
void __cdecl -[BBMapViewController setCoordinate:](struct BBMapViewController *self, SEL, struct anon_struct_29);
id __cdecl -[BBMapViewController annotations](struct BBMapViewController *self, SEL);
void __cdecl -[BBMapViewController setAnnotations:](struct BBMapViewController *self, SEL, id);
void __cdecl -[BBMapViewController .cxx_destruct](struct BBMapViewController *self, SEL);
id __cdecl -[BBNavigationController init](struct BBNavigationController *self, SEL);
id __cdecl -[BBNavigationController initWithRootViewController:](struct BBNavigationController *self, SEL, id);
void __cdecl -[BBNavigationController navigationController:didShowViewController:animated:](struct BBNavigationController *self, SEL, id, id, char);
char __cdecl -[BBNavigationController disablesAutomaticKeyboardDismissal](struct BBNavigationController *self, SEL);
id __cdecl -[BBPageViewController initWithSetting:](struct BBPageViewController *self, SEL, id);
void __cdecl -[BBPageViewController update:fromInit:](struct BBPageViewController *self, SEL, id, char);
void __cdecl -[BBPageViewController update:](struct BBPageViewController *self, SEL, id);
void __cdecl -[BBPageViewController didReceiveMemoryWarning](struct BBPageViewController *self, SEL);
void __cdecl -[BBPageViewController viewDidLoad](struct BBPageViewController *self, SEL);
void __cdecl -[BBPageViewController viewWillLayoutSubviews](struct BBPageViewController *self, SEL);
id __cdecl -[BBPageViewController segmentedControl](struct BBPageViewController *self, SEL);
id __cdecl -[BBPageViewController segmentedWrapView](struct BBPageViewController *self, SEL);
void __cdecl -[BBPageViewController pageChanged:](struct BBPageViewController *self, SEL, id);
void __cdecl -[BBPageViewController selectPage:](struct BBPageViewController *self, SEL, int);
void __cdecl -[BBPageViewController selectPageAnimated:](struct BBPageViewController *self, SEL, int);
void __cdecl -[BBPageViewController viewWillAppear:](struct BBPageViewController *self, SEL, char);
void __cdecl -[BBPageViewController viewDidAppear:](struct BBPageViewController *self, SEL, char);
void __cdecl -[BBPageViewController viewWillDisappear:](struct BBPageViewController *self, SEL, char);
void __cdecl -[BBPageViewController viewDidDisappear:](struct BBPageViewController *self, SEL, char);
void __cdecl -[BBPageViewController viewDidPresent](struct BBPageViewController *self, SEL);
unsigned int __cdecl -[BBPageViewController pageCountForPageViewController:](struct BBPageViewController *self, SEL, id);
id __cdecl -[BBPageViewController viewControllerForIndex:forPageViewController:](struct BBPageViewController *self, SEL, unsigned int, id);
void __cdecl -[BBPageViewController changedIndex:forPageViewController:](struct BBPageViewController *self, SEL, unsigned int, id);
id __cdecl -[BBPageViewController setting](struct BBPageViewController *self, SEL);
void __cdecl -[BBPageViewController setSetting:](struct BBPageViewController *self, SEL, id);
id __cdecl -[BBPageViewController clickOrigin](struct BBPageViewController *self, SEL);
void __cdecl -[BBPageViewController setClickOrigin:](struct BBPageViewController *self, SEL, id);
id __cdecl -[BBPageViewController action](struct BBPageViewController *self, SEL);
void __cdecl -[BBPageViewController setAction:](struct BBPageViewController *self, SEL, id);
id __cdecl -[BBPageViewController childViewControllers](struct BBPageViewController *self, SEL);
char __cdecl -[BBPageViewController showSegmented](struct BBPageViewController *self, SEL);
void __cdecl -[BBPageViewController setShowSegmented:](struct BBPageViewController *self, SEL, char);
void __cdecl -[BBPageViewController setSegmentedControl:](struct BBPageViewController *self, SEL, id);
void __cdecl -[BBPageViewController setSegmentedWrapView:](struct BBPageViewController *self, SEL, id);
id __cdecl -[BBPageViewController navHairline](struct BBPageViewController *self, SEL);
void __cdecl -[BBPageViewController setNavHairline:](struct BBPageViewController *self, SEL, id);
void __cdecl -[BBPageViewController .cxx_destruct](struct BBPageViewController *self, SEL);
id __cdecl -[BBPickerRow init](struct BBPickerRow *self, SEL);
void __cdecl -[BBPickerRow setSelectedIndexes:](struct BBPickerRow *self, SEL, id);
id __cdecl -[BBPickerRow selectedDisplay](struct BBPickerRow *self, SEL);
id __cdecl -[BBPickerRow selectedValue](struct BBPickerRow *self, SEL);
id __cdecl +[BBPickerRow attributes](struct BBPickerRow_meta *self, SEL);
void __cdecl -[BBPickerRow update:](struct BBPickerRow *self, SEL, id);
void __cdecl -[BBPickerRow tableViewCellDidBeginEditing:](struct BBPickerRow *self, SEL, id);
void __cdecl -[BBPickerRow tableViewCell:valueChanged:](struct BBPickerRow *self, SEL, id, id);
void __cdecl -[BBPickerRow updateCell:tableView:indexPath:](struct BBPickerRow *self, SEL, id, id, id);
Class __cdecl -[BBPickerRow cellClass](struct BBPickerRow *self, SEL);
id __cdecl -[BBPickerRow items](struct BBPickerRow *self, SEL);
void __cdecl -[BBPickerRow setItems:](struct BBPickerRow *self, SEL, id);
id __cdecl -[BBPickerRow display](struct BBPickerRow *self, SEL);
void __cdecl -[BBPickerRow setDisplay:](struct BBPickerRow *self, SEL, id);
id __cdecl -[BBPickerRow selectedIndexes](struct BBPickerRow *self, SEL);
void __cdecl -[BBPickerRow .cxx_destruct](struct BBPickerRow *self, SEL);
id __cdecl -[BBPickerTableViewCell initWithStyle:reuseIdentifier:](struct BBPickerTableViewCell *self, SEL, int, id);
id __cdecl -[BBPickerTableViewCell pickerView](struct BBPickerTableViewCell *self, SEL);
void __cdecl -[BBPickerTableViewCell textFieldDidBeginEditing:](struct BBPickerTableViewCell *self, SEL, id);
void __cdecl -[BBPickerTableViewCell setSelectedIndexes:](struct BBPickerTableViewCell *self, SEL, id);
int __cdecl -[BBPickerTableViewCell numberOfComponentsInPickerView:](struct BBPickerTableViewCell *self, SEL, id);
int __cdecl -[BBPickerTableViewCell pickerView:numberOfRowsInComponent:](struct BBPickerTableViewCell *self, SEL, id, int);
id __cdecl -[BBPickerTableViewCell pickerView:titleForRow:forComponent:](struct BBPickerTableViewCell *self, SEL, id, int, int);
void __cdecl -[BBPickerTableViewCell pickerView:didSelectRow:inComponent:](struct BBPickerTableViewCell *self, SEL, id, int, int);
id __cdecl -[BBPickerTableViewCell items](struct BBPickerTableViewCell *self, SEL);
void __cdecl -[BBPickerTableViewCell setItems:](struct BBPickerTableViewCell *self, SEL, id);
id __cdecl -[BBPickerTableViewCell display](struct BBPickerTableViewCell *self, SEL);
void __cdecl -[BBPickerTableViewCell setDisplay:](struct BBPickerTableViewCell *self, SEL, id);
void __cdecl -[BBPickerTableViewCell setPickerView:](struct BBPickerTableViewCell *self, SEL, id);
id __cdecl -[BBPickerTableViewCell selectedIndexes](struct BBPickerTableViewCell *self, SEL);
void __cdecl -[BBPickerTableViewCell .cxx_destruct](struct BBPickerTableViewCell *self, SEL);
void __cdecl -[BBQRCodeViewController viewDidLoad](struct BBQRCodeViewController *self, SEL);
void __cdecl -[BBQRCodeViewController defaultConfig](struct BBQRCodeViewController *self, SEL);
void __cdecl -[BBQRCodeViewController viewWillAppear:](struct BBQRCodeViewController *self, SEL, char);
void __cdecl -[BBQRCodeViewController viewWillDisappear:](struct BBQRCodeViewController *self, SEL, char);
void __cdecl -[BBQRCodeViewController viewDidLayoutSubviews](struct BBQRCodeViewController *self, SEL);
void __cdecl -[BBQRCodeViewController configUI](struct BBQRCodeViewController *self, SEL);
void __cdecl -[BBQRCodeViewController updateLayout](struct BBQRCodeViewController *self, SEL);
void __cdecl -[BBQRCodeViewController captureOutput:didOutputMetadataObjects:fromConnection:](struct BBQRCodeViewController *self, SEL, id, id, id);
id __cdecl -[BBQRCodeViewController label](struct BBQRCodeViewController *self, SEL);
id __cdecl -[BBQRCodeViewController qrView](struct BBQRCodeViewController *self, SEL);
id __cdecl -[BBQRCodeViewController device](struct BBQRCodeViewController *self, SEL);
void __cdecl -[BBQRCodeViewController setDevice:](struct BBQRCodeViewController *self, SEL, id);
id __cdecl -[BBQRCodeViewController input](struct BBQRCodeViewController *self, SEL);
void __cdecl -[BBQRCodeViewController setInput:](struct BBQRCodeViewController *self, SEL, id);
id __cdecl -[BBQRCodeViewController output](struct BBQRCodeViewController *self, SEL);
void __cdecl -[BBQRCodeViewController setOutput:](struct BBQRCodeViewController *self, SEL, id);
id __cdecl -[BBQRCodeViewController session](struct BBQRCodeViewController *self, SEL);
void __cdecl -[BBQRCodeViewController setSession:](struct BBQRCodeViewController *self, SEL, id);
id __cdecl -[BBQRCodeViewController preview](struct BBQRCodeViewController *self, SEL);
void __cdecl -[BBQRCodeViewController setPreview:](struct BBQRCodeViewController *self, SEL, id);
void __cdecl -[BBQRCodeViewController setLabel:](struct BBQRCodeViewController *self, SEL, id);
void __cdecl -[BBQRCodeViewController setQrView:](struct BBQRCodeViewController *self, SEL, id);
void __cdecl -[BBQRCodeViewController .cxx_destruct](struct BBQRCodeViewController *self, SEL);
id __cdecl -[BBResource init](struct BBResource *self, SEL);
id __cdecl -[BBResource resources](struct BBResource *self, SEL);
void __cdecl -[BBResource cleanResourcesWhenUpgrade](struct BBResource *self, SEL);
id __cdecl +[BBResource errorWithCode:message:](struct BBResource *self, SEL, int, id);
void __cdecl -[BBResource sync](struct BBResource *self, SEL);
int __fastcall sub_73EF0(int a1, int a2, int a3, int a4);
int __fastcall sub_74288(int a1, int a2);
void __fastcall sub_74290(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[BBResource syncFiles:](struct BBResource *self, SEL, id);
void __fastcall sub_74504(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_74744(int a1, int a2);
void __fastcall sub_74760(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void *__fastcall sub_7477C(int a1, int a2, int a3);
int __fastcall sub_74790(int a1, int a2);
void __fastcall sub_74798(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[BBResource downloadFinished](struct BBResource *self, SEL);
char __cdecl +[BBResource checkResource:checksum:](struct BBResource *self, SEL, id, id);
id __cdecl +[BBResource parseResources:](struct BBResource *self, SEL, id);
id __cdecl +[BBResource documentDirectory](struct BBResource_meta *self, SEL);
id __cdecl +[BBResource contentForResource:](struct BBResource *self, SEL, id);
id __cdecl +[BBResource jsonForResource:original:](struct BBResource *self, SEL, id, char);
id __cdecl +[BBResource dataForResource:](struct BBResource *self, SEL, id);
id __cdecl +[BBResource base64ForResource:](struct BBResource *self, SEL, id);
id __cdecl +[BBResource docPathForResource:](struct BBResource *self, SEL, id);
id __cdecl +[BBResource pathForResource:](struct BBResource *self, SEL, id);
id __cdecl +[BBResource md5:](struct BBResource *self, SEL, id);
id __cdecl -[BBResource resourceURL](struct BBResource *self, SEL);
void __cdecl -[BBResource setResourceURL:](struct BBResource *self, SEL, id);
id __cdecl -[BBResource resourcePath](struct BBResource *self, SEL);
void __cdecl -[BBResource setResourcePath:](struct BBResource *self, SEL, id);
id __cdecl -[BBResource syncFinishedBlock](struct BBResource *self, SEL);
void __cdecl -[BBResource setSyncFinishedBlock:](struct BBResource *self, SEL, id);
void __cdecl -[BBResource .cxx_destruct](struct BBResource *self, SEL);
id __cdecl -[BBRoot initWithSetting:](struct BBRoot *self, SEL, id);
id __cdecl +[BBRoot attributes](struct BBRoot_meta *self, SEL);
void __cdecl -[BBRoot update:](struct BBRoot *self, SEL, id);
void __cdecl -[BBRoot bindData:](struct BBRoot *self, SEL, id);
void __cdecl -[BBRoot toCollection:](struct BBRoot *self, SEL, id);
void __cdecl -[BBRoot addSection:](struct BBRoot *self, SEL, id);
id __cdecl -[BBRoot sectionAtIndex:](struct BBRoot *self, SEL, int);
int __cdecl -[BBRoot numberOfSections](struct BBRoot *self, SEL);
id __cdecl -[BBRoot visibleSectionAtIndex:](struct BBRoot *self, SEL, int);
id __cdecl -[BBRoot visibleRowAtIndexPath:](struct BBRoot *self, SEL, id);
int __cdecl -[BBRoot numberOfVisibleSections](struct BBRoot *self, SEL);
unsigned int __cdecl -[BBRoot indexForVisibleSection:](struct BBRoot *self, SEL, id);
id __cdecl -[BBRoot firstFocusableRow](struct BBRoot *self, SEL);
id __cdecl -[BBRoot lastFocusableRow](struct BBRoot *self, SEL);
id __cdecl -[BBRoot nextSiblingFocusableRow:](struct BBRoot *self, SEL, id);
id __cdecl -[BBRoot prevSiblingFocusableRow:](struct BBRoot *self, SEL, id);
id __cdecl -[BBRoot focusedRow](struct BBRoot *self, SEL);
id __cdecl -[BBRoot values](struct BBRoot *self, SEL);
char __cdecl -[BBRoot grouped](struct BBRoot *self, SEL);
void __cdecl -[BBRoot setGrouped:](struct BBRoot *self, SEL, char);
id __cdecl -[BBRoot setting](struct BBRoot *self, SEL);
void __cdecl -[BBRoot setSetting:](struct BBRoot *self, SEL, id);
id __cdecl -[BBRoot bind](struct BBRoot *self, SEL);
void __cdecl -[BBRoot setBind:](struct BBRoot *self, SEL, id);
id __cdecl -[BBRoot data](struct BBRoot *self, SEL);
void __cdecl -[BBRoot setData:](struct BBRoot *self, SEL, id);
id __cdecl -[BBRoot sections](struct BBRoot *self, SEL);
void __cdecl -[BBRoot setSections:](struct BBRoot *self, SEL, id);
id __cdecl -[BBRoot emptyRow](struct BBRoot *self, SEL);
void __cdecl -[BBRoot setEmptyRow:](struct BBRoot *self, SEL, id);
id __cdecl -[BBRoot sectionTemplate](struct BBRoot *self, SEL);
void __cdecl -[BBRoot setSectionTemplate:](struct BBRoot *self, SEL, id);
char __cdecl -[BBRoot showIndexTitle](struct BBRoot *self, SEL);
void __cdecl -[BBRoot setShowIndexTitle:](struct BBRoot *self, SEL, char);
id __cdecl -[BBRoot originalData](struct BBRoot *self, SEL);
void __cdecl -[BBRoot setOriginalData:](struct BBRoot *self, SEL, id);
id __cdecl -[BBRoot tableView](struct BBRoot *self, SEL);
void __cdecl -[BBRoot setTableView:](struct BBRoot *self, SEL, id);
id __cdecl -[BBRoot collectionView](struct BBRoot *self, SEL);
void __cdecl -[BBRoot setCollectionView:](struct BBRoot *self, SEL, id);
char __cdecl -[BBRoot editing](struct BBRoot *self, SEL);
void __cdecl -[BBRoot setEditing:](struct BBRoot *self, SEL, char);
void __cdecl -[BBRoot .cxx_destruct](struct BBRoot *self, SEL);
id __cdecl +[BBRow rowWithSetting:](struct BBRow *self, SEL, id);
id __cdecl -[BBRow init](struct BBRow *self, SEL);
id __cdecl -[BBRow initWithSetting:](struct BBRow *self, SEL, id);
void __cdecl -[BBRow setSelected:](struct BBRow *self, SEL, char);
id __cdecl +[BBRow attributes](struct BBRow_meta *self, SEL);
void __cdecl -[BBRow update:](struct BBRow *self, SEL, id);
void __cdecl -[BBRow setAccessoryView:](struct BBRow *self, SEL, id);
id __cdecl -[BBRow realAccessoryView](struct BBRow *self, SEL);
void __cdecl -[BBRow bindData:](struct BBRow *self, SEL, id);
id __cdecl -[BBRow indexPath](struct BBRow *self, SEL);
id __cdecl -[BBRow cellForTableView:indexPath:](struct BBRow *self, SEL, id, id);
void __cdecl -[BBRow updateCell:tableView:indexPath:](struct BBRow *self, SEL, id, id, id);
void __fastcall sub_79570(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, int a25, int a26, int a27, char a28, int a29, int a30, int a31, int a32, int a33, int a34, int a35, int a36, char a37, int a38, int a39, int a40, unsigned int a41, int a42);
void __fastcall sub_795C8(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_795F8(int a1, int a2);
void __fastcall sub_79618(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_79638(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_796C4(int a1, int a2);
int __fastcall sub_796CC(int a1);
void __cdecl -[BBRow selected:forCell:](struct BBRow *self, SEL, char, id);
id __cdecl -[BBRow createCellForTableView:](struct BBRow *self, SEL, id);
id __cdecl -[BBRow cellClass](struct BBRow *self, SEL);
float __cdecl -[BBRow heightForTableView:](struct BBRow *self, SEL, id);
id __cdecl -[BBRow extraData:](struct BBRow *self, SEL, id);
void __cdecl -[BBRow selectedAccessory:indexPath:](struct BBRow *self, SEL, id, id);
void __cdecl -[BBRow selected:indexPath:](struct BBRow *self, SEL, id, id);
id __cdecl +[BBRow styles](struct BBRow_meta *self, SEL);
int sub_7A8E0();
id __cdecl +[BBRow accessoryTypes](struct BBRow_meta *self, SEL);
char *sub_7AA50();
id __cdecl -[BBRow identifier](struct BBRow *self, SEL);
void __cdecl -[BBRow setIdentifier:](struct BBRow *self, SEL, id);
id __cdecl -[BBRow section](struct BBRow *self, SEL);
void __cdecl -[BBRow setSection:](struct BBRow *self, SEL, id);
id __cdecl -[BBRow text](struct BBRow *self, SEL);
void __cdecl -[BBRow setText:](struct BBRow *self, SEL, id);
id __cdecl -[BBRow value](struct BBRow *self, SEL);
void __cdecl -[BBRow setValue:](struct BBRow *self, SEL, id);
char __cdecl -[BBRow hidden](struct BBRow *self, SEL);
void __cdecl -[BBRow setHidden:](struct BBRow *self, SEL, char);
char __cdecl -[BBRow enabled](struct BBRow *self, SEL);
void __cdecl -[BBRow setEnabled:](struct BBRow *self, SEL, char);
char __cdecl -[BBRow focusable](struct BBRow *self, SEL);
void __cdecl -[BBRow setFocusable:](struct BBRow *self, SEL, char);
float __cdecl -[BBRow height](struct BBRow *self, SEL);
void __cdecl -[BBRow setHeight:](struct BBRow *self, SEL, float);
id __cdecl -[BBRow accessoryAction](struct BBRow *self, SEL);
void __cdecl -[BBRow setAccessoryAction:](struct BBRow *self, SEL, id);
id __cdecl -[BBRow action](struct BBRow *self, SEL);
void __cdecl -[BBRow setAction:](struct BBRow *self, SEL, id);
id __cdecl -[BBRow valueChangedAction](struct BBRow *self, SEL);
void __cdecl -[BBRow setValueChangedAction:](struct BBRow *self, SEL, id);
id __cdecl -[BBRow key](struct BBRow *self, SEL);
void __cdecl -[BBRow setKey:](struct BBRow *self, SEL, id);
id __cdecl -[BBRow data](struct BBRow *self, SEL);
void __cdecl -[BBRow setData:](struct BBRow *self, SEL, id);
id __cdecl -[BBRow bind](struct BBRow *self, SEL);
void __cdecl -[BBRow setBind:](struct BBRow *self, SEL, id);
int __cdecl -[BBRow style](struct BBRow *self, SEL);
void __cdecl -[BBRow setStyle:](struct BBRow *self, SEL, int);
id __cdecl -[BBRow detail](struct BBRow *self, SEL);
void __cdecl -[BBRow setDetail:](struct BBRow *self, SEL, id);
int __cdecl -[BBRow accessoryType](struct BBRow *self, SEL);
void __cdecl -[BBRow setAccessoryType:](struct BBRow *self, SEL, int);
id __cdecl -[BBRow accessoryView](struct BBRow *self, SEL);
char __cdecl -[BBRow selected](struct BBRow *self, SEL);
char __cdecl -[BBRow deletable](struct BBRow *self, SEL);
void __cdecl -[BBRow setDeletable:](struct BBRow *self, SEL, char);
id __cdecl -[BBRow deletedAction](struct BBRow *self, SEL);
void __cdecl -[BBRow setDeletedAction:](struct BBRow *self, SEL, id);
id __cdecl -[BBRow textFont](struct BBRow *self, SEL);
void __cdecl -[BBRow setTextFont:](struct BBRow *self, SEL, id);
float __cdecl -[BBRow textFontSize](struct BBRow *self, SEL);
void __cdecl -[BBRow setTextFontSize:](struct BBRow *self, SEL, float);
id __cdecl -[BBRow detailTextFont](struct BBRow *self, SEL);
void __cdecl -[BBRow setDetailTextFont:](struct BBRow *self, SEL, id);
float __cdecl -[BBRow detailTextFontSize](struct BBRow *self, SEL);
void __cdecl -[BBRow setDetailTextFontSize:](struct BBRow *self, SEL, float);
int __cdecl -[BBRow detailTextLine](struct BBRow *self, SEL);
void __cdecl -[BBRow setDetailTextLine:](struct BBRow *self, SEL, int);
id __cdecl -[BBRow accessibilityLabel](struct BBRow *self, SEL);
void __cdecl -[BBRow setAccessibilityLabel:](struct BBRow *self, SEL, id);
id __cdecl -[BBRow textColor](struct BBRow *self, SEL);
void __cdecl -[BBRow setTextColor:](struct BBRow *self, SEL, id);
id __cdecl -[BBRow detailTextColor](struct BBRow *self, SEL);
void __cdecl -[BBRow setDetailTextColor:](struct BBRow *self, SEL, id);
id __cdecl -[BBRow backgroundColor](struct BBRow *self, SEL);
void __cdecl -[BBRow setBackgroundColor:](struct BBRow *self, SEL, id);
id __cdecl -[BBRow image](struct BBRow *self, SEL);
void __cdecl -[BBRow setImage:](struct BBRow *self, SEL, id);
id __cdecl -[BBRow imageURL](struct BBRow *self, SEL);
void __cdecl -[BBRow setImageURL:](struct BBRow *self, SEL, id);
id __cdecl -[BBRow selectedImage](struct BBRow *self, SEL);
void __cdecl -[BBRow setSelectedImage:](struct BBRow *self, SEL, id);
float __cdecl -[BBRow imageCornerRadius](struct BBRow *self, SEL);
void __cdecl -[BBRow setImageCornerRadius:](struct BBRow *self, SEL, float);
id __cdecl -[BBRow imageData](struct BBRow *self, SEL);
void __cdecl -[BBRow setImageData:](struct BBRow *self, SEL, id);
char __cdecl -[BBRow focused](struct BBRow *self, SEL);
void __cdecl -[BBRow setFocused:](struct BBRow *self, SEL, char);
char __cdecl -[BBRow hideSeparator](struct BBRow *self, SEL);
void __cdecl -[BBRow setHideSeparator:](struct BBRow *self, SEL, char);
char __cdecl -[BBRow loading](struct BBRow *self, SEL);
void __cdecl -[BBRow setLoading:](struct BBRow *self, SEL, char);
void __cdecl -[BBRow setRealAccessoryView:](struct BBRow *self, SEL, id);
void __cdecl -[BBRow .cxx_destruct](struct BBRow *self, SEL);
id __cdecl -[BBSearchViewController initWithSetting:](struct BBSearchViewController *self, SEL, id);
void __cdecl -[BBSearchViewController loadView](struct BBSearchViewController *self, SEL);
int __cdecl -[BBSearchViewController numberOfSectionsInTableView:](struct BBSearchViewController *self, SEL, id);
int __cdecl -[BBSearchViewController tableView:numberOfRowsInSection:](struct BBSearchViewController *self, SEL, id, int);
id __cdecl -[BBSearchViewController tableView:cellForRowAtIndexPath:](struct BBSearchViewController *self, SEL, id, id);
void __cdecl -[BBSearchViewController tableView:didSelectRowAtIndexPath:](struct BBSearchViewController *self, SEL, id, id);
char __cdecl -[BBSearchViewController searchDisplayController:shouldReloadTableForSearchString:](struct BBSearchViewController *self, SEL, id, id);
void __cdecl -[BBSearchViewController searchDisplayControllerDidBeginSearch:](struct BBSearchViewController *self, SEL, id);
id __cdecl -[BBSearchViewController searchController](struct BBSearchViewController *self, SEL);
void __cdecl -[BBSearchViewController setSearchController:](struct BBSearchViewController *self, SEL, id);
id __cdecl -[BBSearchViewController results](struct BBSearchViewController *self, SEL);
void __cdecl -[BBSearchViewController setResults:](struct BBSearchViewController *self, SEL, id);
id __cdecl -[BBSearchViewController searchKey](struct BBSearchViewController *self, SEL);
void __cdecl -[BBSearchViewController setSearchKey:](struct BBSearchViewController *self, SEL, id);
int __cdecl -[BBSearchViewController searchPosition](struct BBSearchViewController *self, SEL);
void __cdecl -[BBSearchViewController setSearchPosition:](struct BBSearchViewController *self, SEL, int);
id __cdecl -[BBSearchViewController searchPlaceholder](struct BBSearchViewController *self, SEL);
void __cdecl -[BBSearchViewController setSearchPlaceholder:](struct BBSearchViewController *self, SEL, id);
char __cdecl -[BBSearchViewController fullSearch](struct BBSearchViewController *self, SEL);
void __cdecl -[BBSearchViewController setFullSearch:](struct BBSearchViewController *self, SEL, char);
void __cdecl -[BBSearchViewController .cxx_destruct](struct BBSearchViewController *self, SEL);
id __cdecl +[BBSection sectionWithSetting:](struct BBSection *self, SEL, id);
id __cdecl -[BBSection initWithSetting:](struct BBSection *self, SEL, id);
id __cdecl +[BBSection attributes](struct BBSection_meta *self, SEL);
void __cdecl -[BBSection update:](struct BBSection *self, SEL, id);
void __cdecl -[BBSection bindData:](struct BBSection *self, SEL, id);
void __cdecl -[BBSection toCollection:](struct BBSection *self, SEL, id);
void __cdecl -[BBSection addRow:](struct BBSection *self, SEL, id);
void __cdecl -[BBSection insertRow:atIndex:](struct BBSection *self, SEL, id, unsigned int);
unsigned int __cdecl -[BBSection indexOfRow:](struct BBSection *self, SEL, id);
id __cdecl -[BBSection visibleRowAtIndex:](struct BBSection *self, SEL, int);
int __cdecl -[BBSection numberOfVisibleRows](struct BBSection *self, SEL);
unsigned int __cdecl -[BBSection indexForVisibleRow:](struct BBSection *self, SEL, id);
void __cdecl -[BBSection moveVisibleRowFromIndex:toIndex:](struct BBSection *self, SEL, unsigned int, unsigned int);
id __cdecl -[BBSection value](struct BBSection *self, SEL);
id __cdecl -[BBSection headerForTableView:](struct BBSection *self, SEL, id);
id __cdecl -[BBSection footerForTableView:](struct BBSection *self, SEL, id);
float __cdecl -[BBSection headerHeightForTableView:](struct BBSection *self, SEL, id);
float __cdecl -[BBSection footerHeightForTableView:](struct BBSection *self, SEL, id);
void __cdecl -[BBSection willDisplayHeaderView:forTableView:](struct BBSection *self, SEL, id, id);
void __cdecl -[BBSection willDisplayFooterView:forTableView:](struct BBSection *self, SEL, id, id);
void __cdecl -[BBSection didEndDisplayingHeaderView:forTableView:](struct BBSection *self, SEL, id, id);
char __cdecl -[BBSection hidden](struct BBSection *self, SEL);
void __cdecl -[BBSection setHidden:](struct BBSection *self, SEL, char);
id __cdecl -[BBSection header](struct BBSection *self, SEL);
void __cdecl -[BBSection setHeader:](struct BBSection *self, SEL, id);
id __cdecl -[BBSection bind](struct BBSection *self, SEL);
void __cdecl -[BBSection setBind:](struct BBSection *self, SEL, id);
id __cdecl -[BBSection key](struct BBSection *self, SEL);
void __cdecl -[BBSection setKey:](struct BBSection *self, SEL, id);
void __cdecl -[BBSection setValue:](struct BBSection *self, SEL, id);
id __cdecl -[BBSection footer](struct BBSection *self, SEL);
void __cdecl -[BBSection setFooter:](struct BBSection *self, SEL, id);
id __cdecl -[BBSection rows](struct BBSection *self, SEL);
void __cdecl -[BBSection setRows:](struct BBSection *self, SEL, id);
id __cdecl -[BBSection root](struct BBSection *self, SEL);
void __cdecl -[BBSection setRoot:](struct BBSection *self, SEL, id);
id __cdecl -[BBSection rowTemplate](struct BBSection *self, SEL);
void __cdecl -[BBSection setRowTemplate:](struct BBSection *self, SEL, id);
id __cdecl -[BBSection itemTemplate](struct BBSection *self, SEL);
void __cdecl -[BBSection setItemTemplate:](struct BBSection *self, SEL, id);
id __cdecl -[BBSection emptyRow](struct BBSection *self, SEL);
void __cdecl -[BBSection setEmptyRow:](struct BBSection *self, SEL, id);
float __cdecl -[BBSection headerHeight](struct BBSection *self, SEL);
void __cdecl -[BBSection setHeaderHeight:](struct BBSection *self, SEL, float);
float __cdecl -[BBSection footerHeight](struct BBSection *self, SEL);
void __cdecl -[BBSection setFooterHeight:](struct BBSection *self, SEL, float);
id __cdecl -[BBSection indexTitle](struct BBSection *self, SEL);
void __cdecl -[BBSection setIndexTitle:](struct BBSection *self, SEL, id);
id __cdecl -[BBSection headerBackgroundColor](struct BBSection *self, SEL);
void __cdecl -[BBSection setHeaderBackgroundColor:](struct BBSection *self, SEL, id);
id __cdecl -[BBSection footerBackgroundColor](struct BBSection *self, SEL);
void __cdecl -[BBSection setFooterBackgroundColor:](struct BBSection *self, SEL, id);
char __cdecl -[BBSection selectable](struct BBSection *self, SEL);
void __cdecl -[BBSection setSelectable:](struct BBSection *self, SEL, char);
char __cdecl -[BBSection multiple](struct BBSection *self, SEL);
void __cdecl -[BBSection setMultiple:](struct BBSection *self, SEL, char);
char __cdecl -[BBSection sortable](struct BBSection *self, SEL);
void __cdecl -[BBSection setSortable:](struct BBSection *self, SEL, char);
char __cdecl -[BBSection loading](struct BBSection *self, SEL);
void __cdecl -[BBSection setLoading:](struct BBSection *self, SEL, char);
void __cdecl -[BBSection .cxx_destruct](struct BBSection *self, SEL);
id __cdecl -[BBSegmentedControl initWithItems:](struct BBSegmentedControl *self, SEL, id);
void __cdecl -[BBSegmentedControl pageChanged:](struct BBSegmentedControl *self, SEL, id);
id __cdecl -[BBSegmentedControl clickHandler](struct BBSegmentedControl *self, SEL);
void __cdecl -[BBSegmentedControl setClickHandler:](struct BBSegmentedControl *self, SEL, id);
void __cdecl -[BBSegmentedControl .cxx_destruct](struct BBSegmentedControl *self, SEL);
id __cdecl -[BBSegmentedRow init](struct BBSegmentedRow *self, SEL);
id __cdecl +[BBSegmentedRow attributes](struct BBSegmentedRow_meta *self, SEL);
void __cdecl -[BBSegmentedRow updateCell:tableView:indexPath:](struct BBSegmentedRow *self, SEL, id, id, id);
Class __cdecl -[BBSegmentedRow cellClass](struct BBSegmentedRow *self, SEL);
void __cdecl -[BBSegmentedRow tableViewCell:valueChanged:](struct BBSegmentedRow *self, SEL, id, id);
id __cdecl -[BBSegmentedRow items](struct BBSegmentedRow *self, SEL);
void __cdecl -[BBSegmentedRow setItems:](struct BBSegmentedRow *self, SEL, id);
int __cdecl -[BBSegmentedRow numberOfLines](struct BBSegmentedRow *self, SEL);
void __cdecl -[BBSegmentedRow setNumberOfLines:](struct BBSegmentedRow *self, SEL, int);
void __cdecl -[BBSegmentedRow .cxx_destruct](struct BBSegmentedRow *self, SEL);
id __cdecl -[BBSegmentedTableViewCell initWithStyle:reuseIdentifier:](struct BBSegmentedTableViewCell *self, SEL, int, id);
void __cdecl -[BBSegmentedTableViewCell changed:](struct BBSegmentedTableViewCell *self, SEL, id);
void __cdecl -[BBSegmentedTableViewCell setItems:](struct BBSegmentedTableViewCell *self, SEL, id);
void __cdecl -[BBSegmentedTableViewCell fixPosition](struct BBSegmentedTableViewCell *self, SEL);
void __cdecl -[BBSegmentedTableViewCell layoutSubviews](struct BBSegmentedTableViewCell *self, SEL);
id __cdecl -[BBSegmentedTableViewCell theLabel](struct BBSegmentedTableViewCell *self, SEL);
void __cdecl -[BBSegmentedTableViewCell insertMultilineTitle:forSegmentAtIndex:](struct BBSegmentedTableViewCell *self, SEL, id, unsigned int);
id __cdecl -[BBSegmentedTableViewCell imageFromLayer:](struct BBSegmentedTableViewCell *self, SEL, id);
id __cdecl -[BBSegmentedTableViewCell segmentedControl](struct BBSegmentedTableViewCell *self, SEL);
void __cdecl -[BBSegmentedTableViewCell setSegmentedControl:](struct BBSegmentedTableViewCell *self, SEL, id);
id __cdecl -[BBSegmentedTableViewCell items](struct BBSegmentedTableViewCell *self, SEL);
int __cdecl -[BBSegmentedTableViewCell numberOfLines](struct BBSegmentedTableViewCell *self, SEL);
void __cdecl -[BBSegmentedTableViewCell setNumberOfLines:](struct BBSegmentedTableViewCell *self, SEL, int);
void __cdecl -[BBSegmentedTableViewCell setTheLabel:](struct BBSegmentedTableViewCell *self, SEL, id);
void __cdecl -[BBSegmentedTableViewCell .cxx_destruct](struct BBSegmentedTableViewCell *self, SEL);
id __cdecl -[BBSliderRow init](struct BBSliderRow *self, SEL);
id __cdecl +[BBSliderRow attributes](struct BBSliderRow_meta *self, SEL);
void __cdecl -[BBSliderRow updateCell:tableView:indexPath:](struct BBSliderRow *self, SEL, id, id, id);
Class __cdecl -[BBSliderRow cellClass](struct BBSliderRow *self, SEL);
void __cdecl -[BBSliderRow tableViewCell:valueChanged:](struct BBSliderRow *self, SEL, id, id);
float __cdecl -[BBSliderRow minimumValue](struct BBSliderRow *self, SEL);
void __cdecl -[BBSliderRow setMinimumValue:](struct BBSliderRow *self, SEL, float);
float __cdecl -[BBSliderRow maximumValue](struct BBSliderRow *self, SEL);
void __cdecl -[BBSliderRow setMaximumValue:](struct BBSliderRow *self, SEL, float);
id __cdecl -[BBSliderTableViewCell initWithStyle:reuseIdentifier:](struct BBSliderTableViewCell *self, SEL, int, id);
void __cdecl -[BBSliderTableViewCell changed:](struct BBSliderTableViewCell *self, SEL, id);
void __cdecl -[BBSliderTableViewCell fixPosition](struct BBSliderTableViewCell *self, SEL);
void __cdecl -[BBSliderTableViewCell layoutSubviews](struct BBSliderTableViewCell *self, SEL);
id __cdecl -[BBSliderTableViewCell sliderView](struct BBSliderTableViewCell *self, SEL);
void __cdecl -[BBSliderTableViewCell setSliderView:](struct BBSliderTableViewCell *self, SEL, id);
void __cdecl -[BBSliderTableViewCell .cxx_destruct](struct BBSliderTableViewCell *self, SEL);
char __cdecl -[BBSocialShareDelegate application:openURL:sourceApplication:annotation:](struct BBSocialShareDelegate *self, SEL, id, id, id, id);
char __cdecl -[BBSocialShareDelegate application:openURL:options:](struct BBSocialShareDelegate *self, SEL, id, id, id);
void __cdecl -[BBSocialShareDelegate applicationDidBecomeActive:](struct BBSocialShareDelegate *self, SEL, id);
id __cdecl -[BBSplitViewController initWithSetting:](struct BBSplitViewController *self, SEL, id);
void __cdecl -[BBSplitViewController update:](struct BBSplitViewController *self, SEL, id);
void __cdecl -[BBSplitViewController viewDidLoad](struct BBSplitViewController *self, SEL);
void __cdecl -[BBSplitViewController viewWillAppear:](struct BBSplitViewController *self, SEL, char);
void __cdecl -[BBSplitViewController viewDidAppear:](struct BBSplitViewController *self, SEL, char);
void __cdecl -[BBSplitViewController viewWillDisappear:](struct BBSplitViewController *self, SEL, char);
void __cdecl -[BBSplitViewController viewDidDisappear:](struct BBSplitViewController *self, SEL, char);
void __cdecl -[BBSplitViewController viewDidPresent](struct BBSplitViewController *self, SEL);
char __cdecl -[BBSplitViewController splitViewController:shouldHideViewController:inOrientation:](struct BBSplitViewController *self, SEL, id, id, int);
id __cdecl +[BBSplitViewController displayModes](struct BBSplitViewController_meta *self, SEL);
int sub_812F4();
id __cdecl -[BBSplitViewController setting](struct BBSplitViewController *self, SEL);
void __cdecl -[BBSplitViewController setSetting:](struct BBSplitViewController *self, SEL, id);
id __cdecl -[BBSplitViewController clickOrigin](struct BBSplitViewController *self, SEL);
void __cdecl -[BBSplitViewController setClickOrigin:](struct BBSplitViewController *self, SEL, id);
id __cdecl -[BBSplitViewController action](struct BBSplitViewController *self, SEL);
void __cdecl -[BBSplitViewController setAction:](struct BBSplitViewController *self, SEL, id);
void __cdecl -[BBSplitViewController .cxx_destruct](struct BBSplitViewController *self, SEL);
void __cdecl -[BBSwitchRow updateCell:tableView:indexPath:](struct BBSwitchRow *self, SEL, id, id, id);
Class __cdecl -[BBSwitchRow cellClass](struct BBSwitchRow *self, SEL);
void __cdecl -[BBSwitchRow selected:indexPath:](struct BBSwitchRow *self, SEL, id, id);
void __cdecl -[BBSwitchRow tableViewCell:valueChanged:](struct BBSwitchRow *self, SEL, id, id);
id __cdecl -[BBSwitchTableViewCell initWithStyle:reuseIdentifier:](struct BBSwitchTableViewCell *self, SEL, int, id);
void __cdecl -[BBSwitchTableViewCell switched:](struct BBSwitchTableViewCell *self, SEL, id);
void __cdecl -[BBSwitchTableViewCell fixPosition](struct BBSwitchTableViewCell *self, SEL);
void __cdecl -[BBSwitchTableViewCell layoutSubviews](struct BBSwitchTableViewCell *self, SEL);
id __cdecl -[BBSwitchTableViewCell switchView](struct BBSwitchTableViewCell *self, SEL);
void __cdecl -[BBSwitchTableViewCell setSwitchView:](struct BBSwitchTableViewCell *self, SEL, id);
void __cdecl -[BBSwitchTableViewCell .cxx_destruct](struct BBSwitchTableViewCell *self, SEL);
id __cdecl -[BBTabBarController initWithSetting:](struct BBTabBarController *self, SEL, id);
void __cdecl -[BBTabBarController update:](struct BBTabBarController *self, SEL, id);
void __cdecl -[BBTabBarController viewDidLoadAction](struct BBTabBarController *self, SEL);
void __cdecl -[BBTabBarController viewWillAppear:](struct BBTabBarController *self, SEL, char);
void __cdecl -[BBTabBarController viewDidAppear:](struct BBTabBarController *self, SEL, char);
void __cdecl -[BBTabBarController viewWillDisappear:](struct BBTabBarController *self, SEL, char);
void __cdecl -[BBTabBarController viewDidDisappear:](struct BBTabBarController *self, SEL, char);
void __cdecl -[BBTabBarController viewDidPresent](struct BBTabBarController *self, SEL);
id __cdecl -[BBTabBarController setting](struct BBTabBarController *self, SEL);
void __cdecl -[BBTabBarController setSetting:](struct BBTabBarController *self, SEL, id);
id __cdecl -[BBTabBarController clickOrigin](struct BBTabBarController *self, SEL);
void __cdecl -[BBTabBarController setClickOrigin:](struct BBTabBarController *self, SEL, id);
id __cdecl -[BBTabBarController action](struct BBTabBarController *self, SEL);
void __cdecl -[BBTabBarController setAction:](struct BBTabBarController *self, SEL, id);
void __cdecl -[BBTabBarController .cxx_destruct](struct BBTabBarController *self, SEL);
id __cdecl +[BBTabBarItem tabBarItemWithSetting:](struct BBTabBarItem *self, SEL, id);
id __cdecl +[BBTabBarItem systemItems](struct BBTabBarItem_meta *self, SEL);
char *sub_82D68();
id __cdecl -[BBTableView initWithSetting:](struct BBTableView *self, SEL, id);
void __cdecl -[BBTableView update:](struct BBTableView *self, SEL, id);
void __cdecl -[BBTableView update:init:](struct BBTableView *self, SEL, id, char);
void __cdecl -[BBTableView scrollToTop](struct BBTableView *self, SEL);
void __cdecl -[BBTableView refresh](struct BBTableView *self, SEL);
void __cdecl -[BBTableView stopRefresh](struct BBTableView *self, SEL);
void __cdecl -[BBTableView handleRefresh:](struct BBTableView *self, SEL, id);
void __cdecl -[BBTableView deselect](struct BBTableView *self, SEL);
void __cdecl -[BBTableView deselect:](struct BBTableView *self, SEL, char);
char __cdecl -[BBTableView deleteRowAtIndexPath:](struct BBTableView *self, SEL, id);
void __cdecl -[BBTableView action:data:extra:](struct BBTableView *self, SEL, id, id, id);
void __cdecl -[BBTableView focusRow:](struct BBTableView *self, SEL, id);
void __cdecl -[BBTableView focusRowAtIndexPath:](struct BBTableView *self, SEL, id);
void __fastcall sub_83DE4(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_83E40(int a1, int a2);
void __fastcall sub_83E5C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
char __cdecl -[BBTableView updateRow:indexPath:](struct BBTableView *self, SEL, id, id);
id __cdecl -[BBTableView root](struct BBTableView *self, SEL);
void __cdecl -[BBTableView setRoot:](struct BBTableView *self, SEL, id);
id __cdecl -[BBTableView action](struct BBTableView *self, SEL);
void __cdecl -[BBTableView setAction:](struct BBTableView *self, SEL, id);
id __cdecl -[BBTableView refreshAction](struct BBTableView *self, SEL);
void __cdecl -[BBTableView setRefreshAction:](struct BBTableView *self, SEL, id);
id __cdecl -[BBTableView refreshControl](struct BBTableView *self, SEL);
void __cdecl -[BBTableView setRefreshControl:](struct BBTableView *self, SEL, id);
char __cdecl -[BBTableView highPerformance](struct BBTableView *self, SEL);
void __cdecl -[BBTableView setHighPerformance:](struct BBTableView *self, SEL, char);
void __cdecl -[BBTableView .cxx_destruct](struct BBTableView *self, SEL);
void __cdecl -[BBTableViewCell setTextColor:](struct BBTableViewCell *self, SEL, id);
void __cdecl -[BBTableViewCell setDetailTextColor:](struct BBTableViewCell *self, SEL, id);
void __cdecl -[BBTableViewCell setTextFont:size:](struct BBTableViewCell *self, SEL, id, float);
void __cdecl -[BBTableViewCell setDetailTextFont:size:](struct BBTableViewCell *self, SEL, id, float);
void __cdecl -[BBTableViewCell setTextColor:style:](struct BBTableViewCell *self, SEL, id, int);
void __cdecl -[BBTableViewCell setDetailTextColor:style:](struct BBTableViewCell *self, SEL, id, int);
void __cdecl -[BBTableViewCell setTextFont:size:style:](struct BBTableViewCell *self, SEL, id, float, int);
void __cdecl -[BBTableViewCell setDetailTextFont:size:style:](struct BBTableViewCell *self, SEL, id, float, int);
id __cdecl -[BBTableViewCell initWithStyle:reuseIdentifier:](struct BBTableViewCell *self, SEL, int, id);
void __cdecl -[BBTableViewCell prepareForReuse](struct BBTableViewCell *self, SEL);
void __cdecl -[BBTableViewCell layoutSubviews](struct BBTableViewCell *self, SEL);
void __cdecl -[BBTableViewCell setLoading:](struct BBTableViewCell *self, SEL, char);
int __cdecl -[BBTableViewCell style](struct BBTableViewCell *self, SEL);
void __cdecl -[BBTableViewCell setStyle:](struct BBTableViewCell *self, SEL, int);
id __cdecl -[BBTableViewCell tableView](struct BBTableViewCell *self, SEL);
void __cdecl -[BBTableViewCell setTableView:](struct BBTableViewCell *self, SEL, id);
char __cdecl -[BBTableViewCell loading](struct BBTableViewCell *self, SEL);
char __cdecl -[BBTableViewCell hideSeparator](struct BBTableViewCell *self, SEL);
void __cdecl -[BBTableViewCell setHideSeparator:](struct BBTableViewCell *self, SEL, char);
void __cdecl -[BBTableViewCell .cxx_destruct](struct BBTableViewCell *self, SEL);
id __cdecl +[BBTableViewController controllerWithSetting:](struct BBTableViewController *self, SEL, id);
id __cdecl -[BBTableViewController initWithSetting:](struct BBTableViewController *self, SEL, id);
void __cdecl -[BBTableViewController loadView](struct BBTableViewController *self, SEL);
void __cdecl -[BBTableViewController update:](struct BBTableViewController *self, SEL, id);
void __cdecl -[BBTableViewController viewDidLoad](struct BBTableViewController *self, SEL);
void __cdecl -[BBTableViewController viewWillAppear:](struct BBTableViewController *self, SEL, char);
void __cdecl -[BBTableViewController viewDidAppear:](struct BBTableViewController *self, SEL, char);
void __cdecl -[BBTableViewController viewWillDisappear:](struct BBTableViewController *self, SEL, char);
void __cdecl -[BBTableViewController viewDidDisappear:](struct BBTableViewController *self, SEL, char);
void __cdecl -[BBTableViewController viewDidPresent](struct BBTableViewController *self, SEL);
id __cdecl -[BBTableViewController setting](struct BBTableViewController *self, SEL);
void __cdecl -[BBTableViewController setSetting:](struct BBTableViewController *self, SEL, id);
id __cdecl -[BBTableViewController clickOrigin](struct BBTableViewController *self, SEL);
void __cdecl -[BBTableViewController setClickOrigin:](struct BBTableViewController *self, SEL, id);
id __cdecl -[BBTableViewController action](struct BBTableViewController *self, SEL);
void __cdecl -[BBTableViewController setAction:](struct BBTableViewController *self, SEL, id);
void __cdecl -[BBTableViewController .cxx_destruct](struct BBTableViewController *self, SEL);
int __cdecl -[BBTableViewDataSource numberOfSectionsInTableView:](struct BBTableViewDataSource *self, SEL, id);
int __cdecl -[BBTableViewDataSource tableView:numberOfRowsInSection:](struct BBTableViewDataSource *self, SEL, id, int);
id __cdecl -[BBTableViewDataSource sectionIndexTitlesForTableView:](struct BBTableViewDataSource *self, SEL, id);
id __cdecl -[BBTableViewDataSource tableView:cellForRowAtIndexPath:](struct BBTableViewDataSource *self, SEL, id, id);
id __cdecl -[BBTableViewDataSource tableView:titleForHeaderInSection:](struct BBTableViewDataSource *self, SEL, id, int);
id __cdecl -[BBTableViewDataSource tableView:titleForFooterInSection:](struct BBTableViewDataSource *self, SEL, id, int);
char __cdecl -[BBTableViewDataSource tableView:canEditRowAtIndexPath:](struct BBTableViewDataSource *self, SEL, id, id);
void __cdecl -[BBTableViewDataSource tableView:commitEditingStyle:forRowAtIndexPath:](struct BBTableViewDataSource *self, SEL, id, int, id);
void __cdecl -[BBTableViewDataSource tableView:moveRowAtIndexPath:toIndexPath:](struct BBTableViewDataSource *self, SEL, id, id, id);
char __cdecl -[BBTableViewDataSource tableView:canMoveRowAtIndexPath:](struct BBTableViewDataSource *self, SEL, id, id);
void __cdecl -[BBTableViewDelegate tableView:accessoryButtonTappedForRowWithIndexPath:](struct BBTableViewDelegate *self, SEL, id, id);
void __cdecl -[BBTableViewDelegate tableView:didSelectRowAtIndexPath:](struct BBTableViewDelegate *self, SEL, id, id);
int __cdecl -[BBTableViewDelegate tableView:editingStyleForRowAtIndexPath:](struct BBTableViewDelegate *self, SEL, id, id);
char __cdecl -[BBTableViewDelegate tableView:shouldIndentWhileEditingRowAtIndexPath:](struct BBTableViewDelegate *self, SEL, id, id);
float __cdecl -[BBTableViewDelegate tableView:heightForHeaderInSection:](struct BBTableViewDelegate *self, SEL, id, int);
id __cdecl -[BBTableViewDelegate tableView:viewForHeaderInSection:](struct BBTableViewDelegate *self, SEL, id, int);
float __cdecl -[BBTableViewDelegate tableView:heightForFooterInSection:](struct BBTableViewDelegate *self, SEL, id, int);
id __cdecl -[BBTableViewDelegate tableView:viewForFooterInSection:](struct BBTableViewDelegate *self, SEL, id, int);
void __cdecl -[BBTableViewDelegate tableView:willDisplayHeaderView:forSection:](struct BBTableViewDelegate *self, SEL, id, id, int);
void __cdecl -[BBTableViewDelegate tableView:willDisplayFooterView:forSection:](struct BBTableViewDelegate *self, SEL, id, id, int);
void __cdecl -[BBTableViewDelegate tableView:willDisplayCell:forRowAtIndexPath:](struct BBTableViewDelegate *self, SEL, id, id, id);
void __cdecl -[BBTableViewDelegate tableView:didEndDisplayingHeaderView:forSection:](struct BBTableViewDelegate *self, SEL, id, id, int);
void __cdecl -[BBTableViewDelegate tableView:didEndDisplayingFooterView:forSection:](struct BBTableViewDelegate *self, SEL, id, id, int);
void __cdecl -[BBTableViewDelegate tableView:didEndDisplayingCell:forRowAtIndexPath:](struct BBTableViewDelegate *self, SEL, id, id, id);
id __cdecl -[BBTableViewDelegate tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:](struct BBTableViewDelegate *self, SEL, id, id, id);
float __cdecl -[BBTableViewDelegateWithRowHeight tableView:heightForRowAtIndexPath:](struct BBTableViewDelegateWithRowHeight *self, SEL, id, id);
id __cdecl +[BBUtil onePixelImageWithColor:](struct BBUtil *self, SEL, id);
id __cdecl +[BBUtil tintColor](struct BBUtil_meta *self, SEL);
char __cdecl +[BBUtil setObjectProperties:for:from:](struct BBUtil *self, SEL, id, id, id);
char __cdecl +[BBUtil setStringProperties:for:from:](struct BBUtil *self, SEL, id, id, id);
char __cdecl +[BBUtil setNumberProperties:for:from:](struct BBUtil *self, SEL, id, id, id);
char __cdecl +[BBUtil setColorProperties:for:from:](struct BBUtil *self, SEL, id, id, id);
char __cdecl +[BBUtil setDateProperties:for:from:customFormat:](struct BBUtil *self, SEL, id, id, id, id);
char __cdecl +[BBUtil setEnumProperty:for:from:list:](struct BBUtil *self, SEL, id, id, id, id);
id __cdecl +[BBUtil settingFromBind:data:](struct BBUtil *self, SEL, id, id);
id __cdecl +[BBUtil stringifyDate:mode:format:](struct BBUtil *self, SEL, id, int, id);
id __cdecl +[BBUtil parseDate:format:](struct BBUtil *self, SEL, id, id);
id __cdecl -[BBViewController initWithSetting:](struct BBViewController *self, SEL, id);
void __cdecl -[BBViewController didReceiveMemoryWarning](struct BBViewController *self, SEL);
void __cdecl -[BBViewController viewDidLoad](struct BBViewController *self, SEL);
void __cdecl -[BBViewController viewWillAppear:](struct BBViewController *self, SEL, char);
void __cdecl -[BBViewController viewDidAppear:](struct BBViewController *self, SEL, char);
void __cdecl -[BBViewController viewWillDisappear:](struct BBViewController *self, SEL, char);
void __cdecl -[BBViewController viewDidDisappear:](struct BBViewController *self, SEL, char);
void __cdecl -[BBViewController viewDidPresent](struct BBViewController *self, SEL);
id __cdecl -[BBViewController setting](struct BBViewController *self, SEL);
void __cdecl -[BBViewController setSetting:](struct BBViewController *self, SEL, id);
id __cdecl -[BBViewController clickOrigin](struct BBViewController *self, SEL);
void __cdecl -[BBViewController setClickOrigin:](struct BBViewController *self, SEL, id);
id __cdecl -[BBViewController action](struct BBViewController *self, SEL);
void __cdecl -[BBViewController setAction:](struct BBViewController *self, SEL, id);
void __cdecl -[BBViewController .cxx_destruct](struct BBViewController *self, SEL);
void __cdecl +[BBWebViewContext initialize](struct BBWebViewContext_meta *self, SEL);
void __cdecl -[BBWebViewContext dealloc](struct BBWebViewContext *self, SEL);
id __cdecl -[BBWebViewContext initWithReceiver:](struct BBWebViewContext *self, SEL, id);
void __cdecl -[BBWebViewContext initScript](struct BBWebViewContext *self, SEL);
id __cdecl -[BBWebViewContext eval:](struct BBWebViewContext *self, SEL, id);
void __cdecl -[BBWebViewContext addScript:withSourceURL:](struct BBWebViewContext *self, SEL, id, id);
void __cdecl -[BBWebViewContext receiver:](struct BBWebViewContext *self, SEL, id);
id __cdecl -[BBWebViewContext context](struct BBWebViewContext *self, SEL);
void __cdecl -[BBWebViewContext setContext:](struct BBWebViewContext *self, SEL, id);
void __cdecl -[BBWebViewContext .cxx_destruct](struct BBWebViewContext *self, SEL);
char __cdecl +[BBWebViewAJAXProtocol canInitWithRequest:](struct BBWebViewAJAXProtocol *self, SEL, id);
id __cdecl -[BBWebViewController initWithSetting:](struct BBWebViewController *self, SEL, id);
void __cdecl -[BBWebViewController updateSetting:fromInit:](struct BBWebViewController *self, SEL, id, char);
void __cdecl -[BBWebViewController refresh](struct BBWebViewController *self, SEL);
void __cdecl -[BBWebViewController stopRefresh](struct BBWebViewController *self, SEL);
void __cdecl -[BBWebViewController handleRefresh:](struct BBWebViewController *self, SEL, id);
void __cdecl -[BBWebViewController update:](struct BBWebViewController *self, SEL, id);
id __cdecl -[BBWebViewController evalScript:](struct BBWebViewController *self, SEL, id);
id __cdecl -[BBWebViewController backItem](struct BBWebViewController *self, SEL);
void __cdecl -[BBWebViewController loadView](struct BBWebViewController *self, SEL);
void __fastcall sub_8A7E4(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_8A934(int a1, int a2);
void __fastcall sub_8A93C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[BBWebViewController currentWebViewImage](struct BBWebViewController *self, SEL);
void __cdecl -[BBWebViewController edgeLeftPanDetected:](struct BBWebViewController *self, SEL, id);
void *__fastcall sub_8AE88(int a1);
int __fastcall sub_8AEC4(int a1, int a2);
void __fastcall sub_8AECC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void *__fastcall sub_8AED4(int a1);
int __fastcall sub_8AFCC(int a1, int a2);
void __fastcall sub_8AFD4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[BBWebViewController updateToolbarItems](struct BBWebViewController *self, SEL);
void __cdecl -[BBWebViewController viewWillAppear:](struct BBWebViewController *self, SEL, char);
void __cdecl -[BBWebViewController viewDidAppear:](struct BBWebViewController *self, SEL, char);
void __cdecl -[BBWebViewController viewWillDisappear:](struct BBWebViewController *self, SEL, char);
void __cdecl -[BBWebViewController viewDidDisappear:](struct BBWebViewController *self, SEL, char);
char __cdecl -[BBWebViewController shouldAutorotateToInterfaceOrientation:](struct BBWebViewController *self, SEL, int);
void __cdecl -[BBWebViewController viewWillTransitionToSize:withTransitionCoordinator:](struct BBWebViewController *self, SEL, struct CGSize, id);
void *__fastcall sub_8B5CC(int a1, int a2, int a3);
int __fastcall sub_8B5E0(int a1, int a2);
void __fastcall sub_8B5E8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[BBWebViewController willRotateToInterfaceOrientation:duration:](struct BBWebViewController *self, SEL, int, double);
void __cdecl -[BBWebViewController didRotateFromInterfaceOrientation:](struct BBWebViewController *self, SEL, int);
void __cdecl -[BBWebViewController actionClose](struct BBWebViewController *self, SEL);
void __cdecl -[BBWebViewController actionBack](struct BBWebViewController *self, SEL);
void __cdecl -[BBWebViewController actionRewind](struct BBWebViewController *self, SEL);
void __cdecl -[BBWebViewController actionForward](struct BBWebViewController *self, SEL);
void __cdecl -[BBWebViewController actionRefresh](struct BBWebViewController *self, SEL);
void __cdecl -[BBWebViewController actionGoToSafari](struct BBWebViewController *self, SEL);
void __cdecl -[BBWebViewController viewDidLoad](struct BBWebViewController *self, SEL);
void __cdecl -[BBWebViewController load](struct BBWebViewController *self, SEL);
char __cdecl -[BBWebViewController webView:shouldStartLoadWithRequest:navigationType:](struct BBWebViewController *self, SEL, id, id, int);
void __cdecl -[BBWebViewController webViewDidStartLoad:](struct BBWebViewController *self, SEL, id);
void __cdecl -[BBWebViewController webViewDidFinishLoad:](struct BBWebViewController *self, SEL, id);
void __cdecl -[BBWebViewController fixViewport](struct BBWebViewController *self, SEL);
void __cdecl -[BBWebViewController webView:didFailLoadWithError:](struct BBWebViewController *self, SEL, id, id);
void __cdecl -[BBWebViewController webViewProgress:updateProgress:](struct BBWebViewController *self, SEL, id, float);
id __cdecl -[BBWebViewController createBackArrowImage](struct BBWebViewController *self, SEL);
id __cdecl -[BBWebViewController createForwardArrowImage](struct BBWebViewController *self, SEL);
id __cdecl -[BBWebViewController script](struct BBWebViewController *self, SEL);
void __cdecl -[BBWebViewController setScript:](struct BBWebViewController *self, SEL, id);
id __cdecl -[BBWebViewController baseURL](struct BBWebViewController *self, SEL);
void __cdecl -[BBWebViewController setBaseURL:](struct BBWebViewController *self, SEL, id);
char __cdecl -[BBWebViewController toolbarHidden](struct BBWebViewController *self, SEL);
void __cdecl -[BBWebViewController setToolbarHidden:](struct BBWebViewController *self, SEL, char);
id __cdecl -[BBWebViewController url](struct BBWebViewController *self, SEL);
void __cdecl -[BBWebViewController setUrl:](struct BBWebViewController *self, SEL, id);
id __cdecl -[BBWebViewController html](struct BBWebViewController *self, SEL);
void __cdecl -[BBWebViewController setHtml:](struct BBWebViewController *self, SEL, id);
char __cdecl -[BBWebViewController openLinkHidden](struct BBWebViewController *self, SEL);
void __cdecl -[BBWebViewController setOpenLinkHidden:](struct BBWebViewController *self, SEL, char);
id __cdecl -[BBWebViewController context](struct BBWebViewController *self, SEL);
void __cdecl -[BBWebViewController setContext:](struct BBWebViewController *self, SEL, id);
id __cdecl -[BBWebViewController trustedScheme](struct BBWebViewController *self, SEL);
void __cdecl -[BBWebViewController setTrustedScheme:](struct BBWebViewController *self, SEL, id);
id __cdecl -[BBWebViewController trustedAction](struct BBWebViewController *self, SEL);
void __cdecl -[BBWebViewController setTrustedAction:](struct BBWebViewController *self, SEL, id);
id __cdecl -[BBWebViewController webView](struct BBWebViewController *self, SEL);
void __cdecl -[BBWebViewController setWebView:](struct BBWebViewController *self, SEL, id);
id __cdecl -[BBWebViewController closeButton](struct BBWebViewController *self, SEL);
void __cdecl -[BBWebViewController setCloseButton:](struct BBWebViewController *self, SEL, id);
id __cdecl -[BBWebViewController refreshAction](struct BBWebViewController *self, SEL);
void __cdecl -[BBWebViewController setRefreshAction:](struct BBWebViewController *self, SEL, id);
id __cdecl -[BBWebViewController refreshControl](struct BBWebViewController *self, SEL);
void __cdecl -[BBWebViewController setRefreshControl:](struct BBWebViewController *self, SEL, id);
char __cdecl -[BBWebViewController supportGesture](struct BBWebViewController *self, SEL);
void __cdecl -[BBWebViewController setSupportGesture:](struct BBWebViewController *self, SEL, char);
char __cdecl -[BBWebViewController supportPregress](struct BBWebViewController *self, SEL);
void __cdecl -[BBWebViewController setSupportPregress:](struct BBWebViewController *self, SEL, char);
char __cdecl -[BBWebViewController adjustTitle](struct BBWebViewController *self, SEL);
void __cdecl -[BBWebViewController setAdjustTitle:](struct BBWebViewController *self, SEL, char);
char __cdecl -[BBWebViewController adjustViewport](struct BBWebViewController *self, SEL);
void __cdecl -[BBWebViewController setAdjustViewport:](struct BBWebViewController *self, SEL, char);
id __cdecl -[BBWebViewController backgroundColor](struct BBWebViewController *self, SEL);
void __cdecl -[BBWebViewController setBackgroundColor:](struct BBWebViewController *self, SEL, id);
id __cdecl -[BBWebViewController screenshots](struct BBWebViewController *self, SEL);
void __cdecl -[BBWebViewController setScreenshots:](struct BBWebViewController *self, SEL, id);
id __cdecl -[BBWebViewController screenImageView](struct BBWebViewController *self, SEL);
void __cdecl -[BBWebViewController setScreenImageView:](struct BBWebViewController *self, SEL, id);
id __cdecl -[BBWebViewController cacheScreenImage](struct BBWebViewController *self, SEL);
void __cdecl -[BBWebViewController setCacheScreenImage:](struct BBWebViewController *self, SEL, id);
id __cdecl -[BBWebViewController leftPanGesture](struct BBWebViewController *self, SEL);
void __cdecl -[BBWebViewController setLeftPanGesture:](struct BBWebViewController *self, SEL, id);
void __cdecl -[BBWebViewController setBackItem:](struct BBWebViewController *self, SEL, id);
id __cdecl -[BBWebViewController progressProxy](struct BBWebViewController *self, SEL);
void __cdecl -[BBWebViewController setProgressProxy:](struct BBWebViewController *self, SEL, id);
id __cdecl -[BBWebViewController progressView](struct BBWebViewController *self, SEL);
void __cdecl -[BBWebViewController setProgressView:](struct BBWebViewController *self, SEL, id);
void __cdecl -[BBWebViewController .cxx_destruct](struct BBWebViewController *self, SEL);
id __cdecl -[BBWebViewRow init](struct BBWebViewRow *self, SEL);
void __fastcall sub_8D0F8(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_8D23C(int a1, int a2);
void __fastcall sub_8D244(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[BBWebViewRow update:](struct BBWebViewRow *self, SEL, id);
id __cdecl -[BBWebViewRow evalScript:](struct BBWebViewRow *self, SEL, id);
id __cdecl +[BBWebViewRow attributes](struct BBWebViewRow_meta *self, SEL);
void __cdecl -[BBWebViewRow updateCell:tableView:indexPath:](struct BBWebViewRow *self, SEL, id, id, id);
Class __cdecl -[BBWebViewRow cellClass](struct BBWebViewRow *self, SEL);
char __cdecl -[BBWebViewRow webView:shouldStartLoadWithRequest:navigationType:](struct BBWebViewRow *self, SEL, id, id, int);
void __cdecl -[BBWebViewRow webViewDidFinishLoad:](struct BBWebViewRow *self, SEL, id);
void __cdecl -[BBWebViewRow webView:didFailLoadWithError:](struct BBWebViewRow *self, SEL, id, id);
id __cdecl -[BBWebViewRow html](struct BBWebViewRow *self, SEL);
void __cdecl -[BBWebViewRow setHtml:](struct BBWebViewRow *self, SEL, id);
id __cdecl -[BBWebViewRow url](struct BBWebViewRow *self, SEL);
void __cdecl -[BBWebViewRow setUrl:](struct BBWebViewRow *self, SEL, id);
id __cdecl -[BBWebViewRow script](struct BBWebViewRow *self, SEL);
void __cdecl -[BBWebViewRow setScript:](struct BBWebViewRow *self, SEL, id);
id __cdecl -[BBWebViewRow baseURL](struct BBWebViewRow *self, SEL);
void __cdecl -[BBWebViewRow setBaseURL:](struct BBWebViewRow *self, SEL, id);
float __cdecl -[BBWebViewRow htmlHeight](struct BBWebViewRow *self, SEL);
void __cdecl -[BBWebViewRow setHtmlHeight:](struct BBWebViewRow *self, SEL, float);
id __cdecl -[BBWebViewRow context](struct BBWebViewRow *self, SEL);
void __cdecl -[BBWebViewRow setContext:](struct BBWebViewRow *self, SEL, id);
void __cdecl -[BBWebViewRow .cxx_destruct](struct BBWebViewRow *self, SEL);
void __cdecl +[BBWebViewSSLProtocol load](struct BBWebViewSSLProtocol_meta *self, SEL);
char __cdecl +[BBWebViewSSLProtocol canInitWithRequest:](struct BBWebViewSSLProtocol *self, SEL, id);
void __cdecl +[BBWebViewSSLProtocol addTrustedDomain:](struct BBWebViewSSLProtocol *self, SEL, id);
void __cdecl +[BBWebViewSSLProtocol registerProtocol](struct BBWebViewSSLProtocol_meta *self, SEL);
void __cdecl +[BBWebViewSSLProtocol unregisterProtocol](struct BBWebViewSSLProtocol_meta *self, SEL);
id __cdecl +[BBWebViewSSLProtocol canonicalRequestForRequest:](struct BBWebViewSSLProtocol *self, SEL, id);
id __cdecl -[BBWebViewSSLProtocol initWithRequest:cachedResponse:client:](struct BBWebViewSSLProtocol *self, SEL, id, id, id);
void __cdecl -[BBWebViewSSLProtocol startLoading](struct BBWebViewSSLProtocol *self, SEL);
void __cdecl -[BBWebViewSSLProtocol stopLoading](struct BBWebViewSSLProtocol *self, SEL);
char __cdecl -[BBWebViewSSLProtocol connectionShouldUseCredentialStorage:](struct BBWebViewSSLProtocol *self, SEL, id);
char __cdecl -[BBWebViewSSLProtocol connection:canAuthenticateAgainstProtectionSpace:](struct BBWebViewSSLProtocol *self, SEL, id, id);
void __cdecl -[BBWebViewSSLProtocol connection:didReceiveAuthenticationChallenge:](struct BBWebViewSSLProtocol *self, SEL, id, id);
void __cdecl -[BBWebViewSSLProtocol connection:didCancelAuthenticationChallenge:](struct BBWebViewSSLProtocol *self, SEL, id, id);
id __cdecl -[BBWebViewSSLProtocol connection:willSendRequest:redirectResponse:](struct BBWebViewSSLProtocol *self, SEL, id, id, id);
void __cdecl -[BBWebViewSSLProtocol connection:didReceiveResponse:](struct BBWebViewSSLProtocol *self, SEL, id, id);
void __cdecl -[BBWebViewSSLProtocol connection:didReceiveData:](struct BBWebViewSSLProtocol *self, SEL, id, id);
id __cdecl -[BBWebViewSSLProtocol connection:willCacheResponse:](struct BBWebViewSSLProtocol *self, SEL, id, id);
void __cdecl -[BBWebViewSSLProtocol connectionDidFinishLoading:](struct BBWebViewSSLProtocol *self, SEL, id);
void __cdecl -[BBWebViewSSLProtocol connection:didFailWithError:](struct BBWebViewSSLProtocol *self, SEL, id, id);
id __cdecl -[BBWebViewSSLProtocol connection](struct BBWebViewSSLProtocol *self, SEL);
void __cdecl -[BBWebViewSSLProtocol setConnection:](struct BBWebViewSSLProtocol *self, SEL, id);
void __cdecl -[BBWebViewSSLProtocol .cxx_destruct](struct BBWebViewSSLProtocol *self, SEL);
void __cdecl -[BBWebViewTableViewCell layoutSubviews](struct BBWebViewTableViewCell *self, SEL);
id __cdecl -[BBWebViewTableViewCell webView](struct BBWebViewTableViewCell *self, SEL);
void __cdecl -[BBWebViewTableViewCell setWebView:](struct BBWebViewTableViewCell *self, SEL, id);
void __cdecl -[BBWebViewTableViewCell .cxx_destruct](struct BBWebViewTableViewCell *self, SEL);
id __cdecl -[BBWindow initWithFrame:](struct BBWindow *self, SEL, struct CGRect);
void __cdecl -[BBWindow initBridge](struct BBWindow *self, SEL);
void __cdecl -[BBWindow addScript:withSourceURL:](struct BBWindow *self, SEL, id, id);
void __cdecl -[BBWindow load](struct BBWindow *self, SEL);
void __cdecl -[BBWindow setAppearance:](struct BBWindow *self, SEL, id);
void __cdecl -[BBWindow loadFromResource](struct BBWindow *self, SEL);
void __cdecl -[BBWindow reloadFromResource](struct BBWindow *self, SEL);
id __cdecl -[BBWindow bridge](struct BBWindow *self, SEL);
void __cdecl -[BBWindow setBridge:](struct BBWindow *self, SEL, id);
id __cdecl -[BBWindow resource](struct BBWindow *self, SEL);
void __cdecl -[BBWindow setResource:](struct BBWindow *self, SEL, id);
id __cdecl -[BBWindow action](struct BBWindow *self, SEL);
void __cdecl -[BBWindow setAction:](struct BBWindow *self, SEL, id);
int __cdecl -[BBWindow loadCount](struct BBWindow *self, SEL);
void __cdecl -[BBWindow setLoadCount:](struct BBWindow *self, SEL, int);
id __cdecl -[BBWindow setting](struct BBWindow *self, SEL);
void __cdecl -[BBWindow setSetting:](struct BBWindow *self, SEL, id);
id __cdecl -[BBWindow view](struct BBWindow *self, SEL);
void __cdecl -[BBWindow setView:](struct BBWindow *self, SEL, id);
id __cdecl -[BBWindow clickOrigin](struct BBWindow *self, SEL);
void __cdecl -[BBWindow setClickOrigin:](struct BBWindow *self, SEL, id);
void __cdecl -[BBWindow .cxx_destruct](struct BBWindow *self, SEL);
id __cdecl -[GRKPageViewController init](struct GRKPageViewController *self, SEL);
id __cdecl -[GRKPageViewController initWithCoder:](struct GRKPageViewController *self, SEL, id);
id __cdecl -[GRKPageViewController initWithNibName:bundle:](struct GRKPageViewController *self, SEL, id, id);
void __cdecl -[GRKPageViewController setup](struct GRKPageViewController *self, SEL);
void __cdecl -[GRKPageViewController viewDidLoad](struct GRKPageViewController *self, SEL);
void __cdecl -[GRKPageViewController viewWillAppear:](struct GRKPageViewController *self, SEL, char);
void __cdecl -[GRKPageViewController viewDidAppear:](struct GRKPageViewController *self, SEL, char);
void __cdecl -[GRKPageViewController viewWillDisappear:](struct GRKPageViewController *self, SEL, char);
void __cdecl -[GRKPageViewController viewWillLayoutSubviews](struct GRKPageViewController *self, SEL);
void __cdecl -[GRKPageViewController initPages](struct GRKPageViewController *self, SEL);
void __cdecl -[GRKPageViewController setScrollEnabled:](struct GRKPageViewController *self, SEL, char);
void __cdecl -[GRKPageViewController setCurrentIndex:](struct GRKPageViewController *self, SEL, unsigned int);
void __cdecl -[GRKPageViewController setCurrentIndex:animated:](struct GRKPageViewController *self, SEL, unsigned int, char);
unsigned int __cdecl -[GRKPageViewController currentIndex](struct GRKPageViewController *self, SEL);
void __cdecl -[GRKPageViewController reloadData](struct GRKPageViewController *self, SEL);
void __cdecl -[GRKPageViewController willRotateToInterfaceOrientation:duration:](struct GRKPageViewController *self, SEL, int, double);
void __cdecl -[GRKPageViewController willAnimateRotationToInterfaceOrientation:duration:](struct GRKPageViewController *self, SEL, int, double);
void __cdecl -[GRKPageViewController updatePageCount](struct GRKPageViewController *self, SEL);
void __cdecl -[GRKPageViewController tilePages](struct GRKPageViewController *self, SEL);
void __cdecl -[GRKPageViewController removePage:withIndex:](struct GRKPageViewController *self, SEL, id, unsigned int);
void __cdecl -[GRKPageViewController addPage:withIndex:](struct GRKPageViewController *self, SEL, id, unsigned int);
void __cdecl -[GRKPageViewController adjustFramesOfVisiblePages](struct GRKPageViewController *self, SEL);
struct CGRect *__cdecl -[GRKPageViewController frameForPagingScrollView](struct CGRect *__return_ptr __struct_ptr retstr, struct GRKPageViewController *self, SEL);
struct CGRect *__cdecl -[GRKPageViewController frameForPageAtIndex:](struct CGRect *__return_ptr __struct_ptr retstr, struct GRKPageViewController *self, SEL, unsigned int);
struct CGSize __cdecl -[GRKPageViewController contentSizeForPagingScrollView](struct GRKPageViewController *self, SEL);
void __cdecl -[GRKPageViewController scrollViewDidScroll:](struct GRKPageViewController *self, SEL, id);
id __cdecl -[GRKPageViewController dataSource](struct GRKPageViewController *self, SEL);
void __cdecl -[GRKPageViewController setDataSource:](struct GRKPageViewController *self, SEL, id);
id __cdecl -[GRKPageViewController delegate](struct GRKPageViewController *self, SEL);
void __cdecl -[GRKPageViewController setDelegate:](struct GRKPageViewController *self, SEL, id);
char __cdecl -[GRKPageViewController scrollEnabled](struct GRKPageViewController *self, SEL);
int __cdecl -[GRKPageViewController offsetTop](struct GRKPageViewController *self, SEL);
void __cdecl -[GRKPageViewController setOffsetTop:](struct GRKPageViewController *self, SEL, int);
id __cdecl -[GRKPageViewController scrollView](struct GRKPageViewController *self, SEL);
void __cdecl -[GRKPageViewController setScrollView:](struct GRKPageViewController *self, SEL, id);
unsigned int __cdecl -[GRKPageViewController pageCount](struct GRKPageViewController *self, SEL);
void __cdecl -[GRKPageViewController setPageCount:](struct GRKPageViewController *self, SEL, unsigned int);
id __cdecl -[GRKPageViewController pages](struct GRKPageViewController *self, SEL);
void __cdecl -[GRKPageViewController setPages:](struct GRKPageViewController *self, SEL, id);
id __cdecl -[GRKPageViewController containers](struct GRKPageViewController *self, SEL);
void __cdecl -[GRKPageViewController setContainers:](struct GRKPageViewController *self, SEL, id);
unsigned int __cdecl -[GRKPageViewController firstVisiblePageIndexBeforeRotation](struct GRKPageViewController *self, SEL);
void __cdecl -[GRKPageViewController setFirstVisiblePageIndexBeforeRotation:](struct GRKPageViewController *self, SEL, unsigned int);
float __cdecl -[GRKPageViewController percentScrolledIntoFirstVisiblePage](struct GRKPageViewController *self, SEL);
void __cdecl -[GRKPageViewController setPercentScrolledIntoFirstVisiblePage:](struct GRKPageViewController *self, SEL, float);
unsigned int __cdecl -[GRKPageViewController internalIndex](struct GRKPageViewController *self, SEL);
void __cdecl -[GRKPageViewController setInternalIndex:](struct GRKPageViewController *self, SEL, unsigned int);
unsigned int __cdecl -[GRKPageViewController pendingIndex](struct GRKPageViewController *self, SEL);
void __cdecl -[GRKPageViewController setPendingIndex:](struct GRKPageViewController *self, SEL, unsigned int);
void __cdecl -[GRKPageViewController .cxx_destruct](struct GRKPageViewController *self, SEL);
id __cdecl -[MDHTMLComponent initWithString:htmlTag:attributes:](struct MDHTMLComponent *self, SEL, id, id, id);
id __cdecl -[MDHTMLComponent initWithTag:position:attributes:](struct MDHTMLComponent *self, SEL, id, int, id);
struct _NSRange __cdecl -[MDHTMLComponent range](struct MDHTMLComponent *self, SEL);
id __cdecl -[MDHTMLComponent description](struct MDHTMLComponent *self, SEL);
int __cdecl -[MDHTMLComponent componentIndex](struct MDHTMLComponent *self, SEL);
void __cdecl -[MDHTMLComponent setComponentIndex:](struct MDHTMLComponent *self, SEL, int);
id __cdecl -[MDHTMLComponent text](struct MDHTMLComponent *self, SEL);
void __cdecl -[MDHTMLComponent setText:](struct MDHTMLComponent *self, SEL, id);
id __cdecl -[MDHTMLComponent htmlTag](struct MDHTMLComponent *self, SEL);
void __cdecl -[MDHTMLComponent setHtmlTag:](struct MDHTMLComponent *self, SEL, id);
id __cdecl -[MDHTMLComponent attributes](struct MDHTMLComponent *self, SEL);
void __cdecl -[MDHTMLComponent setAttributes:](struct MDHTMLComponent *self, SEL, id);
int __cdecl -[MDHTMLComponent position](struct MDHTMLComponent *self, SEL);
void __cdecl -[MDHTMLComponent setPosition:](struct MDHTMLComponent *self, SEL, int);
void __cdecl -[MDHTMLComponent .cxx_destruct](struct MDHTMLComponent *self, SEL);
id __cdecl -[MDHTMLLabel init](struct MDHTMLLabel *self, SEL);
id __cdecl -[MDHTMLLabel initWithFrame:](struct MDHTMLLabel *self, SEL, struct CGRect);
void __cdecl -[MDHTMLLabel commonInit](struct MDHTMLLabel *self, SEL);
void __cdecl -[MDHTMLLabel dealloc](struct MDHTMLLabel *self, SEL);
void __cdecl -[MDHTMLLabel setText:](struct MDHTMLLabel *self, SEL, id);
void __cdecl -[MDHTMLLabel setAttributedText:](struct MDHTMLLabel *self, SEL, id);
void __cdecl -[MDHTMLLabel setHtmlText:](struct MDHTMLLabel *self, SEL, id);
id __cdecl -[MDHTMLLabel htmlAttributedText](struct MDHTMLLabel *self, SEL);
void __cdecl -[MDHTMLLabel setHtmlAttributedText:](struct MDHTMLLabel *self, SEL, id);
void __cdecl -[MDHTMLLabel setNeedsFramesetter](struct MDHTMLLabel *self, SEL);
struct __CTFramesetter *__cdecl -[MDHTMLLabel framesetter](struct MDHTMLLabel *self, SEL);
void __fastcall sub_92B56(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, unsigned int a13, int a14);
struct __CTFramesetter *__cdecl -[MDHTMLLabel highlightFramesetter](struct MDHTMLLabel *self, SEL);
void __cdecl -[MDHTMLLabel setHighlightFramesetter:](struct MDHTMLLabel *self, SEL, struct __CTFramesetter *);
void __cdecl -[MDHTMLLabel setFramesetter:](struct MDHTMLLabel *self, SEL, struct __CTFramesetter *);
void __cdecl -[MDHTMLLabel setActiveLink:](struct MDHTMLLabel *self, SEL, id);
void __cdecl -[MDHTMLLabel drawTextInRect:](struct MDHTMLLabel *self, SEL, struct CGRect);
void __cdecl -[MDHTMLLabel drawFramesetter:attributedString:textRange:inRect:context:](struct MDHTMLLabel *self, SEL, struct __CTFramesetter *, id, struct anon_struct_32, struct CGRect, struct CGContext *);
id __cdecl -[MDHTMLLabel applyStylesToString:](struct MDHTMLLabel *self, SEL, id);
void __cdecl -[MDHTMLLabel applyParagraphStyleToText:attributes:range:](struct MDHTMLLabel *self, SEL, struct __CFAttributedString *, id, struct _NSRange);
void __cdecl -[MDHTMLLabel applyCenterStyleToText:attributes:range:](struct MDHTMLLabel *self, SEL, struct __CFAttributedString *, id, struct _NSRange);
void __cdecl -[MDHTMLLabel applyItalicStyleToText:range:](struct MDHTMLLabel *self, SEL, struct __CFAttributedString *, struct _NSRange);
void __cdecl -[MDHTMLLabel applyFontAttributes:toText:range:](struct MDHTMLLabel *self, SEL, id, struct __CFAttributedString *, struct _NSRange);
void __cdecl -[MDHTMLLabel applyBoldStyleToText:range:](struct MDHTMLLabel *self, SEL, struct __CFAttributedString *, struct _NSRange);
void __cdecl -[MDHTMLLabel applyBoldItalicStyleToText:range:](struct MDHTMLLabel *self, SEL, struct __CFAttributedString *, struct _NSRange);
void __cdecl -[MDHTMLLabel applyColor:toText:range:](struct MDHTMLLabel *self, SEL, id, struct __CFAttributedString *, struct _NSRange);
id __fastcall sub_95B28(void *a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[MDHTMLLabel applyStrokeColor:toText:range:](struct MDHTMLLabel *self, SEL, id, struct __CFAttributedString *, struct _NSRange);
void __cdecl -[MDHTMLLabel applyUnderlineColor:toText:range:](struct MDHTMLLabel *self, SEL, id, struct __CFAttributedString *, struct _NSRange);
void __cdecl -[MDHTMLLabel extractStyleFromText:](struct MDHTMLLabel *self, SEL, id);
void __cdecl -[MDHTMLLabel setHighlighted:](struct MDHTMLLabel *self, SEL, char);
id __cdecl -[MDHTMLLabel textColor](struct MDHTMLLabel *self, SEL);
struct CGRect *__cdecl -[MDHTMLLabel textRectForBounds:limitedToNumberOfLines:](struct CGRect *__return_ptr __struct_ptr retstr, struct MDHTMLLabel *self, SEL, struct CGRect, int);
float __cdecl +[MDHTMLLabel sizeThatFitsHTMLString:withFont:constraints:limitedToNumberOfLines:autoDetectUrls:](struct MDHTMLLabel *self, SEL, id, id, struct CGSize, unsigned int, char);
struct CGSize __cdecl -[MDHTMLLabel sizeThatFits:](struct MDHTMLLabel *self, SEL, struct CGSize);
struct CGSize __cdecl -[MDHTMLLabel intrinsicContentSize](struct MDHTMLLabel *self, SEL);
void __cdecl -[MDHTMLLabel tintColorDidChange](struct MDHTMLLabel *self, SEL);
void __fastcall sub_97B14(int a1, int a2, int a3);
int __fastcall sub_97B78(int a1, int a2);
void __fastcall sub_97B90(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[MDHTMLLabel detectURLsInText:](struct MDHTMLLabel *self, SEL, id);
id __cdecl -[MDHTMLLabel linkAtCharacterIndex:](struct MDHTMLLabel *self, SEL, int32_t);
id __cdecl -[MDHTMLLabel linkAtPoint:](struct MDHTMLLabel *self, SEL, struct CGPoint);
int32_t __cdecl -[MDHTMLLabel characterIndexAtPoint:](struct MDHTMLLabel *self, SEL, struct CGPoint);
char __cdecl -[MDHTMLLabel canBecomeFirstResponder](struct MDHTMLLabel *self, SEL);
char __cdecl -[MDHTMLLabel canPerformAction:withSender:](struct MDHTMLLabel *self, SEL, SEL, id);
void __cdecl -[MDHTMLLabel touchesBegan:withEvent:](struct MDHTMLLabel *self, SEL, id, id);
void __cdecl -[MDHTMLLabel touchesMoved:withEvent:](struct MDHTMLLabel *self, SEL, id, id);
void __cdecl -[MDHTMLLabel touchesEnded:withEvent:](struct MDHTMLLabel *self, SEL, id, id);
void __cdecl -[MDHTMLLabel touchesCancelled:withEvent:](struct MDHTMLLabel *self, SEL, id, id);
void __cdecl -[MDHTMLLabel handleDidHoldTouch:](struct MDHTMLLabel *self, SEL, id);
void __cdecl -[MDHTMLLabel copy:](struct MDHTMLLabel *self, SEL, id);
void __cdecl -[MDHTMLLabel encodeWithCoder:](struct MDHTMLLabel *self, SEL, id);
id __cdecl -[MDHTMLLabel initWithCoder:](struct MDHTMLLabel *self, SEL, id);
id __cdecl -[MDHTMLLabel boldFontOfSize:](struct MDHTMLLabel *self, SEL, float);
id __cdecl -[MDHTMLLabel italicFontOfSize:](struct MDHTMLLabel *self, SEL, float);
id __cdecl -[MDHTMLLabel boldItalicFontOfSize:](struct MDHTMLLabel *self, SEL, float);
id __cdecl -[MDHTMLLabel delegate](struct MDHTMLLabel *self, SEL);
void __cdecl -[MDHTMLLabel setDelegate:](struct MDHTMLLabel *self, SEL, id);
id __cdecl -[MDHTMLLabel htmlText](struct MDHTMLLabel *self, SEL);
id __cdecl -[MDHTMLLabel linkAttributes](struct MDHTMLLabel *self, SEL);
void __cdecl -[MDHTMLLabel setLinkAttributes:](struct MDHTMLLabel *self, SEL, id);
id __cdecl -[MDHTMLLabel activeLinkAttributes](struct MDHTMLLabel *self, SEL);
void __cdecl -[MDHTMLLabel setActiveLinkAttributes:](struct MDHTMLLabel *self, SEL, id);
id __cdecl -[MDHTMLLabel inactiveLinkAttributes](struct MDHTMLLabel *self, SEL);
void __cdecl -[MDHTMLLabel setInactiveLinkAttributes:](struct MDHTMLLabel *self, SEL, id);
double __cdecl -[MDHTMLLabel minimumPressDuration](struct MDHTMLLabel *self, SEL);
void __cdecl -[MDHTMLLabel setMinimumPressDuration:](struct MDHTMLLabel *self, SEL, double);
float __cdecl -[MDHTMLLabel shadowRadius](struct MDHTMLLabel *self, SEL);
void __cdecl -[MDHTMLLabel setShadowRadius:](struct MDHTMLLabel *self, SEL, float);
float __cdecl -[MDHTMLLabel highlightedShadowRadius](struct MDHTMLLabel *self, SEL);
void __cdecl -[MDHTMLLabel setHighlightedShadowRadius:](struct MDHTMLLabel *self, SEL, float);
struct CGSize __cdecl -[MDHTMLLabel highlightedShadowOffset](struct MDHTMLLabel *self, SEL);
void __cdecl -[MDHTMLLabel setHighlightedShadowOffset:](struct MDHTMLLabel *self, SEL, struct CGSize);
id __cdecl -[MDHTMLLabel highlightedShadowColor](struct MDHTMLLabel *self, SEL);
void __cdecl -[MDHTMLLabel setHighlightedShadowColor:](struct MDHTMLLabel *self, SEL, id);
id __cdecl -[MDHTMLLabel customBoldFontName](struct MDHTMLLabel *self, SEL);
void __cdecl -[MDHTMLLabel setCustomBoldFontName:](struct MDHTMLLabel *self, SEL, id);
id __cdecl -[MDHTMLLabel customItalicFontName](struct MDHTMLLabel *self, SEL);
void __cdecl -[MDHTMLLabel setCustomItalicFontName:](struct MDHTMLLabel *self, SEL, id);
id __cdecl -[MDHTMLLabel customBoldItalicFontName](struct MDHTMLLabel *self, SEL);
void __cdecl -[MDHTMLLabel setCustomBoldItalicFontName:](struct MDHTMLLabel *self, SEL, id);
float __cdecl -[MDHTMLLabel firstLineIndent](struct MDHTMLLabel *self, SEL);
void __cdecl -[MDHTMLLabel setFirstLineIndent:](struct MDHTMLLabel *self, SEL, float);
float __cdecl -[MDHTMLLabel leading](struct MDHTMLLabel *self, SEL);
void __cdecl -[MDHTMLLabel setLeading:](struct MDHTMLLabel *self, SEL, float);
float __cdecl -[MDHTMLLabel lineHeightMultiple](struct MDHTMLLabel *self, SEL);
void __cdecl -[MDHTMLLabel setLineHeightMultiple:](struct MDHTMLLabel *self, SEL, float);
struct UIEdgeInsets *__cdecl -[MDHTMLLabel textInsets](struct UIEdgeInsets *__return_ptr __struct_ptr retstr, struct MDHTMLLabel *self, SEL);
void __cdecl -[MDHTMLLabel setTextInsets:](struct MDHTMLLabel *self, SEL, struct UIEdgeInsets);
unsigned int __cdecl -[MDHTMLLabel verticalAlignment](struct MDHTMLLabel *self, SEL);
void __cdecl -[MDHTMLLabel setVerticalAlignment:](struct MDHTMLLabel *self, SEL, unsigned int);
id __cdecl -[MDHTMLLabel truncationTokenString](struct MDHTMLLabel *self, SEL);
void __cdecl -[MDHTMLLabel setTruncationTokenString:](struct MDHTMLLabel *self, SEL, id);
id __cdecl -[MDHTMLLabel truncationTokenStringAttributes](struct MDHTMLLabel *self, SEL);
void __cdecl -[MDHTMLLabel setTruncationTokenStringAttributes:](struct MDHTMLLabel *self, SEL, id);
char __cdecl -[MDHTMLLabel autoDetectUrls](struct MDHTMLLabel *self, SEL);
void __cdecl -[MDHTMLLabel setAutoDetectUrls:](struct MDHTMLLabel *self, SEL, char);
id __cdecl -[MDHTMLLabel plainText](struct MDHTMLLabel *self, SEL);
void __cdecl -[MDHTMLLabel setPlainText:](struct MDHTMLLabel *self, SEL, id);
id __cdecl -[MDHTMLLabel inactiveAttributedText](struct MDHTMLLabel *self, SEL);
void __cdecl -[MDHTMLLabel setInactiveAttributedText:](struct MDHTMLLabel *self, SEL, id);
char __cdecl -[MDHTMLLabel needsFramesetter](struct MDHTMLLabel *self, SEL);
void __cdecl -[MDHTMLLabel setNeedsFramesetter:](struct MDHTMLLabel *self, SEL, char);
id __cdecl -[MDHTMLLabel dataDetector](struct MDHTMLLabel *self, SEL);
void __cdecl -[MDHTMLLabel setDataDetector:](struct MDHTMLLabel *self, SEL, id);
id __cdecl -[MDHTMLLabel links](struct MDHTMLLabel *self, SEL);
void __cdecl -[MDHTMLLabel setLinks:](struct MDHTMLLabel *self, SEL, id);
id __cdecl -[MDHTMLLabel activeLink](struct MDHTMLLabel *self, SEL);
id __cdecl -[MDHTMLLabel holdGestureTimer](struct MDHTMLLabel *self, SEL);
void __cdecl -[MDHTMLLabel setHoldGestureTimer:](struct MDHTMLLabel *self, SEL, id);
id __cdecl -[MDHTMLLabel styleComponents](struct MDHTMLLabel *self, SEL);
void __cdecl -[MDHTMLLabel setStyleComponents:](struct MDHTMLLabel *self, SEL, id);
id __cdecl -[MDHTMLLabel highlightedStyleComponents](struct MDHTMLLabel *self, SEL);
void __cdecl -[MDHTMLLabel setHighlightedStyleComponents:](struct MDHTMLLabel *self, SEL, id);
void __cdecl -[MDHTMLLabel .cxx_destruct](struct MDHTMLLabel *self, SEL);
void __fastcall sub_9A10C(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_9A240(int a1, int a2);
void __fastcall sub_9A248(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl +[NSAttributedString(AttributedStringFromHTML) attributedStringFromHTML:](struct NSAttributedString *self, SEL, id);
void __cdecl -[UIBarButtonItem(Badge) badgeInit](struct UIBarButtonItem *self, SEL);
void __cdecl -[UIBarButtonItem(Badge) refreshBadge](struct UIBarButtonItem *self, SEL);
struct CGSize __cdecl -[UIBarButtonItem(Badge) badgeExpectedSize](struct UIBarButtonItem *self, SEL);
void __cdecl -[UIBarButtonItem(Badge) updateBadgeFrame](struct UIBarButtonItem *self, SEL);
void __cdecl -[UIBarButtonItem(Badge) updateBadgeValueAnimated:](struct UIBarButtonItem *self, SEL, char);
int sub_9AD00(); // weak
void *__fastcall sub_9AD08(int a1, int a2, int a3);
int __fastcall sub_9AD1C(int a1, int a2);
void __fastcall sub_9AD24(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[UIBarButtonItem(Badge) duplicateLabel:](struct UIBarButtonItem *self, SEL, id);
void __cdecl -[UIBarButtonItem(Badge) removeBadge](struct UIBarButtonItem *self, SEL);
void __fastcall sub_9AEE0(int a1);
int __fastcall sub_9AF40(int a1, int a2);
void __fastcall sub_9AF48(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void *__fastcall sub_9AF50(int a1);
int __fastcall sub_9AFA0(int a1, int a2);
void __fastcall sub_9AFA8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[UIBarButtonItem(Badge) badge](struct UIBarButtonItem *self, SEL);
void __cdecl -[UIBarButtonItem(Badge) setBadge:](struct UIBarButtonItem *self, SEL, id);
id __cdecl -[UIBarButtonItem(Badge) badgeValue](struct UIBarButtonItem *self, SEL);
void __cdecl -[UIBarButtonItem(Badge) setBadgeValue:](struct UIBarButtonItem *self, SEL, id);
id __cdecl -[UIBarButtonItem(Badge) badgeBGColor](struct UIBarButtonItem *self, SEL);
void __cdecl -[UIBarButtonItem(Badge) setBadgeBGColor:](struct UIBarButtonItem *self, SEL, id);
id __cdecl -[UIBarButtonItem(Badge) badgeTextColor](struct UIBarButtonItem *self, SEL);
void __cdecl -[UIBarButtonItem(Badge) setBadgeTextColor:](struct UIBarButtonItem *self, SEL, id);
id __cdecl -[UIBarButtonItem(Badge) badgeFont](struct UIBarButtonItem *self, SEL);
void __cdecl -[UIBarButtonItem(Badge) setBadgeFont:](struct UIBarButtonItem *self, SEL, id);
float __cdecl -[UIBarButtonItem(Badge) badgePadding](struct UIBarButtonItem *self, SEL);
void __cdecl -[UIBarButtonItem(Badge) setBadgePadding:](struct UIBarButtonItem *self, SEL, float);
float __cdecl -[UIBarButtonItem(Badge) badgeMinSize](struct UIBarButtonItem *self, SEL);
void __cdecl -[UIBarButtonItem(Badge) setBadgeMinSize:](struct UIBarButtonItem *self, SEL, float);
float __cdecl -[UIBarButtonItem(Badge) badgeOriginX](struct UIBarButtonItem *self, SEL);
void __cdecl -[UIBarButtonItem(Badge) setBadgeOriginX:](struct UIBarButtonItem *self, SEL, float);
float __cdecl -[UIBarButtonItem(Badge) badgeOriginY](struct UIBarButtonItem *self, SEL);
void __cdecl -[UIBarButtonItem(Badge) setBadgeOriginY:](struct UIBarButtonItem *self, SEL, float);
char __cdecl -[UIBarButtonItem(Badge) shouldHideBadgeAtZero](struct UIBarButtonItem *self, SEL);
void __cdecl -[UIBarButtonItem(Badge) setShouldHideBadgeAtZero:](struct UIBarButtonItem *self, SEL, char);
char __cdecl -[UIBarButtonItem(Badge) shouldAnimateBadge](struct UIBarButtonItem *self, SEL);
void __cdecl -[UIBarButtonItem(Badge) setShouldAnimateBadge:](struct UIBarButtonItem *self, SEL, char);
id __cdecl +[UIColor(ColorWithString) colorWithString:](struct UIColor *self, SEL, id);
id __cdecl -[UIImage(Resize) resize:](struct UIImage *self, SEL, struct CGSize);
id __cdecl -[UIImageView(UIActivityIndicatorForSDWebImage) activityIndicator](struct UIImageView *self, SEL);
void __cdecl -[UIImageView(UIActivityIndicatorForSDWebImage) setActivityIndicator:](struct UIImageView *self, SEL, id);
void __cdecl -[UIImageView(UIActivityIndicatorForSDWebImage) addActivityIndicatorWithStyle:](struct UIImageView *self, SEL, int);
void __fastcall sub_9BCD8(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_9BD18(int a1, int a2);
void __fastcall sub_9BD20(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_9BD28(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_9BD64(int a1, int a2);
void __fastcall sub_9BD6C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[UIImageView(UIActivityIndicatorForSDWebImage) updateActivityIndicatorFrame](struct UIImageView *self, SEL);
void __cdecl -[UIImageView(UIActivityIndicatorForSDWebImage) removeActivityIndicator](struct UIImageView *self, SEL);
void __cdecl -[UIImageView(UIActivityIndicatorForSDWebImage) layoutSubviews](struct UIImageView *self, SEL);
void __cdecl -[UIImageView(UIActivityIndicatorForSDWebImage) setImageWithURL:usingActivityIndicatorStyle:](struct UIImageView *self, SEL, id, int);
void __cdecl -[UIImageView(UIActivityIndicatorForSDWebImage) setImageWithURL:placeholderImage:usingActivityIndicatorStyle:](struct UIImageView *self, SEL, id, id, int);
void __cdecl -[UIImageView(UIActivityIndicatorForSDWebImage) setImageWithURL:placeholderImage:options:usingActivityIndicatorStyle:](struct UIImageView *self, SEL, id, id, unsigned int, int);
void __cdecl -[UIImageView(UIActivityIndicatorForSDWebImage) setImageWithURL:completed:usingActivityIndicatorStyle:](struct UIImageView *self, SEL, id, id, int);
void __cdecl -[UIImageView(UIActivityIndicatorForSDWebImage) setImageWithURL:placeholderImage:completed:usingActivityIndicatorStyle:](struct UIImageView *self, SEL, id, id, id, int);
void __cdecl -[UIImageView(UIActivityIndicatorForSDWebImage) setImageWithURL:placeholderImage:options:completed:usingActivityIndicatorStyle:](struct UIImageView *self, SEL, id, id, unsigned int, id, int);
void __cdecl -[UIImageView(UIActivityIndicatorForSDWebImage) setImageWithURL:placeholderImage:options:progress:completed:usingActivityIndicatorStyle:](struct UIImageView *self, SEL, id, id, unsigned int, id, id, int);
void __fastcall sub_9C236(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, unsigned int a25);
void __fastcall sub_9C268(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_9C2D4(int a1, int a2);
int __fastcall sub_9C2F8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4);
id __cdecl +[UIImage(DHImageUtils) imageWithColor:size:](struct UIImage *self, SEL, id, struct CGSize);
id __cdecl +[UIImage(DHImageFromArrayUtils) verticalImageFromArray:](struct UIImage *self, SEL, id);
struct CGSize __cdecl +[UIImage(DHImageFromArrayUtils) verticalAppendedTotalImageSizeFromImagesArray:](struct UIImage *self, SEL, id);
id __cdecl -[UIScrollView(DHSmartScreenshot) screenshotOfVisibleContent](struct UIScrollView *self, SEL);
id __cdecl -[UITableView(DHSmartScreenshot) screenshot](struct UITableView *self, SEL);
id __cdecl -[UITableView(DHSmartScreenshot) screenshotOfCellAtIndexPath:](struct UITableView *self, SEL, id);
id __cdecl -[UITableView(DHSmartScreenshot) screenshotOfHeaderView](struct UITableView *self, SEL);
id __cdecl -[UITableView(DHSmartScreenshot) screenshotOfFooterView](struct UITableView *self, SEL);
id __cdecl -[UITableView(DHSmartScreenshot) screenshotOfHeaderViewAtSection:](struct UITableView *self, SEL, unsigned int);
id __cdecl -[UITableView(DHSmartScreenshot) screenshotOfFooterViewAtSection:](struct UITableView *self, SEL, unsigned int);
id __cdecl -[UITableView(DHSmartScreenshot) screenshotExcludingAllHeaders:excludingAllFooters:excludingAllRows:](struct UITableView *self, SEL, char, char, char);
id __cdecl -[UITableView(DHSmartScreenshot) screenshotExcludingHeadersAtSections:excludingFootersAtSections:excludingRowsAtIndexPaths:](struct UITableView *self, SEL, id, id, id);
id __cdecl -[UITableView(DHSmartScreenshot) screenshotOfHeadersAtSections:footersAtSections:rowsAtIndexPaths:](struct UITableView *self, SEL, id, id, id);
id __cdecl -[UITableView(DHSmartScreenshot) screenshotOfCellAtIndexPath:excludedIndexPaths:](struct UITableView *self, SEL, id, id);
id __cdecl -[UITableView(DHSmartScreenshot) screenshotOfHeaderViewAtSection:excludedHeaderSections:](struct UITableView *self, SEL, unsigned int, id);
id __cdecl -[UITableView(DHSmartScreenshot) screenshotOfFooterViewAtSection:excludedFooterSections:](struct UITableView *self, SEL, unsigned int, id);
id __cdecl -[UITableView(DHSmartScreenshot) screenshotOfCellAtIndexPath:includedIndexPaths:](struct UITableView *self, SEL, id, id);
id __cdecl -[UITableView(DHSmartScreenshot) screenshotOfHeaderViewAtSection:includedHeaderSections:](struct UITableView *self, SEL, unsigned int, id);
id __cdecl -[UITableView(DHSmartScreenshot) screenshotOfFooterViewAtSection:includedFooterSections:](struct UITableView *self, SEL, unsigned int, id);
id __cdecl -[UITableView(DHSmartScreenshot) blankScreenshotOfHeaderAtSection:](struct UITableView *self, SEL, unsigned int);
id __cdecl -[UITableView(DHSmartScreenshot) blankScreenshotOfFooterAtSection:](struct UITableView *self, SEL, unsigned int);
id __cdecl -[UITableView(DHSmartScreenshot) allSectionsIndexes](struct UITableView *self, SEL);
id __cdecl -[UITableView(DHSmartScreenshot) allRowsIndexPaths](struct UITableView *self, SEL);
id __cdecl -[UIView(DHSmartScreenshot) screenshot](struct UIView *self, SEL);
id __cdecl -[UIView(DHSmartScreenshot) screenshotForCroppingRect:](struct UIView *self, SEL, struct CGRect);
void __cdecl -[FlurryPulseResponse initSchema](struct FlurryPulseResponse *self, SEL);
void __cdecl -[FlurryPulseResponse dealloc](struct FlurryPulseResponse *self, SEL);
id __cdecl -[FlurryPulseResponse parsePulseResponse:](struct FlurryPulseResponse *self, SEL, id);
id __cdecl +[FlurryPulseCallbackReportManager sharedInstance](struct FlurryPulseCallbackReportManager_meta *self, SEL);
void __fastcall sub_9F210(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[FlurryPulseCallbackReportManager init](struct FlurryPulseCallbackReportManager *self, SEL);
void __cdecl -[FlurryPulseCallbackReportManager archiveAttempt:](struct FlurryPulseCallbackReportManager *self, SEL, id);
void *__fastcall sub_9F39C(int a1);
int __fastcall sub_9F3B4(int a1, int a2);
void __fastcall sub_9F3CC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[FlurryPulseCallbackReportManager performArchiveAttempt:](struct FlurryPulseCallbackReportManager *self, SEL, id);
void __fastcall sub_9F922(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, int a25, int a26, int a27, int a28, int a29, int a30, int a31, int a32, int a33, int a34, int a35, int a36, int a37, int a38, int a39, int a40, int a41, int a42, int a43, int a44, int a45, int a46, int a47, int a48, int a49, int a50, int a51, unsigned int a52, int a53);
void __cdecl -[FlurryPulseCallbackReportManager updateTotalAttemptsCount:](struct FlurryPulseCallbackReportManager *self, SEL, id);
void __cdecl -[FlurryPulseCallbackReportManager setSavedTriggers:](struct FlurryPulseCallbackReportManager *self, SEL, id);
char __cdecl -[FlurryPulseCallbackReportManager addToSavedTriggers:](struct FlurryPulseCallbackReportManager *self, SEL, id);
void __fastcall sub_9FD3A(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, unsigned int a13, int a14);
id __cdecl -[FlurryPulseCallbackReportManager savedTriggers](struct FlurryPulseCallbackReportManager *self, SEL);
id __cdecl -[FlurryPulseCallbackReportManager reportsFilePath](struct FlurryPulseCallbackReportManager *self, SEL);
id __cdecl -[FlurryPulseCallbackReportManager dataForSending:](struct FlurryPulseCallbackReportManager *self, SEL, id);
void __cdecl -[FlurryPulseCallbackReportManager checkAndSendReportsToServer](struct FlurryPulseCallbackReportManager *self, SEL);
void __cdecl -[FlurryPulseCallbackReportManager sendCallBackInfoToServer](struct FlurryPulseCallbackReportManager *self, SEL);
id __cdecl -[FlurryPulseCallbackReportManager callbackStatusDataForReports:](struct FlurryPulseCallbackReportManager *self, SEL, id);
struct dispatch_queue_s *__cdecl -[FlurryPulseCallbackReportManager queue](struct FlurryPulseCallbackReportManager *self, SEL);
void __cdecl -[FlurryPulseCallbackReportManager setQueue:](struct FlurryPulseCallbackReportManager *self, SEL, struct dispatch_queue_s *);
id __cdecl -[FlurryPulseCallbackReportManager triggers](struct FlurryPulseCallbackReportManager *self, SEL);
void __cdecl -[FlurryPulseCallbackReportManager setTriggers:](struct FlurryPulseCallbackReportManager *self, SEL, id);
unsigned int __cdecl -[FlurryPulseCallbackReportManager totalAttemptCount](struct FlurryPulseCallbackReportManager *self, SEL);
void __cdecl -[FlurryPulseCallbackReportManager setTotalAttemptCount:](struct FlurryPulseCallbackReportManager *self, SEL, unsigned int);
void __cdecl -[FlurryPulseCallbackReportManager .cxx_destruct](struct FlurryPulseCallbackReportManager *self, SEL);
void __cdecl -[FlurryHttpAsyncTask dealloc](struct FlurryHttpAsyncTask *self, SEL);
id __cdecl -[FlurryHttpAsyncTask init](struct FlurryHttpAsyncTask *self, SEL);
id __cdecl +[FlurryHttpAsyncTask get:delegate:](struct FlurryHttpAsyncTask *self, SEL, id, id);
id __cdecl +[FlurryHttpAsyncTask get:headerFields:delegate:](struct FlurryHttpAsyncTask *self, SEL, id, id, id);
id __cdecl +[FlurryHttpAsyncTask post:body:delegate:](struct FlurryHttpAsyncTask *self, SEL, id, id, id);
id __cdecl +[FlurryHttpAsyncTask post:body:headerFields:delegate:](struct FlurryHttpAsyncTask *self, SEL, id, id, id, id);
id __cdecl +[FlurryHttpAsyncTask sendMethod:to:body:headerFields:delegate:](struct FlurryHttpAsyncTask *self, SEL, id, id, id, id, id);
id __cdecl +[FlurryHttpAsyncTask sendMethod:to:body:headerFields:delegate:startImmediately:](struct FlurryHttpAsyncTask *self, SEL, id, id, id, id, id, char);
id __cdecl +[FlurryHttpAsyncTask sendMethod:to:body:headerFields:timeoutInterval:useCachePolicy:delegate:startImmediately:](struct FlurryHttpAsyncTask *self, SEL, id, id, id, id, int, unsigned int, id, char);
void __cdecl -[FlurryHttpAsyncTask startInRunLoop:](struct FlurryHttpAsyncTask *self, SEL, id);
void __cdecl -[FlurryHttpAsyncTask cancelTask](struct FlurryHttpAsyncTask *self, SEL);
id __cdecl +[FlurryHttpAsyncTask queryDictionaryToString:](struct FlurryHttpAsyncTask *self, SEL, id);
id __cdecl +[FlurryHttpAsyncTask stringToQueryDictionary:](struct FlurryHttpAsyncTask *self, SEL, id);
id __cdecl +[FlurryHttpAsyncTask urlWithProtocol:host:port:path:query:](struct FlurryHttpAsyncTask *self, SEL, id, id, int, id, id);
id __cdecl -[FlurryHttpAsyncTask connection](struct FlurryHttpAsyncTask *self, SEL);
void __cdecl -[FlurryHttpAsyncTask setConnection:](struct FlurryHttpAsyncTask *self, SEL, id);
id __cdecl -[FlurryHttpAsyncTask tag](struct FlurryHttpAsyncTask *self, SEL);
void __cdecl -[FlurryHttpAsyncTask setTag:](struct FlurryHttpAsyncTask *self, SEL, id);
int __cdecl -[FlurryHttpAsyncTask redirectsLimit](struct FlurryHttpAsyncTask *self, SEL);
void __cdecl -[FlurryHttpAsyncTask setRedirectsLimit:](struct FlurryHttpAsyncTask *self, SEL, int);
id __cdecl -[FlurryHttpAsyncTask taskParams](struct FlurryHttpAsyncTask *self, SEL);
void __cdecl -[FlurryHttpAsyncTask setTaskParams:](struct FlurryHttpAsyncTask *self, SEL, id);
unsigned int __cdecl -[FlurryHttpAsyncTask backgroundTask](struct FlurryHttpAsyncTask *self, SEL);
void __cdecl -[FlurryHttpAsyncTask setBackgroundTask:](struct FlurryHttpAsyncTask *self, SEL, unsigned int);
int __cdecl -[FlurryHttpAsyncTask redirectsCount](struct FlurryHttpAsyncTask *self, SEL);
void __cdecl -[FlurryHttpAsyncTask setRedirectsCount:](struct FlurryHttpAsyncTask *self, SEL, int);
void __cdecl -[FlurryHttpAsyncTask .cxx_destruct](struct FlurryHttpAsyncTask *self, SEL);
id __cdecl +[FlurryDataSenderIndex instantiatedIndexWithIndexFile:](struct FlurryDataSenderIndex *self, SEL, id);
id __cdecl -[FlurryDataSenderIndex init](struct FlurryDataSenderIndex *self, SEL);
id __cdecl -[FlurryDataSenderIndex initWithCoder:](struct FlurryDataSenderIndex *self, SEL, id);
void __cdecl -[FlurryDataSenderIndex encodeWithCoder:](struct FlurryDataSenderIndex *self, SEL, id);
void __cdecl -[FlurryDataSenderIndex saveState](struct FlurryDataSenderIndex *self, SEL);
void __cdecl -[FlurryDataSenderIndex addBlockInfo:forDataKey:](struct FlurryDataSenderIndex *self, SEL, id, id);
void __cdecl -[FlurryDataSenderIndex removeBlockInfoWithIdentifier:forDataKey:](struct FlurryDataSenderIndex *self, SEL, id, id);
void __cdecl -[FlurryDataSenderIndex setupForCurrentDataKey:](struct FlurryDataSenderIndex *self, SEL, id);
char __cdecl -[FlurryDataSenderIndex discardOutdatedBlocksForDataKey:](struct FlurryDataSenderIndex *self, SEL, id);
id __cdecl -[FlurryDataSenderIndex notSentBlocksForDataKey:](struct FlurryDataSenderIndex *self, SEL, id);
id __cdecl -[FlurryDataSenderIndex indexMap](struct FlurryDataSenderIndex *self, SEL);
void __cdecl -[FlurryDataSenderIndex setIndexMap:](struct FlurryDataSenderIndex *self, SEL, id);
char __cdecl -[FlurryDataSenderIndex sentReportSuccessfully](struct FlurryDataSenderIndex *self, SEL);
void __cdecl -[FlurryDataSenderIndex setSentReportSuccessfully:](struct FlurryDataSenderIndex *self, SEL, char);
id __cdecl -[FlurryDataSenderIndex fileName](struct FlurryDataSenderIndex *self, SEL);
void __cdecl -[FlurryDataSenderIndex setFileName:](struct FlurryDataSenderIndex *self, SEL, id);
void __cdecl -[FlurryDataSenderIndex .cxx_destruct](struct FlurryDataSenderIndex *self, SEL);
char __cdecl +[FlurryReachability accessInstanceVariablesDirectly](struct FlurryReachability_meta *self, SEL);
void __cdecl -[FlurryReachability dealloc](struct FlurryReachability *self, SEL);
id __cdecl -[FlurryReachability initWithFlurryReachabilityRef:](struct FlurryReachability *self, SEL, struct __SCNetworkReachability *);
char __cdecl -[FlurryReachability flurryStartNotifier](struct FlurryReachability *self, SEL);
void __fastcall sub_A2898(int a1, int a2, void *a3, int a4, struct objc_object *a5);
void __cdecl -[FlurryReachability flurryStopNotifier](struct FlurryReachability *self, SEL);
char __cdecl -[FlurryReachability isFlurryReachabilityEqual:](struct FlurryReachability *self, SEL, id);
id __cdecl +[FlurryReachability flurryReachabilityWithHostName:](struct FlurryReachability *self, SEL, id);
id __cdecl +[FlurryReachability flurryMakeAddressKey:](struct FlurryReachability *self, SEL, unsigned int);
id __cdecl +[FlurryReachability flurryReachabilityWithAddress:](struct FlurryReachability *self, SEL, const struct sockaddr_in *);
id __cdecl +[FlurryReachability flurryReachabilityForInternetConnection](struct FlurryReachability_meta *self, SEL);
id __cdecl +[FlurryReachability flurryReachabilityForLocalWiFi](struct FlurryReachability_meta *self, SEL);
int __cdecl -[FlurryReachability flurryNetworkStatusForFlags:](struct FlurryReachability *self, SEL, unsigned int);
int __cdecl -[FlurryReachability flurryCurrentReachabilityStatus](struct FlurryReachability *self, SEL);
char __cdecl -[FlurryReachability isFlurryReachable](struct FlurryReachability *self, SEL);
char __cdecl -[FlurryReachability isFlurryConnectionRequired](struct FlurryReachability *self, SEL);
char __cdecl -[FlurryReachability isFlurryConnectionOnDemand](struct FlurryReachability *self, SEL);
char __cdecl -[FlurryReachability isFlurryUserInterventionRequired](struct FlurryReachability *self, SEL);
char __cdecl -[FlurryReachability isFlurryReachableViaWWAN](struct FlurryReachability *self, SEL);
char __cdecl -[FlurryReachability isFlurryReachableViaWiFi](struct FlurryReachability *self, SEL);
unsigned int __cdecl -[FlurryReachability flurryReachabilityFlags](struct FlurryReachability *self, SEL);
id __cdecl -[FlurryReachability key](struct FlurryReachability *self, SEL);
void __cdecl -[FlurryReachability setKey:](struct FlurryReachability *self, SEL, id);
void __cdecl -[FlurryReachability .cxx_destruct](struct FlurryReachability *self, SEL);
id __cdecl -[FlurryHTTPResponse initWithResponse:body:error:](struct FlurryHTTPResponse *self, SEL, id, id, id);
id __cdecl -[FlurryHTTPResponse initWithBody:statusCode:headers:error:](struct FlurryHTTPResponse *self, SEL, id, int, id, id);
char __cdecl -[FlurryHTTPResponse isSuccess](struct FlurryHTTPResponse *self, SEL);
char __cdecl -[FlurryHTTPResponse isError](struct FlurryHTTPResponse *self, SEL);
id __cdecl -[FlurryHTTPResponse description](struct FlurryHTTPResponse *self, SEL);
id __cdecl -[FlurryHTTPResponse saveToDisk](struct FlurryHTTPResponse *self, SEL);
id __cdecl +[FlurryHTTPResponse readFromURL:](struct FlurryHTTPResponse *self, SEL, id);
id __cdecl +[FlurryHTTPResponse filePath:](struct FlurryHTTPResponse *self, SEL, int);
id __cdecl -[FlurryHTTPResponse body](struct FlurryHTTPResponse *self, SEL);
int __cdecl -[FlurryHTTPResponse statusCode](struct FlurryHTTPResponse *self, SEL);
id __cdecl -[FlurryHTTPResponse error](struct FlurryHTTPResponse *self, SEL);
id __cdecl -[FlurryHTTPResponse headers](struct FlurryHTTPResponse *self, SEL);
void __cdecl -[FlurryHTTPResponse .cxx_destruct](struct FlurryHTTPResponse *self, SEL);
void __cdecl +[FlurryPulseCBReportSender setupInstanceWithQueue:](struct FlurryPulseCBReportSender *self, SEL, struct dispatch_queue_s *);
id __cdecl +[FlurryPulseCBReportSender instance](struct FlurryPulseCBReportSender_meta *self, SEL);
void __cdecl +[FlurryPulseCBReportSender cleanup](struct FlurryPulseCBReportSender_meta *self, SEL);
Class __cdecl +[FlurryPulseCBReportSender httpAsyncTaskClass](struct FlurryPulseCBReportSender_meta *self, SEL);
id __cdecl +[FlurryPulseCBReportSender pulseCBReportDataKey](struct FlurryPulseCBReportSender_meta *self, SEL);
id __cdecl -[FlurryPulseCBReportSender initWithQueue:](struct FlurryPulseCBReportSender *self, SEL, struct dispatch_queue_s *);
void __cdecl -[FlurryPulseCBReportSender setup](struct FlurryPulseCBReportSender *self, SEL);
id __cdecl -[FlurryPulseCBReportSender storePulseCBReportData:withGrpupId:](struct FlurryPulseCBReportSender *self, SEL, id, id);
void __cdecl -[FlurryPulseCBReportSender removeStoredDataWithIdentifier:](struct FlurryPulseCBReportSender *self, SEL, id);
void __cdecl -[FlurryPulseCBReportSender sendPulseReportsData:](struct FlurryPulseCBReportSender *self, SEL, id);
void __cdecl -[FlurryPulseCBReportSender sendData:withIdentifier:](struct FlurryPulseCBReportSender *self, SEL, id, id);
void __fastcall sub_A42D4(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_A431C(int a1, int a2);
void __fastcall sub_A4324(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[FlurryPulseCBReportSender requestDidFail:withResponse:](struct FlurryPulseCBReportSender *self, SEL, id, id);
void *__fastcall sub_A43D8(int a1);
int __fastcall sub_A4458(int a1, int a2);
void __fastcall sub_A4474(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[FlurryPulseCBReportSender requestDidCancel:withResponse:](struct FlurryPulseCBReportSender *self, SEL, id, id);
void *__fastcall sub_A4514(int a1);
int __fastcall sub_A452C(int a1, int a2);
void __fastcall sub_A4544(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[FlurryPulseCBReportSender requestSuccessful:withResponse:](struct FlurryPulseCBReportSender *self, SEL, id, id);
void *__fastcall sub_A460C(int a1);
int __fastcall sub_A4628(int a1, int a2);
void __fastcall sub_A4644(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[FlurryPulseCBReportSender requestSuccessComplete:withResponse:](struct FlurryPulseCBReportSender *self, SEL, id, id);
void __cdecl -[FlurryPulseCBReportSender didCompleteAllTasks](struct FlurryPulseCBReportSender *self, SEL);
void __cdecl -[FlurryPulseCBReportSender retransmitNotSentBlocks](struct FlurryPulseCBReportSender *self, SEL);
id __cdecl -[FlurryPulseCBReportSender pulseCBReportDataIndex](struct FlurryPulseCBReportSender *self, SEL);
void __cdecl -[FlurryPulseCBReportSender setPulseCBReportDataIndex:](struct FlurryPulseCBReportSender *self, SEL, id);
void __cdecl -[FlurryPulseCBReportSender .cxx_destruct](struct FlurryPulseCBReportSender *self, SEL);
id __cdecl +[FlurrySession getAgentVersionWithBuild](struct FlurrySession_meta *self, SEL);
id __cdecl +[FlurrySession getAgentVersion](struct FlurrySession_meta *self, SEL);
id __cdecl +[FlurrySession sessionWithApiKey:startTime:](struct FlurrySession *self, SEL, id, id);
void __cdecl +[FlurrySession setupCurrentSessionWithKey:](struct FlurrySession *self, SEL, id);
void __fastcall sub_A5996(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, unsigned int a9, int a10);
void __cdecl +[FlurrySession cleanup](struct FlurrySession_meta *self, SEL);
id __cdecl -[FlurrySession sessionWithNewEventsWithApiKey:startTime:](struct FlurrySession *self, SEL, id, id);
id __cdecl +[FlurrySession currentSession](struct FlurrySession_meta *self, SEL);
id __cdecl +[FlurrySession currentWatchSession](struct FlurrySession_meta *self, SEL);
void __fastcall sub_A611C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, unsigned int a13, int a14);
void __cdecl -[FlurrySession loadWatchDebug](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession loadWatchAppVersion](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession loadWatchUserID](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession loadWatchEventThreshold](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession loadWatchDurationThreshold](struct FlurrySession *self, SEL);
id __cdecl +[FlurrySession sessionId](struct FlurrySession_meta *self, SEL);
void __cdecl -[FlurrySession endSessionAsync](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession setSessionReportsOnCloseEnabled:](struct FlurrySession *self, SEL, char);
char __cdecl -[FlurrySession sessionReportsOnCloseEnabled](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession setSessionReportsOnPauseEnabled:](struct FlurrySession *self, SEL, char);
char __cdecl -[FlurrySession sessionReportsOnPauseEnabled](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession setCrashReportingEnabled:](struct FlurrySession *self, SEL, char);
char __cdecl -[FlurrySession crashReportingEnabled](struct FlurrySession *self, SEL);
id __cdecl -[FlurrySession initWithAPIKey:appVersion:startDate:](struct FlurrySession *self, SEL, id, id, id);
void __fastcall sub_A6A6A(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, unsigned int a17, int a18);
void __cdecl -[FlurrySession resetSessionData](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession pauseSession](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession markSessionAsResuming](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession resumeSession](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession archiveSession](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession endSession](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession finishSession](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession finishWatchEvent](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession endWatchSession](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession maybeIncrementPageView](struct FlurrySession *self, SEL);
id __cdecl -[FlurrySession dataForSending:](struct FlurrySession *self, SEL, id);
void __cdecl -[FlurrySession resetEventLogs](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession encodeWithCoder:](struct FlurrySession *self, SEL, id);
id __cdecl -[FlurrySession initWithCoder:](struct FlurrySession *self, SEL, id);
void __cdecl -[FlurrySession setLatitude:longitude:horizontalAccuracy:verticalAccuracy:](struct FlurrySession *self, SEL, double, double, float, float);
id __cdecl -[FlurrySession userID](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession setUserID:](struct FlurrySession *self, SEL, id);
void __cdecl -[FlurrySession setGenderAsString:](struct FlurrySession *self, SEL, id);
void __cdecl -[FlurrySession setAgeInYears:](struct FlurrySession *self, SEL, int);
id __cdecl -[FlurrySession age](struct FlurrySession *self, SEL);
id __cdecl +[FlurrySession logEventPreCache](struct FlurrySession_meta *self, SEL);
void __fastcall sub_A8C9C(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[FlurrySession setEventLoggingEnabled:](struct FlurrySession *self, SEL, char);
int __cdecl -[FlurrySession recordEvent:withParameters:](struct FlurrySession *self, SEL, id, id);
int __cdecl -[FlurrySession recordWatchEvent:withParameters:](struct FlurrySession *self, SEL, id, id);
int __cdecl -[FlurrySession totalEventCount](struct FlurrySession *self, SEL);
char __cdecl -[FlurrySession hasWatchSessionExpired](struct FlurrySession *self, SEL);
int __cdecl -[FlurrySession recordEvent:withParameters:timed:](struct FlurrySession *self, SEL, id, id, char);
void __cdecl -[FlurrySession endTimedEvent:withParameters:](struct FlurrySession *self, SEL, id, id);
void __cdecl -[FlurrySession endTimedEvents](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession recordError:message:exception:liveReport:](struct FlurrySession *self, SEL, id, id, id, id);
void __cdecl -[FlurrySession recordError:message:error:liveReport:](struct FlurrySession *self, SEL, id, id, id, id);
void __cdecl -[FlurrySession recordWatchError:message:exception:liveReport:](struct FlurrySession *self, SEL, id, id, id, id);
void __cdecl -[FlurrySession recordWatchError:message:error:liveReport:](struct FlurrySession *self, SEL, id, id, id, id);
void __cdecl -[FlurrySession recordError:message:exceptionString:errorType:liveReport:](struct FlurrySession *self, SEL, id, id, id, int, id);
void __cdecl -[FlurrySession recordPurchaseItem:](struct FlurrySession *self, SEL, id);
int __cdecl -[FlurrySession putEventIntoLog:](struct FlurrySession *self, SEL, id);
void __cdecl -[FlurrySession mergePendingEventLog](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession mergeValidPendingEventLog](struct FlurrySession *self, SEL);
id __cdecl +[FlurrySession savedSessions](struct FlurrySession_meta *self, SEL);
void __cdecl -[FlurrySession saveToDisk](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession saveWatchSessionToDisk](struct FlurrySession *self, SEL);
void __fastcall sub_AA66C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, unsigned int a13, int a14, int a15);
void __cdecl -[FlurrySession clearWatchSessionOnDisk](struct FlurrySession *self, SEL);
void __cdecl +[FlurrySession setSavedSessions:](struct FlurrySession *self, SEL, id);
void __cdecl +[FlurrySession addToSavedSessions:](struct FlurrySession *self, SEL, id);
void __fastcall sub_AABA6(int a1, int a2, int a3, int a4, int a5, const char *a6, int a7, int a8, int a9, int a10, int a11, int a12, unsigned int a13, int a14, int a15);
id __cdecl +[FlurrySession removeOldSessionsIfNecessary:](struct FlurrySession *self, SEL, id);
void __cdecl +[FlurrySession setMaxSessions:](struct FlurrySession *self, SEL, int);
id __cdecl +[FlurrySession sessionsFilePath](struct FlurrySession_meta *self, SEL);
void __cdecl +[FlurrySession removeCurrentSessionFile](struct FlurrySession_meta *self, SEL);
id __cdecl +[FlurrySession currentSessionFilePath](struct FlurrySession_meta *self, SEL);
id __cdecl +[FlurrySession currentWatchSessionFilePath](struct FlurrySession_meta *self, SEL);
id __cdecl +[FlurrySession currentWatchAutoIncrementFilePath](struct FlurrySession_meta *self, SEL);
id __cdecl +[FlurrySession oldInitialTimestampFilePathUptilAgentVersion109](struct FlurrySession_meta *self, SEL);
id __cdecl +[FlurrySession initialTimestampFilePath](struct FlurrySession_meta *self, SEL);
void __cdecl -[FlurrySession sendSessionsToServerForCreateSession](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession sendSessionsToServerIncludingCurrentSession:](struct FlurrySession *self, SEL, char);
int __cdecl -[FlurrySession updateIfTrackedAndChangedPropertyValue:forPropertyKey:](struct FlurrySession *self, SEL, id, id);
id __cdecl -[FlurrySession data](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession getSessionParametersAtPhase:](struct FlurrySession *self, SEL, int);
id __cdecl -[FlurrySession dataForSessions:](struct FlurrySession *self, SEL, id);
char __cdecl -[FlurrySession isPaused](struct FlurrySession *self, SEL);
id __cdecl -[FlurrySession initialTimestamp](struct FlurrySession *self, SEL);
char __cdecl -[FlurrySession sentReportSuccessful](struct FlurrySession *self, SEL);
int64_t __cdecl -[FlurrySession timeIntervalSinceSessionStart:](struct FlurrySession *self, SEL, id);
int64_t __cdecl -[FlurrySession sessionLength](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession dealloc](struct FlurrySession *self, SEL);
void __fastcall sub_AF23A(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, unsigned int a13, int a14);
char __cdecl -[FlurrySession crashed](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession setCrashed:](struct FlurrySession *self, SEL, char);
id __cdecl -[FlurrySession crashReportData](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession setCrashReportData:](struct FlurrySession *self, SEL, id);
id __cdecl -[FlurrySession startTime](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession setStartTime:](struct FlurrySession *self, SEL, id);
id __cdecl -[FlurrySession apiKey](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession setApiKey:](struct FlurrySession *self, SEL, id);
id __cdecl -[FlurrySession sessionParams](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession setSessionParams:](struct FlurrySession *self, SEL, id);
id __cdecl -[FlurrySession sessionPropertyParams](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession setSessionPropertyParams:](struct FlurrySession *self, SEL, id);
double __cdecl -[FlurrySession latitude](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession setLatitude:](struct FlurrySession *self, SEL, double);
double __cdecl -[FlurrySession longitude](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession setLongitude:](struct FlurrySession *self, SEL, double);
float __cdecl -[FlurrySession accuracy](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession setAccuracy:](struct FlurrySession *self, SEL, float);
id __cdecl -[FlurrySession appVersion](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession setAppVersion:](struct FlurrySession *self, SEL, id);
int __cdecl -[FlurrySession pageViewCount](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession setPageViewCount:](struct FlurrySession *self, SEL, int);
id __cdecl -[FlurrySession endTime](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession setEndTime:](struct FlurrySession *self, SEL, id);
id __cdecl -[FlurrySession purchaseItems](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession setPurchaseItems:](struct FlurrySession *self, SEL, id);
id __cdecl -[FlurrySession resumeTime](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession setResumeTime:](struct FlurrySession *self, SEL, id);
id __cdecl -[FlurrySession pauseTime](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession setPauseTime:](struct FlurrySession *self, SEL, id);
int64_t __cdecl -[FlurrySession totalPauseIntervalMillis](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession setTotalPauseIntervalMillis:](struct FlurrySession *self, SEL, int64_t);
id __cdecl -[FlurrySession eventCounts](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession setEventCounts:](struct FlurrySession *self, SEL, id);
id __cdecl -[FlurrySession pendingEventLog](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession setPendingEventLog:](struct FlurrySession *self, SEL, id);
id __cdecl -[FlurrySession eventLog](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession setEventLog:](struct FlurrySession *self, SEL, id);
char __cdecl -[FlurrySession eventLogComplete](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession setEventLogComplete:](struct FlurrySession *self, SEL, char);
id __cdecl -[FlurrySession errors](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession setErrors:](struct FlurrySession *self, SEL, id);
int __cdecl -[FlurrySession totalErrorCount](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession setTotalErrorCount:](struct FlurrySession *self, SEL, int);
id __cdecl -[FlurrySession locale](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession setLocale:](struct FlurrySession *self, SEL, id);
id __cdecl -[FlurrySession timeZone](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession setTimeZone:](struct FlurrySession *self, SEL, id);
int __cdecl -[FlurrySession gender](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession setGender:](struct FlurrySession *self, SEL, int);
int __cdecl -[FlurrySession serializationVersion](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession setSerializationVersion:](struct FlurrySession *self, SEL, int);
char __cdecl -[FlurrySession eventLoggingEnabled](struct FlurrySession *self, SEL);
char __cdecl -[FlurrySession setBackgroundSessionEnabled](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession setSetBackgroundSessionEnabled:](struct FlurrySession *self, SEL, char);
int __cdecl -[FlurrySession appApplicationState](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession setAppApplicationState:](struct FlurrySession *self, SEL, int);
char __cdecl -[FlurrySession hasSessionOriginName](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession setHasSessionOriginName:](struct FlurrySession *self, SEL, char);
char __cdecl -[FlurrySession hasDeepLinkName](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession setHasDeepLinkName:](struct FlurrySession *self, SEL, char);
id __cdecl -[FlurrySession sessionOriginName](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession setSessionOriginName:](struct FlurrySession *self, SEL, id);
id __cdecl -[FlurrySession deepLinkName](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession setDeepLinkName:](struct FlurrySession *self, SEL, id);
id __cdecl -[FlurrySession watchAppVersion](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession setWatchAppVersion:](struct FlurrySession *self, SEL, id);
int __cdecl -[FlurrySession watchEventThreshold](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession setWatchEventThreshold:](struct FlurrySession *self, SEL, int);
int __cdecl -[FlurrySession watchDurationThreshold](struct FlurrySession *self, SEL);
void __cdecl -[FlurrySession setWatchDurationThreshold:](struct FlurrySession *self, SEL, int);
void __cdecl -[FlurrySession setAge:](struct FlurrySession *self, SEL, id);
void __cdecl -[FlurrySession .cxx_destruct](struct FlurrySession *self, SEL);
id __cdecl +[FlurryFileCache createInstanceWithApiKey:agentVersion:](struct FlurryFileCache *self, SEL, id, id);
void __fastcall sub_AFBF2(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, unsigned int a9, int a10);
id __cdecl +[FlurryFileCache instance](struct FlurryFileCache_meta *self, SEL);
void __cdecl +[FlurryFileCache cleanup](struct FlurryFileCache_meta *self, SEL);
id __cdecl -[FlurryFileCache initWithApiKey:agentVersion:](struct FlurryFileCache *self, SEL, id, id);
id __cdecl -[FlurryFileCache createFilePath:forCurentAgentVersion:](struct FlurryFileCache *self, SEL, id, bool);
id __cdecl -[FlurryFileCache save:prefix:](struct FlurryFileCache *self, SEL, id, id);
id __cdecl -[FlurryFileCache save:prefix:forCurentAgentVersion:](struct FlurryFileCache *self, SEL, id, id, bool);
id __cdecl -[FlurryFileCache get:](struct FlurryFileCache *self, SEL, id);
id __cdecl -[FlurryFileCache get:forCurentAgentVersion:](struct FlurryFileCache *self, SEL, id, bool);
char __cdecl -[FlurryFileCache remove:](struct FlurryFileCache *self, SEL, id);
char __cdecl -[FlurryFileCache remove:forCurentAgentVersion:](struct FlurryFileCache *self, SEL, id, bool);
id __cdecl -[FlurryFileCache apiKey](struct FlurryFileCache *self, SEL);
void __cdecl -[FlurryFileCache setApiKey:](struct FlurryFileCache *self, SEL, id);
id __cdecl -[FlurryFileCache agentVersion](struct FlurryFileCache *self, SEL);
void __cdecl -[FlurryFileCache setAgentVersion:](struct FlurryFileCache *self, SEL, id);
void __cdecl -[FlurryFileCache .cxx_destruct](struct FlurryFileCache *self, SEL);
id __cdecl +[FlurryGlobalVariableStorage sharedInstance](struct FlurryGlobalVariableStorage_meta *self, SEL);
void __fastcall sub_B00CC(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[FlurryGlobalVariableStorage init](struct FlurryGlobalVariableStorage *self, SEL);
void __cdecl -[FlurryGlobalVariableStorage resetLaunchOptions](struct FlurryGlobalVariableStorage *self, SEL);
void __cdecl +[FlurryGlobalVariableStorage cleanup](struct FlurryGlobalVariableStorage_meta *self, SEL);
void __cdecl -[FlurryGlobalVariableStorage setApiKey:](struct FlurryGlobalVariableStorage *self, SEL, id);
void __cdecl -[FlurryGlobalVariableStorage setMaxBitRateKbps:](struct FlurryGlobalVariableStorage *self, SEL, int);
void __cdecl -[FlurryGlobalVariableStorage setAppInstallProcessDone:](struct FlurryGlobalVariableStorage *self, SEL, char);
char __cdecl -[FlurryGlobalVariableStorage appInstallProcessDone](struct FlurryGlobalVariableStorage *self, SEL);
int __cdecl -[FlurryGlobalVariableStorage maxBitRateKbps](struct FlurryGlobalVariableStorage *self, SEL);
void __cdecl -[FlurryGlobalVariableStorage initPersistentMap](struct FlurryGlobalVariableStorage *self, SEL);
void __cdecl -[FlurryGlobalVariableStorage savePersistentGlobalsToDisk](struct FlurryGlobalVariableStorage *self, SEL);
void __fastcall sub_B0CB4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, unsigned int a13, int a14);
void __cdecl -[FlurryGlobalVariableStorage recordSessionProperties:](struct FlurryGlobalVariableStorage *self, SEL, id);
void __cdecl -[FlurryGlobalVariableStorage recordOrigin:originVersion:withParameters:](struct FlurryGlobalVariableStorage *self, SEL, id, id, id);
void __cdecl -[FlurryGlobalVariableStorage removePendingUrlTimers](struct FlurryGlobalVariableStorage *self, SEL);
void __fastcall sub_B15FC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, unsigned int a13, int a14);
id __cdecl -[FlurryGlobalVariableStorage persistentGlobalsFilePath](struct FlurryGlobalVariableStorage *self, SEL);
id __cdecl -[FlurryGlobalVariableStorage persistentCookiesFilePath](struct FlurryGlobalVariableStorage *self, SEL);
id __cdecl -[FlurryGlobalVariableStorage persistentUrlsFilePath](struct FlurryGlobalVariableStorage *self, SEL);
id __cdecl -[FlurryGlobalVariableStorage persistentPulseUrlsFilePath](struct FlurryGlobalVariableStorage *self, SEL);
id __cdecl -[FlurryGlobalVariableStorage persistentPulsePrepUrlsFilePath](struct FlurryGlobalVariableStorage *self, SEL);
id __cdecl -[FlurryGlobalVariableStorage getPersistentFilePath:](struct FlurryGlobalVariableStorage *self, SEL, id);
void __fastcall sub_B19DA(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, unsigned int a17, int a18, int a19);
id __cdecl -[FlurryGlobalVariableStorage persistentGlobalsMap](struct FlurryGlobalVariableStorage *self, SEL);
id __cdecl -[FlurryGlobalVariableStorage persistentCookiesMap](struct FlurryGlobalVariableStorage *self, SEL);
id __cdecl -[FlurryGlobalVariableStorage persistentUrlsMap](struct FlurryGlobalVariableStorage *self, SEL);
char __cdecl -[FlurryGlobalVariableStorage analyticsEnabled](struct FlurryGlobalVariableStorage *self, SEL);
int __cdecl -[FlurryGlobalVariableStorage logLevel](struct FlurryGlobalVariableStorage *self, SEL);
char __cdecl -[FlurryGlobalVariableStorage lastAdTrackingEnabledSetting](struct FlurryGlobalVariableStorage *self, SEL);
void __cdecl -[FlurryGlobalVariableStorage setLastAdTrackingEnabledSetting:](struct FlurryGlobalVariableStorage *self, SEL, char);
char __cdecl -[FlurryGlobalVariableStorage isMoPubIntegration](struct FlurryGlobalVariableStorage *self, SEL);
id __cdecl -[FlurryGlobalVariableStorage savedResponseUrl](struct FlurryGlobalVariableStorage *self, SEL);
void __cdecl -[FlurryGlobalVariableStorage setSavedResponseUrl:](struct FlurryGlobalVariableStorage *self, SEL, id);
id __cdecl -[FlurryGlobalVariableStorage apiKey](struct FlurryGlobalVariableStorage *self, SEL);
char __cdecl -[FlurryGlobalVariableStorage udidEnabled](struct FlurryGlobalVariableStorage *self, SEL);
void __cdecl -[FlurryGlobalVariableStorage setUdidEnabled:](struct FlurryGlobalVariableStorage *self, SEL, char);
int __cdecl -[FlurryGlobalVariableStorage pauseSecondsBeforeStartingNewSession](struct FlurryGlobalVariableStorage *self, SEL);
void __cdecl -[FlurryGlobalVariableStorage setPauseSecondsBeforeStartingNewSession:](struct FlurryGlobalVariableStorage *self, SEL, int);
id __cdecl -[FlurryGlobalVariableStorage pauseTime](struct FlurryGlobalVariableStorage *self, SEL);
void __cdecl -[FlurryGlobalVariableStorage setPauseTime:](struct FlurryGlobalVariableStorage *self, SEL, id);
id __cdecl -[FlurryGlobalVariableStorage lastPageViewDate](struct FlurryGlobalVariableStorage *self, SEL);
void __cdecl -[FlurryGlobalVariableStorage setLastPageViewDate:](struct FlurryGlobalVariableStorage *self, SEL, id);
char __cdecl -[FlurryGlobalVariableStorage sessionReportsOnCloseEnabled](struct FlurryGlobalVariableStorage *self, SEL);
void __cdecl -[FlurryGlobalVariableStorage setSessionReportsOnCloseEnabled:](struct FlurryGlobalVariableStorage *self, SEL, char);
char __cdecl -[FlurryGlobalVariableStorage sessionReportsOnPauseEnabled](struct FlurryGlobalVariableStorage *self, SEL);
void __cdecl -[FlurryGlobalVariableStorage setSessionReportsOnPauseEnabled:](struct FlurryGlobalVariableStorage *self, SEL, char);
char __cdecl -[FlurryGlobalVariableStorage backgroundSessionEnabled](struct FlurryGlobalVariableStorage *self, SEL);
void __cdecl -[FlurryGlobalVariableStorage setBackgroundSessionEnabled:](struct FlurryGlobalVariableStorage *self, SEL, char);
int __cdecl -[FlurryGlobalVariableStorage appApplicationState](struct FlurryGlobalVariableStorage *self, SEL);
void __cdecl -[FlurryGlobalVariableStorage setAppApplicationState:](struct FlurryGlobalVariableStorage *self, SEL, int);
char __cdecl -[FlurryGlobalVariableStorage crashReportingEnabled](struct FlurryGlobalVariableStorage *self, SEL);
void __cdecl -[FlurryGlobalVariableStorage setCrashReportingEnabled:](struct FlurryGlobalVariableStorage *self, SEL, char);
id __cdecl -[FlurryGlobalVariableStorage appVersion](struct FlurryGlobalVariableStorage *self, SEL);
void __cdecl -[FlurryGlobalVariableStorage setAppVersion:](struct FlurryGlobalVariableStorage *self, SEL, id);
char __cdecl -[FlurryGlobalVariableStorage eventLoggingEnabled](struct FlurryGlobalVariableStorage *self, SEL);
void __cdecl -[FlurryGlobalVariableStorage setEventLoggingEnabled:](struct FlurryGlobalVariableStorage *self, SEL, char);
id __cdecl -[FlurryGlobalVariableStorage userID](struct FlurryGlobalVariableStorage *self, SEL);
void __cdecl -[FlurryGlobalVariableStorage setUserID:](struct FlurryGlobalVariableStorage *self, SEL, id);
int __cdecl -[FlurryGlobalVariableStorage age](struct FlurryGlobalVariableStorage *self, SEL);
void __cdecl -[FlurryGlobalVariableStorage setAge:](struct FlurryGlobalVariableStorage *self, SEL, int);
id __cdecl -[FlurryGlobalVariableStorage gender](struct FlurryGlobalVariableStorage *self, SEL);
void __cdecl -[FlurryGlobalVariableStorage setGender:](struct FlurryGlobalVariableStorage *self, SEL, id);
char __cdecl -[FlurryGlobalVariableStorage hasSessionOriginName](struct FlurryGlobalVariableStorage *self, SEL);
void __cdecl -[FlurryGlobalVariableStorage setHasSessionOriginName:](struct FlurryGlobalVariableStorage *self, SEL, char);
char __cdecl -[FlurryGlobalVariableStorage hasDeepLinkName](struct FlurryGlobalVariableStorage *self, SEL);
void __cdecl -[FlurryGlobalVariableStorage setHasDeepLinkName:](struct FlurryGlobalVariableStorage *self, SEL, char);
id __cdecl -[FlurryGlobalVariableStorage sessionOriginName](struct FlurryGlobalVariableStorage *self, SEL);
void __cdecl -[FlurryGlobalVariableStorage setSessionOriginName:](struct FlurryGlobalVariableStorage *self, SEL, id);
id __cdecl -[FlurryGlobalVariableStorage deepLinkName](struct FlurryGlobalVariableStorage *self, SEL);
void __cdecl -[FlurryGlobalVariableStorage setDeepLinkName:](struct FlurryGlobalVariableStorage *self, SEL, id);
id __cdecl -[FlurryGlobalVariableStorage sessionParameters](struct FlurryGlobalVariableStorage *self, SEL);
void __cdecl -[FlurryGlobalVariableStorage setSessionParameters:](struct FlurryGlobalVariableStorage *self, SEL, id);
char __cdecl -[FlurryGlobalVariableStorage startSessionCalled](struct FlurryGlobalVariableStorage *self, SEL);
void __cdecl -[FlurryGlobalVariableStorage setStartSessionCalled:](struct FlurryGlobalVariableStorage *self, SEL, char);
id __cdecl -[FlurryGlobalVariableStorage launchOptions](struct FlurryGlobalVariableStorage *self, SEL);
id __cdecl -[FlurryGlobalVariableStorage location](struct FlurryGlobalVariableStorage *self, SEL);
void __cdecl -[FlurryGlobalVariableStorage setLocation:](struct FlurryGlobalVariableStorage *self, SEL, id);
char __cdecl -[FlurryGlobalVariableStorage macAddressEnabled](struct FlurryGlobalVariableStorage *self, SEL);
void __cdecl -[FlurryGlobalVariableStorage setMacAddressEnabled:](struct FlurryGlobalVariableStorage *self, SEL, char);
id __cdecl -[FlurryGlobalVariableStorage flurryCrashReporter](struct FlurryGlobalVariableStorage *self, SEL);
void __cdecl -[FlurryGlobalVariableStorage setFlurryCrashReporter:](struct FlurryGlobalVariableStorage *self, SEL, id);
char __cdecl -[FlurryGlobalVariableStorage optOutSessionPending](struct FlurryGlobalVariableStorage *self, SEL);
void __cdecl -[FlurryGlobalVariableStorage setOptOutSessionPending:](struct FlurryGlobalVariableStorage *self, SEL, char);
id __cdecl -[FlurryGlobalVariableStorage originSets](struct FlurryGlobalVariableStorage *self, SEL);
void __cdecl -[FlurryGlobalVariableStorage setOriginSets:](struct FlurryGlobalVariableStorage *self, SEL, id);
id __cdecl -[FlurryGlobalVariableStorage pendingUrlTimers](struct FlurryGlobalVariableStorage *self, SEL);
void __cdecl -[FlurryGlobalVariableStorage setPendingUrlTimers:](struct FlurryGlobalVariableStorage *self, SEL, id);
char __cdecl -[FlurryGlobalVariableStorage pulseMonitoringEnabled](struct FlurryGlobalVariableStorage *self, SEL);
void __cdecl -[FlurryGlobalVariableStorage setPulseMonitoringEnabled:](struct FlurryGlobalVariableStorage *self, SEL, char);
id __cdecl -[FlurryGlobalVariableStorage persistentPulseUrlsMap](struct FlurryGlobalVariableStorage *self, SEL);
id __cdecl -[FlurryGlobalVariableStorage persistentPulsePrepUrlsMap](struct FlurryGlobalVariableStorage *self, SEL);
char __cdecl -[FlurryGlobalVariableStorage pulseRequestPending](struct FlurryGlobalVariableStorage *self, SEL);
void __cdecl -[FlurryGlobalVariableStorage setPulseRequestPending:](struct FlurryGlobalVariableStorage *self, SEL, char);
id __cdecl -[FlurryGlobalVariableStorage lastPulseReportTime](struct FlurryGlobalVariableStorage *self, SEL);
void __cdecl -[FlurryGlobalVariableStorage setLastPulseReportTime:](struct FlurryGlobalVariableStorage *self, SEL, id);
int32_t __cdecl -[FlurryGlobalVariableStorage adsFetchCount](struct FlurryGlobalVariableStorage *self, SEL);
void __cdecl -[FlurryGlobalVariableStorage setAdsFetchCount:](struct FlurryGlobalVariableStorage *self, SEL, int32_t);
int32_t __cdecl -[FlurryGlobalVariableStorage adRequestsCount](struct FlurryGlobalVariableStorage *self, SEL);
void __cdecl -[FlurryGlobalVariableStorage setAdRequestsCount:](struct FlurryGlobalVariableStorage *self, SEL, int32_t);
int32_t __cdecl -[FlurryGlobalVariableStorage adsReturnedCount](struct FlurryGlobalVariableStorage *self, SEL);
void __cdecl -[FlurryGlobalVariableStorage setAdsReturnedCount:](struct FlurryGlobalVariableStorage *self, SEL, int32_t);
int32_t __cdecl -[FlurryGlobalVariableStorage adsReadyCount](struct FlurryGlobalVariableStorage *self, SEL);
void __cdecl -[FlurryGlobalVariableStorage setAdsReadyCount:](struct FlurryGlobalVariableStorage *self, SEL, int32_t);
int32_t __cdecl -[FlurryGlobalVariableStorage adsImpressionFiredCount](struct FlurryGlobalVariableStorage *self, SEL);
void __cdecl -[FlurryGlobalVariableStorage setAdsImpressionFiredCount:](struct FlurryGlobalVariableStorage *self, SEL, int32_t);
void __cdecl -[FlurryGlobalVariableStorage .cxx_destruct](struct FlurryGlobalVariableStorage *self, SEL);
id __cdecl +[FlurryPulseCallback pulseMethodsArrayInstance](struct FlurryPulseCallback_meta *self, SEL);
id __cdecl +[FlurryPulseCallback pulseMethodEnumToString:](struct FlurryPulseCallback *self, SEL, int);
int __cdecl +[FlurryPulseCallback pulseMethodStringToEnum:](struct FlurryPulseCallback *self, SEL, id);
id __cdecl -[FlurryPulseCallback initWithCoder:](struct FlurryPulseCallback *self, SEL, id);
id __cdecl -[FlurryPulseCallback initWithDictionary:](struct FlurryPulseCallback *self, SEL, id);
void __cdecl -[FlurryPulseCallback encodeWithCoder:](struct FlurryPulseCallback *self, SEL, id);
id __cdecl -[FlurryPulseCallback dataDictionary](struct FlurryPulseCallback *self, SEL);
id __cdecl -[FlurryPulseCallback partner](struct FlurryPulseCallback *self, SEL);
void __cdecl -[FlurryPulseCallback setPartner:](struct FlurryPulseCallback *self, SEL, id);
int __cdecl -[FlurryPulseCallback method](struct FlurryPulseCallback *self, SEL);
void __cdecl -[FlurryPulseCallback setMethod:](struct FlurryPulseCallback *self, SEL, int);
id __cdecl -[FlurryPulseCallback uriTemplate](struct FlurryPulseCallback *self, SEL);
void __cdecl -[FlurryPulseCallback setUriTemplate:](struct FlurryPulseCallback *self, SEL, id);
id __cdecl -[FlurryPulseCallback bodyTemplate](struct FlurryPulseCallback *self, SEL);
void __cdecl -[FlurryPulseCallback setBodyTemplate:](struct FlurryPulseCallback *self, SEL, id);
int __cdecl -[FlurryPulseCallback maxRedirects](struct FlurryPulseCallback *self, SEL);
void __cdecl -[FlurryPulseCallback setMaxRedirects:](struct FlurryPulseCallback *self, SEL, int);
int __cdecl -[FlurryPulseCallback connectTimeout](struct FlurryPulseCallback *self, SEL);
void __cdecl -[FlurryPulseCallback setConnectTimeout:](struct FlurryPulseCallback *self, SEL, int);
int __cdecl -[FlurryPulseCallback requestTimeout](struct FlurryPulseCallback *self, SEL);
void __cdecl -[FlurryPulseCallback setRequestTimeout:](struct FlurryPulseCallback *self, SEL, int);
int64_t __cdecl -[FlurryPulseCallback callbackId](struct FlurryPulseCallback *self, SEL);
void __cdecl -[FlurryPulseCallback setCallbackId:](struct FlurryPulseCallback *self, SEL, int64_t);
id __cdecl -[FlurryPulseCallback headers](struct FlurryPulseCallback *self, SEL);
void __cdecl -[FlurryPulseCallback setHeaders:](struct FlurryPulseCallback *self, SEL, id);
void __cdecl -[FlurryPulseCallback .cxx_destruct](struct FlurryPulseCallback *self, SEL);
id __cdecl -[FlurryPreCacheEvent initWithEventName:params:timed:](struct FlurryPreCacheEvent *self, SEL, id, id, char);
id __cdecl -[FlurryPreCacheEvent eventName](struct FlurryPreCacheEvent *self, SEL);
void __cdecl -[FlurryPreCacheEvent setEventName:](struct FlurryPreCacheEvent *self, SEL, id);
id __cdecl -[FlurryPreCacheEvent params](struct FlurryPreCacheEvent *self, SEL);
void __cdecl -[FlurryPreCacheEvent setParams:](struct FlurryPreCacheEvent *self, SEL, id);
char __cdecl -[FlurryPreCacheEvent timed](struct FlurryPreCacheEvent *self, SEL);
void __cdecl -[FlurryPreCacheEvent setTimed:](struct FlurryPreCacheEvent *self, SEL, char);
void __cdecl -[FlurryPreCacheEvent .cxx_destruct](struct FlurryPreCacheEvent *self, SEL);
id __cdecl -[FlurryPulseCallbackReportInfo initWithCoder:](struct FlurryPulseCallbackReportInfo *self, SEL, id);
void __cdecl -[FlurryPulseCallbackReportInfo encodeWithCoder:](struct FlurryPulseCallbackReportInfo *self, SEL, id);
id __cdecl -[FlurryPulseCallbackReportInfo data](struct FlurryPulseCallbackReportInfo *self, SEL);
void __fastcall sub_B3846(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, int a25, int a26, int a27, int a28, int a29, int a30, int a31, unsigned int a32, int a33);
id __cdecl -[FlurryPulseCallbackReportInfo copyWithZone:](struct FlurryPulseCallbackReportInfo *self, SEL, struct _NSZone *);
char __cdecl -[FlurryPulseCallbackReportInfo finalAttemptMade](struct FlurryPulseCallbackReportInfo *self, SEL);
void __cdecl -[FlurryPulseCallbackReportInfo setAttemptsSent](struct FlurryPulseCallbackReportInfo *self, SEL);
unsigned int __cdecl -[FlurryPulseCallbackReportInfo removeSentAttempts](struct FlurryPulseCallbackReportInfo *self, SEL);
void __fastcall sub_B3DD0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, unsigned int a17, int a18);
id __cdecl -[FlurryPulseCallbackReportInfo invokeId](struct FlurryPulseCallbackReportInfo *self, SEL);
void __cdecl -[FlurryPulseCallbackReportInfo setInvokeId:](struct FlurryPulseCallbackReportInfo *self, SEL, id);
id __cdecl -[FlurryPulseCallbackReportInfo callbackId](struct FlurryPulseCallbackReportInfo *self, SEL);
void __cdecl -[FlurryPulseCallbackReportInfo setCallbackId:](struct FlurryPulseCallbackReportInfo *self, SEL, id);
id __cdecl -[FlurryPulseCallbackReportInfo substitutedUrl](struct FlurryPulseCallbackReportInfo *self, SEL);
void __cdecl -[FlurryPulseCallbackReportInfo setSubstitutedUrl:](struct FlurryPulseCallbackReportInfo *self, SEL, id);
id __cdecl -[FlurryPulseCallbackReportInfo attempts](struct FlurryPulseCallbackReportInfo *self, SEL);
void __cdecl -[FlurryPulseCallbackReportInfo setAttempts:](struct FlurryPulseCallbackReportInfo *self, SEL, id);
void __cdecl -[FlurryPulseCallbackReportInfo .cxx_destruct](struct FlurryPulseCallbackReportInfo *self, SEL);
id __cdecl -[FlurryEvent initWithName:](struct FlurryEvent *self, SEL, id);
id __cdecl -[FlurryEvent initWithName:timed:](struct FlurryEvent *self, SEL, id, char);
id __cdecl -[FlurryEvent initWithName:timed:parameters:](struct FlurryEvent *self, SEL, id, char, id);
id __cdecl -[FlurryEvent initWithCoder:](struct FlurryEvent *self, SEL, id);
void __cdecl -[FlurryEvent updateID](struct FlurryEvent *self, SEL);
void __cdecl -[FlurryEvent updateParameters:](struct FlurryEvent *self, SEL, id);
void __fastcall sub_B46DE(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, int a25, int a26, int a27, int a28, int a29, int a30, int a31, unsigned int a32, int a33);
void __cdecl -[FlurryEvent encodeWithCoder:](struct FlurryEvent *self, SEL, id);
char __cdecl -[FlurryEvent isUnterminated](struct FlurryEvent *self, SEL);
int32_t __cdecl -[FlurryEvent startOffsetFromSessionStart:](struct FlurryEvent *self, SEL, id);
int32_t __cdecl -[FlurryEvent duration](struct FlurryEvent *self, SEL);
id __cdecl -[FlurryEvent dataRelativeToSessionStart:](struct FlurryEvent *self, SEL, id);
id __cdecl -[FlurryEvent name](struct FlurryEvent *self, SEL);
void __cdecl -[FlurryEvent setName:](struct FlurryEvent *self, SEL, id);
id __cdecl -[FlurryEvent started](struct FlurryEvent *self, SEL);
void __cdecl -[FlurryEvent setStarted:](struct FlurryEvent *self, SEL, id);
id __cdecl -[FlurryEvent ended](struct FlurryEvent *self, SEL);
void __cdecl -[FlurryEvent setEnded:](struct FlurryEvent *self, SEL, id);
char __cdecl -[FlurryEvent timed](struct FlurryEvent *self, SEL);
void __cdecl -[FlurryEvent setTimed:](struct FlurryEvent *self, SEL, char);
id __cdecl -[FlurryEvent parameters](struct FlurryEvent *self, SEL);
void __cdecl -[FlurryEvent setParameters:](struct FlurryEvent *self, SEL, id);
char __cdecl -[FlurryEvent automaticallyEnded](struct FlurryEvent *self, SEL);
void __cdecl -[FlurryEvent setAutomaticallyEnded:](struct FlurryEvent *self, SEL, char);
id __cdecl -[FlurryEvent eventLogId](struct FlurryEvent *self, SEL);
void __cdecl -[FlurryEvent setEventLogId:](struct FlurryEvent *self, SEL, id);
void __cdecl -[FlurryEvent .cxx_destruct](struct FlurryEvent *self, SEL);
id __cdecl +[FlurryImpl instance](struct FlurryImpl_meta *self, SEL);
void __fastcall sub_B4E5E(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, unsigned int a9);
id __cdecl -[FlurryImpl init](struct FlurryImpl *self, SEL);
void *__fastcall sub_B5048(int a1);
int __fastcall sub_B5078(int a1, int a2);
void __fastcall sub_B5080(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void *__fastcall sub_B5088(int a1);
int __fastcall sub_B50B8(int a1, int a2);
void __fastcall sub_B50C0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl +[FlurryImpl cleanup](struct FlurryImpl_meta *self, SEL);
int __fastcall sub_B5208(int a1);
void __cdecl -[FlurryImpl dealloc](struct FlurryImpl *self, SEL);
void __cdecl -[FlurryImpl setupForApiKey:](struct FlurryImpl *self, SEL, id);
void __fastcall sub_B52E8(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_B5484(int a1, int a2);
void __fastcall sub_B549C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[FlurryImpl setLatitude:longitude:horizontalAccuracy:verticalAccuracy:](struct FlurryImpl *self, SEL, double, double, float, float);
void __fastcall sub_B5558(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_B55B8(int a1, int a2);
void __fastcall sub_B55C0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[FlurryImpl setEventLoggingEnabled:](struct FlurryImpl *self, SEL, char);
void __fastcall sub_B5634(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_B5674(int a1, int a2);
void __fastcall sub_B567C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[FlurryImpl setUserID:](struct FlurryImpl *self, SEL, id);
void __fastcall sub_B5708(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_B5748(int a1, int a2);
void __fastcall sub_B5760(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[FlurryImpl setSessionReportsOnCloseEnabled:](struct FlurryImpl *self, SEL, char);
void __fastcall sub_B57E4(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_B5824(int a1, int a2);
void __fastcall sub_B582C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[FlurryImpl setSessionReportsOnPauseEnabled:](struct FlurryImpl *self, SEL, char);
void __fastcall sub_B58A0(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_B58E0(int a1, int a2);
void __fastcall sub_B58E8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[FlurryImpl setCrashReportingEnabled:](struct FlurryImpl *self, SEL, char);
void __fastcall sub_B595C(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_B599C(int a1, int a2);
void __fastcall sub_B59A4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[FlurryImpl maybeIncrementPageView](struct FlurryImpl *self, SEL);
void __fastcall sub_B5A14(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_B5A50(int a1, int a2);
void __fastcall sub_B5A58(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[FlurryImpl setGenderAsString:](struct FlurryImpl *self, SEL, id);
void __fastcall sub_B5AE4(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_B5B24(int a1, int a2);
void __fastcall sub_B5B3C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[FlurryImpl setAgeInYears:](struct FlurryImpl *self, SEL, int);
void __fastcall sub_B5BC0(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_B5C00(int a1, int a2);
void __fastcall sub_B5C08(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __cdecl -[FlurryImpl recordEvent:withParameters:](struct FlurryImpl *self, SEL, id, id);
void __fastcall sub_B5ED4(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_B5F14(int a1, int a2);
void __fastcall sub_B5F30(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __cdecl -[FlurryImpl recordEvent:withParameters:timed:](struct FlurryImpl *self, SEL, id, id, char);
void __fastcall sub_B6218(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_B6264(int a1, int a2);
void __fastcall sub_B6280(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[FlurryImpl endTimedEvent:withParameters:](struct FlurryImpl *self, SEL, id, id);
void __fastcall sub_B634C(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_B638C(int a1, int a2);
void __fastcall sub_B63A8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[FlurryImpl recordError:message:exception:liveReport:](struct FlurryImpl *self, SEL, id, id, id, id);
void __fastcall sub_B64B0(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_B6504(int a1, int a2);
void __fastcall sub_B652C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[FlurryImpl recordError:message:error:liveReport:](struct FlurryImpl *self, SEL, id, id, id, id);
void __fastcall sub_B6640(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_B6694(int a1, int a2);
void __fastcall sub_B66BC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[FlurryImpl recordError:message:exceptionString:errorType:liveReport:](struct FlurryImpl *self, SEL, id, id, id, int, id);
void __fastcall sub_B67D4(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_B6824(int a1, int a2);
void __fastcall sub_B684C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[FlurryImpl recordPurchaseItem:](struct FlurryImpl *self, SEL, id);
void __fastcall sub_B68F8(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_B6938(int a1, int a2);
void __fastcall sub_B6950(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[FlurryImpl pauseSession](struct FlurryImpl *self, SEL);
int sub_B6A6C();
void __fastcall sub_B6AA4(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_B6B34(int a1, int a2);
void __fastcall sub_B6B3C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[FlurryImpl markSessionAsResuming](struct FlurryImpl *self, SEL);
void __fastcall sub_B6BAC(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_B6BE8(int a1, int a2);
void __fastcall sub_B6BF0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[FlurryImpl resumeSession](struct FlurryImpl *self, SEL);
void __fastcall sub_B6C60(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_B6C9C(int a1, int a2);
void __fastcall sub_B6CA4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[FlurryImpl endSession](struct FlurryImpl *self, SEL);
void __fastcall sub_B6D14(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_B6D50(int a1, int a2);
void __fastcall sub_B6D58(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[FlurryImpl endSessionAsync](struct FlurryImpl *self, SEL);
void __fastcall sub_B6DC8(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_B6E04(int a1, int a2);
void __fastcall sub_B6E0C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[FlurryImpl sendSessionsToServerForCreateSession](struct FlurryImpl *self, SEL);
void __fastcall sub_B6E7C(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_B6EB8(int a1, int a2);
void __fastcall sub_B6EC0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
double __cdecl -[FlurryImpl latitude](struct FlurryImpl *self, SEL);
void __fastcall sub_B6FBA(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, unsigned int a21);
void __fastcall sub_B6FE8(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_B702C(int a1, int a2);
void __fastcall sub_B7048(int a1, int a2, int a3, int a4, struct objc_object *a5);
double __cdecl -[FlurryImpl longitude](struct FlurryImpl *self, SEL);
void __fastcall sub_B7152(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, unsigned int a21);
void __fastcall sub_B7180(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_B71C4(int a1, int a2);
void __fastcall sub_B71E0(int a1, int a2, int a3, int a4, struct objc_object *a5);
double __cdecl -[FlurryImpl accuracy](struct FlurryImpl *self, SEL);
void __fastcall sub_B72EA(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, unsigned int a21);
void __fastcall sub_B7318(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_B7364(int a1, int a2);
void __fastcall sub_B7380(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __cdecl -[FlurryImpl gender](struct FlurryImpl *self, SEL);
void __fastcall sub_B7484(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, unsigned int a21);
void __fastcall sub_B74B0(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_B74F4(int a1, int a2);
void __fastcall sub_B7510(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[FlurryImpl age](struct FlurryImpl *self, SEL);
void __fastcall sub_B7646(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, unsigned int a21);
int __fastcall sub_B7674(int a1, int a2);
void __fastcall sub_B7680(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_B7688(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_B76D8(int a1, int a2);
void __fastcall sub_B76F4(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __cdecl -[FlurryImpl pageViewCount](struct FlurryImpl *self, SEL);
void __fastcall sub_B77F8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, unsigned int a21);
void __fastcall sub_B7824(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_B7868(int a1, int a2);
void __fastcall sub_B7884(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[FlurryImpl pauseTime](struct FlurryImpl *self, SEL);
void __fastcall sub_B79BA(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, unsigned int a21);
void __fastcall sub_B79E8(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_B7A38(int a1, int a2);
void __fastcall sub_B7A54(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[FlurryImpl startTime](struct FlurryImpl *self, SEL);
void __fastcall sub_B7B8A(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, unsigned int a21);
void __fastcall sub_B7BB8(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_B7C08(int a1, int a2);
void __fastcall sub_B7C24(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[FlurryImpl endTime](struct FlurryImpl *self, SEL);
void __fastcall sub_B7D5A(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, unsigned int a21);
void __fastcall sub_B7D88(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_B7DD8(int a1, int a2);
void __fastcall sub_B7DF4(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[FlurryImpl initialTimestamp](struct FlurryImpl *self, SEL);
void __fastcall sub_B7F2A(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, unsigned int a21);
void __fastcall sub_B7F58(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_B7FA8(int a1, int a2);
void __fastcall sub_B7FC4(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[FlurryImpl setEndTime:](struct FlurryImpl *self, SEL, id);
int64_t __cdecl -[FlurryImpl totalPauseIntervalMillis](struct FlurryImpl *self, SEL);
void __fastcall sub_B811E(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, unsigned int a21);
void __fastcall sub_B814C(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_B8190(int a1, int a2);
void __fastcall sub_B81AC(int a1, int a2, int a3, int a4, struct objc_object *a5);
unsigned int __cdecl +[FlurryImpl registerBackgoundTask](struct FlurryImpl_meta *self, SEL);
void __cdecl +[FlurryImpl unregisterBackgoundTask:](struct FlurryImpl *self, SEL, unsigned int);
id __cdecl -[FlurryImpl session](struct FlurryImpl *self, SEL);
void __cdecl -[FlurryImpl setSession:](struct FlurryImpl *self, SEL, id);
id __cdecl -[FlurryImpl apiKey](struct FlurryImpl *self, SEL);
void __cdecl -[FlurryImpl setApiKey:](struct FlurryImpl *self, SEL, id);
struct dispatch_queue_s *__cdecl -[FlurryImpl queue](struct FlurryImpl *self, SEL);
void __cdecl -[FlurryImpl setQueue:](struct FlurryImpl *self, SEL, struct dispatch_queue_s *);
char __cdecl -[FlurryImpl isBackgroundSupported](struct FlurryImpl *self, SEL);
void __cdecl -[FlurryImpl setIsBackgroundSupported:](struct FlurryImpl *self, SEL, char);
id __cdecl -[FlurryImpl eventCounts](struct FlurryImpl *self, SEL);
void __cdecl -[FlurryImpl setEventCounts:](struct FlurryImpl *self, SEL, id);
id __cdecl -[FlurryImpl eventLog](struct FlurryImpl *self, SEL);
void __cdecl -[FlurryImpl setEventLog:](struct FlurryImpl *self, SEL, id);
void __cdecl -[FlurryImpl .cxx_destruct](struct FlurryImpl *self, SEL);
id __cdecl +[FlurryWatch apiKey](struct FlurryWatch_meta *self, SEL);
void __fastcall sub_B84A8(int a1, int a2, int a3, int a4, struct objc_object *a5);
struct dispatch_queue_s *__cdecl +[FlurryWatch queue](struct FlurryWatch_meta *self, SEL);
int sub_B85D0();
void *sub_B8604();
int __cdecl +[FlurryWatch logWatchEvent:](struct FlurryWatch *self, SEL, id);
int __cdecl +[FlurryWatch logWatchEvent:withParameters:](struct FlurryWatch *self, SEL, id, id);
void __fastcall sub_B8966(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, unsigned int a17, int a18, int a19);
void __fastcall sub_B89DC(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_B8A28(int a1, int a2);
void __fastcall sub_B8A40(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl +[FlurryWatch logWatchError:message:exception:](struct FlurryWatch *self, SEL, id, id, id);
void __fastcall sub_B8EEC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, unsigned int a25, int a26, int a27);
void __fastcall sub_B8F6C(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_B8FCC(int a1, int a2);
void __fastcall sub_B8FF0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl +[FlurryWatch logWatchError:message:error:](struct FlurryWatch *self, SEL, id, id, id);
void __fastcall sub_B94A8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, unsigned int a25, int a26, int a27);
void __fastcall sub_B9528(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_B9588(int a1, int a2);
void __fastcall sub_B95AC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl +[FlurryKeychainWrapper keychainWrapperWithIdentifier:](struct FlurryKeychainWrapper *self, SEL, id);
id __cdecl -[FlurryKeychainWrapper initWithIdentifier:](struct FlurryKeychainWrapper *self, SEL, id);
id __cdecl -[FlurryKeychainWrapper setupSearchForKey:](struct FlurryKeychainWrapper *self, SEL, id);
id __cdecl -[FlurryKeychainWrapper dataForKey:](struct FlurryKeychainWrapper *self, SEL, id);
id __cdecl -[FlurryKeychainWrapper stringForKey:](struct FlurryKeychainWrapper *self, SEL, id);
char __cdecl -[FlurryKeychainWrapper setObject:forKey:](struct FlurryKeychainWrapper *self, SEL, id, id);
id __cdecl -[FlurryKeychainWrapper objectForKey:](struct FlurryKeychainWrapper *self, SEL, id);
char __cdecl -[FlurryKeychainWrapper setString:forKey:](struct FlurryKeychainWrapper *self, SEL, id, id);
char __cdecl -[FlurryKeychainWrapper setData:forKey:](struct FlurryKeychainWrapper *self, SEL, id, id);
char __cdecl -[FlurryKeychainWrapper updateValueData:forKey:](struct FlurryKeychainWrapper *self, SEL, id, id);
void __cdecl -[FlurryKeychainWrapper removeObjectForKey:](struct FlurryKeychainWrapper *self, SEL, id);
id __cdecl -[FlurryKeychainWrapper identifier](struct FlurryKeychainWrapper *self, SEL);
void __cdecl -[FlurryKeychainWrapper setIdentifier:](struct FlurryKeychainWrapper *self, SEL, id);
void __cdecl -[FlurryKeychainWrapper .cxx_destruct](struct FlurryKeychainWrapper *self, SEL);
id __cdecl -[FlurryPulseSettings initWithCoder:](struct FlurryPulseSettings *self, SEL, id);
id __cdecl -[FlurryPulseSettings initWithDictionary:](struct FlurryPulseSettings *self, SEL, id);
void __cdecl -[FlurryPulseSettings encodeWithCoder:](struct FlurryPulseSettings *self, SEL, id);
id __cdecl -[FlurryPulseSettings dataDictionary](struct FlurryPulseSettings *self, SEL);
int64_t __cdecl -[FlurryPulseSettings lastResponseTime](struct FlurryPulseSettings *self, SEL);
void __cdecl -[FlurryPulseSettings setLastResponseTime:](struct FlurryPulseSettings *self, SEL, int64_t);
int64_t __cdecl -[FlurryPulseSettings nextRefreshTTL](struct FlurryPulseSettings *self, SEL);
void __cdecl -[FlurryPulseSettings setNextRefreshTTL:](struct FlurryPulseSettings *self, SEL, int64_t);
int64_t __cdecl -[FlurryPulseSettings expirationTTL](struct FlurryPulseSettings *self, SEL);
void __cdecl -[FlurryPulseSettings setExpirationTTL:](struct FlurryPulseSettings *self, SEL, int64_t);
id __cdecl -[FlurryPulseSettings callbacks](struct FlurryPulseSettings *self, SEL);
void __cdecl -[FlurryPulseSettings setCallbacks:](struct FlurryPulseSettings *self, SEL, id);
id __cdecl -[FlurryPulseSettings callbackEventsMap](struct FlurryPulseSettings *self, SEL);
void __cdecl -[FlurryPulseSettings setCallbackEventsMap:](struct FlurryPulseSettings *self, SEL, id);
int __cdecl -[FlurryPulseSettings maxCallbackRetries](struct FlurryPulseSettings *self, SEL);
void __cdecl -[FlurryPulseSettings setMaxCallbackRetries:](struct FlurryPulseSettings *self, SEL, int);
int __cdecl -[FlurryPulseSettings maxCallbackAttemptsPerReport](struct FlurryPulseSettings *self, SEL);
void __cdecl -[FlurryPulseSettings setMaxCallbackAttemptsPerReport:](struct FlurryPulseSettings *self, SEL, int);
int __cdecl -[FlurryPulseSettings maxReportDelaySecs](struct FlurryPulseSettings *self, SEL);
void __cdecl -[FlurryPulseSettings setMaxReportDelaySecs:](struct FlurryPulseSettings *self, SEL, int);
id __cdecl -[FlurryPulseSettings agentReportUrl](struct FlurryPulseSettings *self, SEL);
void __cdecl -[FlurryPulseSettings setAgentReportUrl:](struct FlurryPulseSettings *self, SEL, id);
id __cdecl -[FlurryPulseSettings globalSettings](struct FlurryPulseSettings *self, SEL);
void __cdecl -[FlurryPulseSettings setGlobalSettings:](struct FlurryPulseSettings *self, SEL, id);
id __cdecl -[FlurryPulseSettings analytics](struct FlurryPulseSettings *self, SEL);
void __cdecl -[FlurryPulseSettings setAnalytics:](struct FlurryPulseSettings *self, SEL, id);
void __cdecl -[FlurryPulseSettings .cxx_destruct](struct FlurryPulseSettings *self, SEL);
id __cdecl -[FlurryError init](struct FlurryError *self, SEL);
id __cdecl -[FlurryError initWithCoder:](struct FlurryError *self, SEL, id);
void __cdecl -[FlurryError encodeWithCoder:](struct FlurryError *self, SEL, id);
id __cdecl +[FlurryError errorWithString:message:exceptionString:errorType:reportData:](struct FlurryError *self, SEL, id, id, id, int, id);
void __cdecl -[FlurryError appendToData:](struct FlurryError *self, SEL, id);
id __cdecl -[FlurryError description](struct FlurryError *self, SEL);
int __cdecl -[FlurryError errorID](struct FlurryError *self, SEL);
void __cdecl -[FlurryError setErrorID:](struct FlurryError *self, SEL, int);
id __cdecl -[FlurryError date](struct FlurryError *self, SEL);
void __cdecl -[FlurryError setDate:](struct FlurryError *self, SEL, id);
id __cdecl -[FlurryError errorString](struct FlurryError *self, SEL);
void __cdecl -[FlurryError setErrorString:](struct FlurryError *self, SEL, id);
id __cdecl -[FlurryError errorMessage](struct FlurryError *self, SEL);
void __cdecl -[FlurryError setErrorMessage:](struct FlurryError *self, SEL, id);
id __cdecl -[FlurryError exceptionString](struct FlurryError *self, SEL);
void __cdecl -[FlurryError setExceptionString:](struct FlurryError *self, SEL, id);
int __cdecl -[FlurryError errorType](struct FlurryError *self, SEL);
void __cdecl -[FlurryError setErrorType:](struct FlurryError *self, SEL, int);
id __cdecl -[FlurryError reportData](struct FlurryError *self, SEL);
void __cdecl -[FlurryError setReportData:](struct FlurryError *self, SEL, id);
void __cdecl -[FlurryError .cxx_destruct](struct FlurryError *self, SEL);
id __cdecl +[FlurryPulseAppTemplate pulseMethodsArrayInstance](struct FlurryPulseAppTemplate_meta *self, SEL);
id __cdecl +[FlurryPulseAppTemplate pulseMethodEnumToString:](struct FlurryPulseAppTemplate *self, SEL, int);
int __cdecl +[FlurryPulseAppTemplate pulseMethodStringToEnum:](struct FlurryPulseAppTemplate *self, SEL, id);
id __cdecl -[FlurryPulseAppTemplate initWithCoder:](struct FlurryPulseAppTemplate *self, SEL, id);
id __cdecl -[FlurryPulseAppTemplate initWithDictionary:](struct FlurryPulseAppTemplate *self, SEL, id);
void __cdecl -[FlurryPulseAppTemplate encodeWithCoder:](struct FlurryPulseAppTemplate *self, SEL, id);
id __cdecl -[FlurryPulseAppTemplate dataDictionary](struct FlurryPulseAppTemplate *self, SEL);
id __cdecl -[FlurryPulseAppTemplate partner](struct FlurryPulseAppTemplate *self, SEL);
void __cdecl -[FlurryPulseAppTemplate setPartner:](struct FlurryPulseAppTemplate *self, SEL, id);
id __cdecl -[FlurryPulseAppTemplate events](struct FlurryPulseAppTemplate *self, SEL);
void __cdecl -[FlurryPulseAppTemplate setEvents:](struct FlurryPulseAppTemplate *self, SEL, id);
int __cdecl -[FlurryPulseAppTemplate method](struct FlurryPulseAppTemplate *self, SEL);
void __cdecl -[FlurryPulseAppTemplate setMethod:](struct FlurryPulseAppTemplate *self, SEL, int);
id __cdecl -[FlurryPulseAppTemplate uriTemplate](struct FlurryPulseAppTemplate *self, SEL);
void __cdecl -[FlurryPulseAppTemplate setUriTemplate:](struct FlurryPulseAppTemplate *self, SEL, id);
id __cdecl -[FlurryPulseAppTemplate bodyTemplate](struct FlurryPulseAppTemplate *self, SEL);
void __cdecl -[FlurryPulseAppTemplate setBodyTemplate:](struct FlurryPulseAppTemplate *self, SEL, id);
int __cdecl -[FlurryPulseAppTemplate maxRedirects](struct FlurryPulseAppTemplate *self, SEL);
void __cdecl -[FlurryPulseAppTemplate setMaxRedirects:](struct FlurryPulseAppTemplate *self, SEL, int);
int __cdecl -[FlurryPulseAppTemplate connectTimeout](struct FlurryPulseAppTemplate *self, SEL);
void __cdecl -[FlurryPulseAppTemplate setConnectTimeout:](struct FlurryPulseAppTemplate *self, SEL, int);
int __cdecl -[FlurryPulseAppTemplate requestTimeout](struct FlurryPulseAppTemplate *self, SEL);
void __cdecl -[FlurryPulseAppTemplate setRequestTimeout:](struct FlurryPulseAppTemplate *self, SEL, int);
void __cdecl -[FlurryPulseAppTemplate .cxx_destruct](struct FlurryPulseAppTemplate *self, SEL);
id __cdecl +[FlurryPageViewDelegate createInvocationOnSelector:target:](struct FlurryPageViewDelegate *self, SEL, SEL, id);
void __cdecl +[FlurryPageViewDelegate createDelegateOnTarget:](struct FlurryPageViewDelegate *self, SEL, id);
void __cdecl +[FlurryPageViewDelegate destroyDelegateOnTarget:](struct FlurryPageViewDelegate *self, SEL, id);
void __cdecl -[FlurryPageViewDelegate observeValueForKeyPath:ofObject:change:context:](struct FlurryPageViewDelegate *self, SEL, id, id, id, void *);
id __cdecl -[FlurryPageViewDelegate initWithTarget:](struct FlurryPageViewDelegate *self, SEL, id);
void __cdecl -[FlurryPageViewDelegate dealloc](struct FlurryPageViewDelegate *self, SEL);
void __cdecl -[FlurryPageViewDelegate navigationController:didShowViewController:animated:](struct FlurryPageViewDelegate *self, SEL, id, id, char);
void __fastcall sub_BCA50(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, unsigned int a13, int a14, int a15);
void __cdecl -[FlurryPageViewDelegate navigationController:willShowViewController:animated:](struct FlurryPageViewDelegate *self, SEL, id, id, char);
void __fastcall sub_BCBFA(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, unsigned int a13, int a14, int a15);
char __cdecl -[FlurryPageViewDelegate tabBarController:shouldSelectViewController:](struct FlurryPageViewDelegate *self, SEL, id, id);
void __cdecl -[FlurryPageViewDelegate tabBarController:didSelectViewController:](struct FlurryPageViewDelegate *self, SEL, id, id);
void __fastcall sub_BCF84(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, unsigned int a13, int a14, int a15);
void __cdecl -[FlurryPageViewDelegate tabBarController:willBeginCustomizingViewControllers:](struct FlurryPageViewDelegate *self, SEL, id, id);
void __fastcall sub_BD124(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, unsigned int a13, int a14, int a15);
void __cdecl -[FlurryPageViewDelegate tabBarController:willEndCustomizingViewControllers:changed:](struct FlurryPageViewDelegate *self, SEL, id, id, char);
void __fastcall sub_BD2CE(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, unsigned int a13, int a14, int a15);
void __cdecl -[FlurryPageViewDelegate tabBarController:didEndCustomizingViewControllers:changed:](struct FlurryPageViewDelegate *self, SEL, id, id, char);
void __fastcall sub_BD476(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, unsigned int a13, int a14, int a15);
id __cdecl -[FlurryPageViewDelegate delegate](struct FlurryPageViewDelegate *self, SEL);
void __cdecl -[FlurryPageViewDelegate setDelegate:](struct FlurryPageViewDelegate *self, SEL, id);
id __cdecl -[FlurryPageViewDelegate target](struct FlurryPageViewDelegate *self, SEL);
void __cdecl -[FlurryPageViewDelegate setTarget:](struct FlurryPageViewDelegate *self, SEL, id);
void __cdecl -[FlurryPageViewDelegate .cxx_destruct](struct FlurryPageViewDelegate *self, SEL);
id __cdecl +[FlurryPageViewDelegateOld createInvocationOnSelector:target:](struct FlurryPageViewDelegateOld *self, SEL, SEL, id);
void __cdecl +[FlurryPageViewDelegateOld createDelegateOnTarget:](struct FlurryPageViewDelegateOld *self, SEL, id);
id __cdecl -[FlurryPageViewDelegateOld initWithDelegate:](struct FlurryPageViewDelegateOld *self, SEL, id);
void __cdecl -[FlurryPageViewDelegateOld dealloc](struct FlurryPageViewDelegateOld *self, SEL);
void __cdecl -[FlurryPageViewDelegateOld navigationController:didShowViewController:animated:](struct FlurryPageViewDelegateOld *self, SEL, id, id, char);
void __fastcall sub_BD9D0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, unsigned int a13, int a14, int a15);
void __cdecl -[FlurryPageViewDelegateOld navigationController:willShowViewController:animated:](struct FlurryPageViewDelegateOld *self, SEL, id, id, char);
void __fastcall sub_BDB7A(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, unsigned int a13, int a14, int a15);
char __cdecl -[FlurryPageViewDelegateOld tabBarController:shouldSelectViewController:](struct FlurryPageViewDelegateOld *self, SEL, id, id);
void __cdecl -[FlurryPageViewDelegateOld tabBarController:didSelectViewController:](struct FlurryPageViewDelegateOld *self, SEL, id, id);
void __fastcall sub_BDF04(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, unsigned int a13, int a14, int a15);
void __cdecl -[FlurryPageViewDelegateOld tabBarController:willBeginCustomizingViewControllers:](struct FlurryPageViewDelegateOld *self, SEL, id, id);
void __fastcall sub_BE0A4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, unsigned int a13, int a14, int a15);
void __cdecl -[FlurryPageViewDelegateOld tabBarController:willEndCustomizingViewControllers:changed:](struct FlurryPageViewDelegateOld *self, SEL, id, id, char);
void __fastcall sub_BE24E(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, unsigned int a13, int a14, int a15);
void __cdecl -[FlurryPageViewDelegateOld tabBarController:didEndCustomizingViewControllers:changed:](struct FlurryPageViewDelegateOld *self, SEL, id, id, char);
void __fastcall sub_BE3F6(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, unsigned int a13, int a14, int a15);
id __cdecl -[FlurryPageViewDelegateOld delegate](struct FlurryPageViewDelegateOld *self, SEL);
void __cdecl -[FlurryPageViewDelegateOld setDelegate:](struct FlurryPageViewDelegateOld *self, SEL, id);
void __cdecl -[FlurryPageViewDelegateOld .cxx_destruct](struct FlurryPageViewDelegateOld *self, SEL);
int64_t __cdecl +[FlurryProtocolData timeIntervalFrom:to:](struct FlurryProtocolData *self, SEL, id, id);
id __cdecl +[FlurryProtocolData limitStringLength:](struct FlurryProtocolData *self, SEL, id);
void __cdecl +[FlurryProtocolData appendBoolean:toData:](struct FlurryProtocolData *self, SEL, char, id);
void __cdecl +[FlurryProtocolData appendByte:toData:](struct FlurryProtocolData *self, SEL, char, id);
void __cdecl +[FlurryProtocolData appendUshort:toData:](struct FlurryProtocolData *self, SEL, unsigned __int16, id);
void __cdecl +[FlurryProtocolData appendInt:toData:](struct FlurryProtocolData *self, SEL, int, id);
void __cdecl +[FlurryProtocolData appendLong:toData:](struct FlurryProtocolData *self, SEL, int64_t, id);
void __cdecl +[FlurryProtocolData appendFloat:toData:](struct FlurryProtocolData *self, SEL, float, id);
void __cdecl +[FlurryProtocolData appendDouble:toData:](struct FlurryProtocolData *self, SEL, double, id);
void __cdecl +[FlurryProtocolData appendTimestamp:toData:](struct FlurryProtocolData *self, SEL, id, id);
void __cdecl +[FlurryProtocolData appendString:toData:](struct FlurryProtocolData *self, SEL, id, id);
void __cdecl +[FlurryProtocolData appendStringUnlimited:toData:](struct FlurryProtocolData *self, SEL, id, id);
void __cdecl +[FlurryProtocolData appendTinyData:toData:](struct FlurryProtocolData *self, SEL, id, id);
void __cdecl +[FlurryProtocolData appendShortData:toData:](struct FlurryProtocolData *self, SEL, id, id);
void __cdecl +[FlurryProtocolData appendLargeData:toData:](struct FlurryProtocolData *self, SEL, id, id);
__int16 __cdecl +[FlurryProtocolData getInt16FromData:atIndex:](struct FlurryProtocolData *self, SEL, id, int);
int __cdecl +[FlurryProtocolData getInt32FromData:atIndex:](struct FlurryProtocolData *self, SEL, id, int);
int sub_BEC30();
vm_size_t sub_BED7C();
vm_size_t sub_BEDDC();
vm_size_t sub_BEE3C();
vm_size_t sub_BEE9C();
void __cdecl +[FlurryUtil setLogLevel:](struct FlurryUtil *self, SEL, int);
int __cdecl +[FlurryUtil logLevel](struct FlurryUtil_meta *self, SEL);
void __cdecl +[FlurryUtil setShowErrorInLogEnabled:](struct FlurryUtil *self, SEL, char);
void __cdecl +[FlurryUtil handleException:](struct FlurryUtil *self, SEL, id);
id __cdecl +[FlurryUtil safeUnarchiveObjectWithFile:](struct FlurryUtil *self, SEL, id);
void __cdecl +[FlurryUtil archiveDictionary:toFile:](struct FlurryUtil *self, SEL, id, id);
void __fastcall sub_BF444(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, int a10, int a11, int a12, unsigned int a13, int a14, int a15);
id __cdecl +[FlurryUtil getOrientationStrFromInterfaceOrientation:](struct FlurryUtil *self, SEL, int);
struct CGRect *__cdecl +[FlurryUtil screenBounds:](struct CGRect *__return_ptr __struct_ptr retstr, struct FlurryUtil *self, SEL, id);
id __cdecl +[FlurryUtil firstElementFromArray:](struct FlurryUtil *self, SEL, id);
struct CGRect *__cdecl +[FlurryUtil screenBounds](struct CGRect *__return_ptr __struct_ptr retstr, struct FlurryUtil_meta *self, SEL);
struct CGRect *__cdecl +[FlurryUtil deviceScreenBounds](struct CGRect *__return_ptr __struct_ptr retstr, struct FlurryUtil_meta *self, SEL);
char __cdecl +[FlurryUtil canvasInLandscape:](struct FlurryUtil *self, SEL, id);
char __cdecl +[FlurryUtil canvasInLandscapeRight:](struct FlurryUtil *self, SEL, id);
char __cdecl +[FlurryUtil canvasInLandscapeLeft:](struct FlurryUtil *self, SEL, id);
id __cdecl +[FlurryUtil getCanvasOrientation](struct FlurryUtil_meta *self, SEL);
char __cdecl +[FlurryUtil deviceInLandscape](struct FlurryUtil_meta *self, SEL);
char __cdecl +[FlurryUtil canvasInLandscape](struct FlurryUtil_meta *self, SEL);
char __cdecl +[FlurryUtil canvasInLandscapeRight](struct FlurryUtil_meta *self, SEL);
char __cdecl +[FlurryUtil canvasInLandscapeLeft](struct FlurryUtil_meta *self, SEL);
char __cdecl +[FlurryUtil canvasInPortraitUpsideDown](struct FlurryUtil_meta *self, SEL);
char __cdecl +[FlurryUtil isIPad](struct FlurryUtil_meta *self, SEL);
char __cdecl +[FlurryUtil isRetina](struct FlurryUtil_meta *self, SEL);
int __cdecl +[FlurryUtil getSystemVersionAsAnInteger](struct FlurryUtil_meta *self, SEL);
char __cdecl +[FlurryUtil addSkipBackupAttributeToItemAtURL:](struct FlurryUtil *self, SEL, id);
id __cdecl +[FlurryUtil decodeFromPercentEscapeString:](struct FlurryUtil *self, SEL, id);
id __cdecl +[FlurryUtil encodeToPercentEscapeString:](struct FlurryUtil *self, SEL, id);
id __cdecl +[FlurryUtil encodeIllegalCharsToPercentEscapeString:](struct FlurryUtil *self, SEL, id);
char __cdecl +[FlurryUtil viewIsVisible:](struct FlurryUtil *self, SEL, id);
void __fastcall sub_C028A(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, int a25, int a26, int a27, int a28, unsigned int a29, int a30, int a31);
char __cdecl +[FlurryUtil theAppIsActive](struct FlurryUtil_meta *self, SEL);
char __cdecl +[FlurryUtil isPortaitOrientationSupportedForWindow:](struct FlurryUtil *self, SEL, id);
void __cdecl +[FlurryUtil generateChecksumTable](struct FlurryUtil_meta *self, SEL);
int __cdecl +[FlurryUtil dataChecksum:](struct FlurryUtil *self, SEL, id);
id __cdecl +[FlurryUtil createParamKeysDictFromUrlParams:paramsHeader:paramsKVString:](struct FlurryUtil *self, SEL, id, id *, id *);
struct _NSRange __cdecl +[FlurryUtil flurryRangeOfData:inData:](struct FlurryUtil *self, SEL, id, id);
char __cdecl +[FlurryUtil isKeyWindowAlertView](struct FlurryUtil_meta *self, SEL);
char __cdecl +[FlurryUtil isInWatchExtension](struct FlurryUtil_meta *self, SEL);
id __cdecl +[FlurryUtil oldFilePathDirectoryUptilAgentVersion109](struct FlurryUtil_meta *self, SEL);
id __cdecl +[FlurryUtil filePathDirectory](struct FlurryUtil_meta *self, SEL);
id __cdecl +[FlurryUtil devicePlatform](struct FlurryUtil_meta *self, SEL);
char __cdecl +[FlurryUtil deviceIsJailbroken](struct FlurryUtil_meta *self, SEL);
char __cdecl +[FlurryUtil appIsCracked](struct FlurryUtil_meta *self, SEL);
id __cdecl +[FlurryUtil hashData:](struct FlurryUtil *self, SEL, id);
id __cdecl +[FlurryUtil hashDataToHexString:length:](struct FlurryUtil *self, SEL, char *, unsigned int);
int __fastcall sub_C1118(int a1, const char *a2);
id __cdecl +[FlurryUtil MACString](struct FlurryUtil_meta *self, SEL);
id __cdecl +[FlurryUtil getMACUID](struct FlurryUtil_meta *self, SEL);
id __cdecl +[FlurryUtil getIdentifierForVendor](struct FlurryUtil_meta *self, SEL);
void __cdecl +[FlurryUtil cleanupStoredIdentifierForVendor](struct FlurryUtil_meta *self, SEL);
id __cdecl +[FlurryUtil generateCFUUID](struct FlurryUtil_meta *self, SEL);
id __cdecl +[FlurryUtil generateCFUUIDBasedUID](struct FlurryUtil_meta *self, SEL);
char *__cdecl +[FlurryUtil getId](struct FlurryUtil_meta *self, SEL);
char *__cdecl +[FlurryUtil getMgr](struct FlurryUtil_meta *self, SEL);
char *__cdecl +[FlurryUtil getModule](struct FlurryUtil_meta *self, SEL);
char *__cdecl +[FlurryUtil getUser](struct FlurryUtil_meta *self, SEL);
char *__cdecl +[FlurryUtil getLimit](struct FlurryUtil_meta *self, SEL);
id __cdecl +[FlurryUtil getFlurryId](struct FlurryUtil_meta *self, SEL);
void __fastcall sub_C1AE2(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, unsigned int a17, int a18);
char __cdecl +[FlurryUtil isAdTrackingEnabled](struct FlurryUtil_meta *self, SEL);
id __cdecl +[FlurryUtil preferredLanguage](struct FlurryUtil_meta *self, SEL);
void __cdecl +[FlurryUtil incrementCounter:locationName:](struct FlurryUtil *self, SEL, id, char *);
void __cdecl +[FlurryUtil incrementCounter:](struct FlurryUtil *self, SEL, id);
void __fastcall sub_C200A(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, unsigned int a13, int a14);
void __cdecl +[FlurryUtil decrementCounter:locationName:](struct FlurryUtil *self, SEL, id, char *);
void __cdecl +[FlurryUtil decrementCounter:](struct FlurryUtil *self, SEL, id);
void __fastcall sub_C2236(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, unsigned int a13, int a14);
void __cdecl +[FlurryUtil printCounters](struct FlurryUtil_meta *self, SEL);
id __cdecl +[FlurryUtil allCounters](struct FlurryUtil_meta *self, SEL);
void __fastcall sub_C2502(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, unsigned int a9, int a10);
float __cdecl +[FlurryUtil getBatteryLevel](struct FlurryUtil_meta *self, SEL);
void __fastcall sub_C26D6(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, unsigned int a13, int a14);
unsigned int __cdecl +[FlurryUtil uint32FromNSUInteger:](struct FlurryUtil *self, SEL, unsigned int);
int __cdecl +[FlurryUtil getBatteryState](struct FlurryUtil_meta *self, SEL);
void __fastcall sub_C28B2(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, unsigned int a13, int a14);
int __cdecl +[FlurryUtil int32FromNSInteger:](struct FlurryUtil *self, SEL, int);
uint64_t __cdecl +[FlurryUtil getFreeDiskspace](struct FlurryUtil_meta *self, SEL);
uint64_t __cdecl +[FlurryUtil getDiskSize](struct FlurryUtil_meta *self, SEL);
int32_t __cdecl +[FlurryUtil lastBootTime](struct FlurryUtil_meta *self, SEL);
void __cdecl +[FlurryUtil setFlurryOptOut:](struct FlurryUtil *self, SEL, char);
void __fastcall sub_C2D42(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, unsigned int a9, int a10);
char __cdecl +[FlurryUtil hasUserOptedOut](struct FlurryUtil_meta *self, SEL);
void __fastcall sub_C2E84(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, unsigned int a9, int a10);
id __cdecl +[FlurryUtil md5String:](struct FlurryUtil *self, SEL, id);
char __cdecl +[FlurryUtil updateIfChangedCookieValue:forCookieKey:](struct FlurryUtil *self, SEL, id, id);
id __cdecl +[FlurryUtil getFixedSalt](struct FlurryUtil_meta *self, SEL);
double __cdecl +[FlurryUtil reduceLocationPrecision:](struct FlurryUtil *self, SEL, double);
id __cdecl +[FlurryUtil getIPAddress:](struct FlurryUtil *self, SEL, char);
void __fastcall sub_C339A(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, unsigned int a24);
int __fastcall sub_C33C8(int a1, int a2);
void __fastcall sub_C33D4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
signed int __fastcall sub_C33DC(int a1, int a2, int a3, int a4);
int __fastcall sub_C341C(int a1, int a2);
void __fastcall sub_C3438(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl +[FlurryUtil getIPAddresses](struct FlurryUtil_meta *self, SEL);
void __cdecl +[FlurryUtil substituteParamsInString:withValuesDictionary:forPattern:](struct FlurryUtil *self, SEL, id, id, id);
id __cdecl +[FlurryNetworkUtil instance](struct FlurryNetworkUtil_meta *self, SEL);
void __fastcall sub_C3882(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, unsigned int a9);
void __cdecl +[FlurryNetworkUtil setLastNetworkOperationError:](struct FlurryNetworkUtil *self, SEL, id);
void __cdecl +[FlurryNetworkUtil setNetworkLikelyNotReachable](struct FlurryNetworkUtil_meta *self, SEL);
char __cdecl +[FlurryNetworkUtil isNetworkLikelyNotReachable](struct FlurryNetworkUtil_meta *self, SEL);
void __cdecl +[FlurryNetworkUtil initNetworkReachability](struct FlurryNetworkUtil_meta *self, SEL);
void __fastcall sub_C3CE0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, unsigned int a13, int a14);
void __cdecl +[FlurryNetworkUtil updateNetworkStatus:](struct FlurryNetworkUtil *self, SEL, id);
void __fastcall sub_C3EC4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, unsigned int a13, int a14);
char __cdecl +[FlurryNetworkUtil isNetworkReachable](struct FlurryNetworkUtil_meta *self, SEL);
int __cdecl +[FlurryNetworkUtil networkStatus](struct FlurryNetworkUtil_meta *self, SEL);
void __cdecl +[FlurryNetworkUtil setAdServerUrl:](struct FlurryNetworkUtil *self, SEL, id);
id __cdecl +[FlurryNetworkUtil adServerUrl](struct FlurryNetworkUtil_meta *self, SEL);
void __cdecl +[FlurryNetworkUtil setAdLogServerUrl:](struct FlurryNetworkUtil *self, SEL, id);
id __cdecl +[FlurryNetworkUtil adLogServerUrl](struct FlurryNetworkUtil_meta *self, SEL);
void __cdecl +[FlurryNetworkUtil setPulseServerUrl:](struct FlurryNetworkUtil *self, SEL, id);
id __cdecl +[FlurryNetworkUtil pulseServerUrl](struct FlurryNetworkUtil_meta *self, SEL);
void __cdecl +[FlurryNetworkUtil setPulseCBServerUrl:](struct FlurryNetworkUtil *self, SEL, id);
id __cdecl +[FlurryNetworkUtil pulseCBServerUrl](struct FlurryNetworkUtil_meta *self, SEL);
void __cdecl +[FlurryNetworkUtil setServerURL:](struct FlurryNetworkUtil *self, SEL, id);
void __fastcall sub_C40C6(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, unsigned int a9, int a10, int a11);
void __cdecl +[FlurryNetworkUtil setSecureTransportEnabledDeprecated:](struct FlurryNetworkUtil *self, SEL, char);
void __fastcall sub_C429C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, unsigned int a9, int a10, int a11);
id __cdecl +[FlurryNetworkUtil serverURL](struct FlurryNetworkUtil_meta *self, SEL);
void __cdecl +[FlurryNetworkUtil setAppCloudServerToStaging:](struct FlurryNetworkUtil *self, SEL, char);
id __cdecl +[FlurryNetworkUtil appCloudServerUrl](struct FlurryNetworkUtil_meta *self, SEL);
id __cdecl -[FlurryNetworkUtil lastNetworkOperationError](struct FlurryNetworkUtil *self, SEL);
void __cdecl -[FlurryNetworkUtil setLastNetworkOperationError:](struct FlurryNetworkUtil *self, SEL, id);
void __cdecl -[FlurryNetworkUtil .cxx_destruct](struct FlurryNetworkUtil *self, SEL);
void __cdecl -[NSMutableDictionary(Flurry) hashAndUpdateValueForKey:](struct NSMutableDictionary *self, SEL, id);
void __cdecl +[Flurry setAppVersion:](struct Flurry *self, SEL, id);
void __fastcall sub_C4686(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, unsigned int a9, int a10, int a11);
void __cdecl +[Flurry setLaunchOptions:](struct Flurry *self, SEL, id);
void __cdecl +[Flurry parsePropertyList:](struct Flurry *self, SEL, id);
void __cdecl +[Flurry parseDictionary:](struct Flurry *self, SEL, id);
id __cdecl +[Flurry getFlurryAgentVersion](struct Flurry_meta *self, SEL);
void __cdecl +[Flurry setLogLevel:](struct Flurry *self, SEL, int);
void __cdecl +[Flurry setDebugLogEnabled:](struct Flurry *self, SEL, char);
void __cdecl +[Flurry setServerURL:](struct Flurry *self, SEL, id);
void __fastcall sub_C52F8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, unsigned int a9, int a10, int a11);
int __cdecl +[Flurry sessionContinueSeconds](struct Flurry_meta *self, SEL);
void __cdecl +[Flurry setSessionContinueSeconds:](struct Flurry *self, SEL, int);
void __cdecl +[Flurry setMaxSessionsSaved:](struct Flurry *self, SEL, int);
void __cdecl +[Flurry applicationWillResignActive](struct Flurry_meta *self, SEL);
void __cdecl +[Flurry createAndSendSession](struct Flurry_meta *self, SEL);
void __fastcall sub_C5D9A(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, unsigned int a17, int a18, int a19);
void __cdecl +[Flurry startSession:withOptions:](struct Flurry *self, SEL, id, id);
void __cdecl +[Flurry startSession:](struct Flurry *self, SEL, id);
void __fastcall sub_C65CE(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, unsigned int a21, int a22, int a23);
void __cdecl +[Flurry startupNetworkAndSendSession](struct Flurry_meta *self, SEL);
char __cdecl +[Flurry activeSessionExists](struct Flurry_meta *self, SEL);
id __cdecl +[Flurry getSessionID](struct Flurry_meta *self, SEL);
void __cdecl +[Flurry setLatitude:longitude:horizontalAccuracy:verticalAccuracy:](struct Flurry *self, SEL, double, double, float, float);
void __fastcall sub_C6A4A(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, unsigned int a21, int a22, int a23);
void __cdecl +[Flurry setDelegate:](struct Flurry *self, SEL, id);
void __cdecl +[Flurry endSession](struct Flurry_meta *self, SEL);
void __fastcall sub_C6BE8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, unsigned int a9, int a10, int a11);
void __cdecl +[Flurry pauseBackgroundSession](struct Flurry_meta *self, SEL);
void __cdecl +[Flurry pauseSession](struct Flurry_meta *self, SEL);
void __fastcall sub_C6E50(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, unsigned int a9, int a10, int a11);
void __cdecl +[Flurry applicationWillEnterForeground](struct Flurry_meta *self, SEL);
void __fastcall sub_C6FDC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, unsigned int a9, int a10, int a11);
void __cdecl +[Flurry applicationDidBecomeActive](struct Flurry_meta *self, SEL);
void __fastcall sub_C729E(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, unsigned int a13, int a14, int a15);
void __cdecl +[Flurry didFinishLaunchingWithOptionsInBackground:](struct Flurry *self, SEL, id);
void __fastcall sub_C73F4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, unsigned int a9, int a10, int a11);
void __cdecl +[Flurry addSessionOrigin:](struct Flurry *self, SEL, id);
void __fastcall sub_C7642(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, unsigned int a9, int a10, int a11);
void __cdecl +[Flurry addSessionOrigin:withDeepLink:](struct Flurry *self, SEL, id, id);
void __fastcall sub_C7984(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, unsigned int a13, int a14, int a15);
void __cdecl +[Flurry sessionProperties:](struct Flurry *self, SEL, id);
void __fastcall sub_C7B24(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, unsigned int a9, int a10, int a11);
void __cdecl +[Flurry addOrigin:withVersion:](struct Flurry *self, SEL, id, id);
void __fastcall sub_C7DA2(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, unsigned int a13, int a14, int a15);
void __cdecl +[Flurry addOrigin:withVersion:withParameters:](struct Flurry *self, SEL, id, id, id);
void __fastcall sub_C8032(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, unsigned int a13, int a14, int a15);
int __cdecl +[Flurry logEvent:](struct Flurry *self, SEL, id);
int __cdecl +[Flurry logEvent:withParameters:](struct Flurry *self, SEL, id, id);
void __cdecl +[Flurry logError:message:exception:](struct Flurry *self, SEL, id, id, id);
void __fastcall sub_C8714(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, unsigned int a17, int a18, int a19);
void __cdecl +[Flurry logError:message:error:](struct Flurry *self, SEL, id, id, id);
void __fastcall sub_C8B88(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, unsigned int a17, int a18, int a19);
void __cdecl +[Flurry logAllPageViews:](struct Flurry *self, SEL, id);
void __cdecl +[Flurry logAllPageViewsForTarget:](struct Flurry *self, SEL, id);
void __cdecl +[Flurry stopLogPageViewsForTarget:](struct Flurry *self, SEL, id);
void __cdecl +[Flurry logPageView](struct Flurry_meta *self, SEL);
void __fastcall sub_C90F0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, unsigned int a9, int a10, int a11);
id __cdecl +[Flurry updateSyndicationParameters:syndicationID:](struct Flurry *self, SEL, id, id);
char __cdecl +[Flurry areParametersValidForSyndicationEvent:syndicationID:parameters:](struct Flurry *self, SEL, int, id, id);
int __cdecl +[Flurry logEvent:syndicationID:parameters:](struct Flurry *self, SEL, int, id, id);
int __cdecl +[Flurry logEvent:timed:](struct Flurry *self, SEL, id, char);
void __fastcall sub_C9626(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, unsigned int a13, int a14, int a15);
int __cdecl +[Flurry logEvent:withParameters:timed:](struct Flurry *self, SEL, id, id, char);
void __fastcall sub_C994A(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, unsigned int a13, int a14, int a15);
void __cdecl +[Flurry endTimedEvent:withParameters:](struct Flurry *self, SEL, id, id);
void __fastcall sub_C9B6E(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, unsigned int a9, int a10, int a11);
void __cdecl +[Flurry setUserID:](struct Flurry *self, SEL, id);
void __fastcall sub_C9D82(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, unsigned int a9, int a10, int a11);
void __cdecl +[Flurry setEventLoggingEnabled:](struct Flurry *self, SEL, char);
void __fastcall sub_C9F56(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, unsigned int a9, int a10, int a11);
void __cdecl +[Flurry setPulseEnabled:](struct Flurry *self, SEL, char);
void __fastcall sub_CA1F2(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, unsigned int a9, int a10, int a11);
void __cdecl +[Flurry setPulseServerURL:](struct Flurry *self, SEL, id);
void __fastcall sub_CA30C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, unsigned int a9, int a10, int a11);
void __cdecl +[Flurry setPulseCBServerURL:](struct Flurry *self, SEL, id);
void __fastcall sub_CA41C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, unsigned int a9, int a10, int a11);
void __cdecl +[Flurry setAppCloudServerToStaging:](struct Flurry *self, SEL, char);
void __fastcall sub_CA51E(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, unsigned int a9, int a10, int a11);
void __cdecl +[Flurry setSecureTransportEnabledDeprecated:](struct Flurry *self, SEL, char);
void __cdecl +[Flurry setCrashReportingEnabled:](struct Flurry *self, SEL, char);
void __cdecl +[Flurry setSessionReportsOnCloseEnabled:](struct Flurry *self, SEL, char);
void __fastcall sub_CA92A(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, unsigned int a9, int a10, int a11);
void __cdecl +[Flurry setSessionReportsOnPauseEnabled:](struct Flurry *self, SEL, char);
void __fastcall sub_CAAFA(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, unsigned int a9, int a10, int a11);
void __cdecl +[Flurry setBackgroundSessionEnabled:](struct Flurry *self, SEL, char);
void __fastcall sub_CACB4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, unsigned int a9, int a10, int a11);
void __cdecl +[Flurry setGender:](struct Flurry *self, SEL, id);
void __fastcall sub_CAF4A(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, unsigned int a9, int a10, int a11);
void __cdecl +[Flurry setAge:](struct Flurry *self, SEL, int);
void __fastcall sub_CB126(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, unsigned int a9, int a10, int a11);
void __cdecl +[Flurry setShowErrorInLogEnabled:](struct Flurry *self, SEL, char);
void __cdecl +[Flurry shutdown](struct Flurry_meta *self, SEL);
void __cdecl +[Flurry setFlurryOptOut:](struct Flurry *self, SEL, char);
char __cdecl +[Flurry hasUserOptedOut](struct Flurry_meta *self, SEL);
char __cdecl +[Flurry sendUsageInfo](struct Flurry_meta *self, SEL);
id __cdecl -[FlurryPulseCallbackAttemptInfo initWithCoder:](struct FlurryPulseCallbackAttemptInfo *self, SEL, id);
void __cdecl -[FlurryPulseCallbackAttemptInfo encodeWithCoder:](struct FlurryPulseCallbackAttemptInfo *self, SEL, id);
id __cdecl -[FlurryPulseCallbackAttemptInfo data](struct FlurryPulseCallbackAttemptInfo *self, SEL);
id __cdecl -[FlurryPulseCallbackAttemptInfo copyWithZone:](struct FlurryPulseCallbackAttemptInfo *self, SEL, struct _NSZone *);
int __cdecl -[FlurryPulseCallbackAttemptInfo logSendState](struct FlurryPulseCallbackAttemptInfo *self, SEL);
void __cdecl -[FlurryPulseCallbackAttemptInfo setLogSendState:](struct FlurryPulseCallbackAttemptInfo *self, SEL, int);
id __cdecl -[FlurryPulseCallbackAttemptInfo substitutedUrl](struct FlurryPulseCallbackAttemptInfo *self, SEL);
void __cdecl -[FlurryPulseCallbackAttemptInfo setSubstitutedUrl:](struct FlurryPulseCallbackAttemptInfo *self, SEL, id);
id __cdecl -[FlurryPulseCallbackAttemptInfo body](struct FlurryPulseCallbackAttemptInfo *self, SEL);
void __cdecl -[FlurryPulseCallbackAttemptInfo setBody:](struct FlurryPulseCallbackAttemptInfo *self, SEL, id);
id __cdecl -[FlurryPulseCallbackAttemptInfo headers](struct FlurryPulseCallbackAttemptInfo *self, SEL);
void __cdecl -[FlurryPulseCallbackAttemptInfo setHeaders:](struct FlurryPulseCallbackAttemptInfo *self, SEL, id);
id __cdecl -[FlurryPulseCallbackAttemptInfo eventOccuranceId](struct FlurryPulseCallbackAttemptInfo *self, SEL);
void __cdecl -[FlurryPulseCallbackAttemptInfo setEventOccuranceId:](struct FlurryPulseCallbackAttemptInfo *self, SEL, id);
id __cdecl -[FlurryPulseCallbackAttemptInfo invokeId](struct FlurryPulseCallbackAttemptInfo *self, SEL);
void __cdecl -[FlurryPulseCallbackAttemptInfo setInvokeId:](struct FlurryPulseCallbackAttemptInfo *self, SEL, id);
id __cdecl -[FlurryPulseCallbackAttemptInfo callbackId](struct FlurryPulseCallbackAttemptInfo *self, SEL);
void __cdecl -[FlurryPulseCallbackAttemptInfo setCallbackId:](struct FlurryPulseCallbackAttemptInfo *self, SEL, id);
id __cdecl -[FlurryPulseCallbackAttemptInfo attemptNumber](struct FlurryPulseCallbackAttemptInfo *self, SEL);
void __cdecl -[FlurryPulseCallbackAttemptInfo setAttemptNumber:](struct FlurryPulseCallbackAttemptInfo *self, SEL, id);
id __cdecl -[FlurryPulseCallbackAttemptInfo cbSessionId](struct FlurryPulseCallbackAttemptInfo *self, SEL);
void __cdecl -[FlurryPulseCallbackAttemptInfo setCbSessionId:](struct FlurryPulseCallbackAttemptInfo *self, SEL, id);
id __cdecl -[FlurryPulseCallbackAttemptInfo cbSessionOffset](struct FlurryPulseCallbackAttemptInfo *self, SEL);
void __cdecl -[FlurryPulseCallbackAttemptInfo setCbSessionOffset:](struct FlurryPulseCallbackAttemptInfo *self, SEL, id);
char __cdecl -[FlurryPulseCallbackAttemptInfo finalAttempt](struct FlurryPulseCallbackAttemptInfo *self, SEL);
void __cdecl -[FlurryPulseCallbackAttemptInfo setFinalAttempt:](struct FlurryPulseCallbackAttemptInfo *self, SEL, char);
int __cdecl -[FlurryPulseCallbackAttemptInfo httpStatus](struct FlurryPulseCallbackAttemptInfo *self, SEL);
void __cdecl -[FlurryPulseCallbackAttemptInfo setHttpStatus:](struct FlurryPulseCallbackAttemptInfo *self, SEL, int);
int __cdecl -[FlurryPulseCallbackAttemptInfo requestState](struct FlurryPulseCallbackAttemptInfo *self, SEL);
void __cdecl -[FlurryPulseCallbackAttemptInfo setRequestState:](struct FlurryPulseCallbackAttemptInfo *self, SEL, int);
id __cdecl -[FlurryPulseCallbackAttemptInfo responseBody](struct FlurryPulseCallbackAttemptInfo *self, SEL);
void __cdecl -[FlurryPulseCallbackAttemptInfo setResponseBody:](struct FlurryPulseCallbackAttemptInfo *self, SEL, id);
id __cdecl -[FlurryPulseCallbackAttemptInfo redirectsCount](struct FlurryPulseCallbackAttemptInfo *self, SEL);
void __cdecl -[FlurryPulseCallbackAttemptInfo setRedirectsCount:](struct FlurryPulseCallbackAttemptInfo *self, SEL, id);
id __cdecl -[FlurryPulseCallbackAttemptInfo duration](struct FlurryPulseCallbackAttemptInfo *self, SEL);
void __cdecl -[FlurryPulseCallbackAttemptInfo setDuration:](struct FlurryPulseCallbackAttemptInfo *self, SEL, id);
id __cdecl -[FlurryPulseCallbackAttemptInfo params](struct FlurryPulseCallbackAttemptInfo *self, SEL);
void __cdecl -[FlurryPulseCallbackAttemptInfo setParams:](struct FlurryPulseCallbackAttemptInfo *self, SEL, id);
id __cdecl -[FlurryPulseCallbackAttemptInfo creationTime](struct FlurryPulseCallbackAttemptInfo *self, SEL);
void __cdecl -[FlurryPulseCallbackAttemptInfo setCreationTime:](struct FlurryPulseCallbackAttemptInfo *self, SEL, id);
char __cdecl -[FlurryPulseCallbackAttemptInfo beingFired](struct FlurryPulseCallbackAttemptInfo *self, SEL);
void __cdecl -[FlurryPulseCallbackAttemptInfo setBeingFired:](struct FlurryPulseCallbackAttemptInfo *self, SEL, char);
int __cdecl -[FlurryPulseCallbackAttemptInfo repeatDuration](struct FlurryPulseCallbackAttemptInfo *self, SEL);
void __cdecl -[FlurryPulseCallbackAttemptInfo setRepeatDuration:](struct FlurryPulseCallbackAttemptInfo *self, SEL, int);
int __cdecl -[FlurryPulseCallbackAttemptInfo method](struct FlurryPulseCallbackAttemptInfo *self, SEL);
void __cdecl -[FlurryPulseCallbackAttemptInfo setMethod:](struct FlurryPulseCallbackAttemptInfo *self, SEL, int);
id __cdecl -[FlurryPulseCallbackAttemptInfo expiration](struct FlurryPulseCallbackAttemptInfo *self, SEL);
void __cdecl -[FlurryPulseCallbackAttemptInfo setExpiration:](struct FlurryPulseCallbackAttemptInfo *self, SEL, id);
void __cdecl -[FlurryPulseCallbackAttemptInfo .cxx_destruct](struct FlurryPulseCallbackAttemptInfo *self, SEL);
id __cdecl -[FlurryDataSenderBlockInfo initWithData:](struct FlurryDataSenderBlockInfo *self, SEL, id);
id __cdecl -[FlurryDataSenderBlockInfo initWithCoder:](struct FlurryDataSenderBlockInfo *self, SEL, id);
id __cdecl -[FlurryDataSenderBlockInfo description](struct FlurryDataSenderBlockInfo *self, SEL);
void __cdecl -[FlurryDataSenderBlockInfo encodeWithCoder:](struct FlurryDataSenderBlockInfo *self, SEL, id);
char __cdecl -[FlurryDataSenderBlockInfo deletePersistentData](struct FlurryDataSenderBlockInfo *self, SEL);
id __cdecl -[FlurryDataSenderBlockInfo data](struct FlurryDataSenderBlockInfo *self, SEL);
char __cdecl -[FlurryDataSenderBlockInfo setData:](struct FlurryDataSenderBlockInfo *self, SEL, id);
id __cdecl -[FlurryDataSenderBlockInfo groupIdentifier](struct FlurryDataSenderBlockInfo *self, SEL);
void __cdecl -[FlurryDataSenderBlockInfo setGroupIdentifier:](struct FlurryDataSenderBlockInfo *self, SEL, id);
id __cdecl -[FlurryDataSenderBlockInfo identifier](struct FlurryDataSenderBlockInfo *self, SEL);
void __cdecl -[FlurryDataSenderBlockInfo setIdentifier:](struct FlurryDataSenderBlockInfo *self, SEL, id);
unsigned int __cdecl -[FlurryDataSenderBlockInfo dataSize](struct FlurryDataSenderBlockInfo *self, SEL);
void __cdecl -[FlurryDataSenderBlockInfo setDataSize:](struct FlurryDataSenderBlockInfo *self, SEL, unsigned int);
id __cdecl -[FlurryDataSenderBlockInfo creationDate](struct FlurryDataSenderBlockInfo *self, SEL);
void __cdecl -[FlurryDataSenderBlockInfo setCreationDate:](struct FlurryDataSenderBlockInfo *self, SEL, id);
void __cdecl -[FlurryDataSenderBlockInfo .cxx_destruct](struct FlurryDataSenderBlockInfo *self, SEL);
id __cdecl +[FlurryPulseRequest sharedInstance](struct FlurryPulseRequest_meta *self, SEL);
void __fastcall sub_CD234(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[FlurryPulseRequest initSchema](struct FlurryPulseRequest *self, SEL);
void __cdecl -[FlurryPulseRequest cleanUp](struct FlurryPulseRequest *self, SEL);
void __cdecl -[FlurryPulseRequest dealloc](struct FlurryPulseRequest *self, SEL);
char __cdecl -[FlurryPulseRequest buildObjectWithParams:](struct FlurryPulseRequest *self, SEL, id);
void __cdecl -[FlurryPulseRequest sendPulseRequestWithParams:](struct FlurryPulseRequest *self, SEL, id);
void __cdecl -[FlurryPulseRequest unregisterTask:](struct FlurryPulseRequest *self, SEL, id);
void __cdecl -[FlurryPulseRequest requestDidFail:withResponse:](struct FlurryPulseRequest *self, SEL, id, id);
void __cdecl -[FlurryPulseRequest requestDidCancel:withResponse:](struct FlurryPulseRequest *self, SEL, id, id);
void __cdecl -[FlurryPulseRequest requestSuccessful:withResponse:](struct FlurryPulseRequest *self, SEL, id, id);
void __fastcall sub_CE894(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, unsigned int a17);
void __fastcall sub_CE8C0(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[FlurryPulseRequest runningTasks](struct FlurryPulseRequest *self, SEL);
void __cdecl -[FlurryPulseRequest setRunningTasks:](struct FlurryPulseRequest *self, SEL, id);
void __cdecl -[FlurryPulseRequest .cxx_destruct](struct FlurryPulseRequest *self, SEL);
void __cdecl +[FlurryDataSender setupInstanceWithQueue:](struct FlurryDataSender *self, SEL, struct dispatch_queue_s *);
id __cdecl +[FlurryDataSender instance](struct FlurryDataSender_meta *self, SEL);
void __cdecl +[FlurryDataSender cleanup](struct FlurryDataSender_meta *self, SEL);
Class __cdecl +[FlurryDataSender httpAsyncTaskClass](struct FlurryDataSender_meta *self, SEL);
id __cdecl -[FlurryDataSender initWithQueue:](struct FlurryDataSender *self, SEL, struct dispatch_queue_s *);
id __cdecl +[FlurryDataSender dataKey](struct FlurryDataSender_meta *self, SEL);
void __cdecl -[FlurryDataSender setup](struct FlurryDataSender *self, SEL);
id __cdecl -[FlurryDataSender storeData:](struct FlurryDataSender *self, SEL, id);
void __cdecl -[FlurryDataSender removeStoredDataWithIdentifier:](struct FlurryDataSender *self, SEL, id);
char __cdecl -[FlurryDataSender everSentReportSuccessfully](struct FlurryDataSender *self, SEL);
void __cdecl -[FlurryDataSender sendData:withIdentifier:](struct FlurryDataSender *self, SEL, id, id);
void __fastcall sub_CF000(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_CF048(int a1, int a2);
void __fastcall sub_CF050(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[FlurryDataSender sendSessionsData:](struct FlurryDataSender *self, SEL, id);
void __fastcall sub_CF272(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, unsigned int a13, int a14, int a15);
void __cdecl -[FlurryDataSender requestDidFail:withResponse:](struct FlurryDataSender *self, SEL, id, id);
void *__fastcall sub_CF3CC(int a1);
int __fastcall sub_CF440(int a1, int a2);
void __fastcall sub_CF45C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[FlurryDataSender requestDidCancel:withResponse:](struct FlurryDataSender *self, SEL, id, id);
void *__fastcall sub_CF4FC(int a1);
int __fastcall sub_CF514(int a1, int a2);
void __fastcall sub_CF52C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[FlurryDataSender requestSuccessful:withResponse:](struct FlurryDataSender *self, SEL, id, id);
void *__fastcall sub_CF5F4(int a1);
int __fastcall sub_CF610(int a1, int a2);
void __fastcall sub_CF62C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[FlurryDataSender requestSuccessComplete:withResponse:](struct FlurryDataSender *self, SEL, id, id);
void __fastcall sub_CF838(int a1, int a2, int a3, int a4, int a5, int a6, int a7, const char *a8, int a9, int a10, int a11, int a12, unsigned int a13, int a14, int a15);
int __cdecl -[FlurryDataSender parseCookies:](struct FlurryDataSender *self, SEL, id);
void __cdecl -[FlurryDataSender parseResponse:](struct FlurryDataSender *self, SEL, id);
void __cdecl -[FlurryDataSender didCompleteAllTasks](struct FlurryDataSender *self, SEL);
void __cdecl -[FlurryDataSender retransmitNotSentBlocks](struct FlurryDataSender *self, SEL);
id __cdecl -[FlurryDataSender dataIndex](struct FlurryDataSender *self, SEL);
void __cdecl -[FlurryDataSender setDataIndex:](struct FlurryDataSender *self, SEL, id);
id __cdecl -[FlurryDataSender dataSenderDelegate](struct FlurryDataSender *self, SEL);
void __cdecl -[FlurryDataSender setDataSenderDelegate:](struct FlurryDataSender *self, SEL, id);
void __cdecl -[FlurryDataSender .cxx_destruct](struct FlurryDataSender *self, SEL);
id __cdecl +[FlurryHeartBeater createAndStartInstance:](struct FlurryHeartBeater *self, SEL, double);
void __fastcall sub_D074C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, unsigned int a9, int a10);
id __cdecl +[FlurryHeartBeater instance](struct FlurryHeartBeater_meta *self, SEL);
void __cdecl -[FlurryHeartBeater start:](struct FlurryHeartBeater *self, SEL, double);
void __cdecl -[FlurryHeartBeater heartBeat](struct FlurryHeartBeater *self, SEL);
void __cdecl -[FlurryHeartBeater dealloc](struct FlurryHeartBeater *self, SEL);
void __cdecl -[FlurryHeartBeater .cxx_destruct](struct FlurryHeartBeater *self, SEL);
id __cdecl -[FlurryPulseEventTrigger initWithCoder:](struct FlurryPulseEventTrigger *self, SEL, id);
id __cdecl -[FlurryPulseEventTrigger initWithDictionary:](struct FlurryPulseEventTrigger *self, SEL, id);
void __cdecl -[FlurryPulseEventTrigger encodeWithCoder:](struct FlurryPulseEventTrigger *self, SEL, id);
id __cdecl -[FlurryPulseEventTrigger dataDictionary](struct FlurryPulseEventTrigger *self, SEL);
id __cdecl -[FlurryPulseEventTrigger copyWithZone:](struct FlurryPulseEventTrigger *self, SEL, struct _NSZone *);
unsigned int __cdecl -[FlurryPulseEventTrigger hash](struct FlurryPulseEventTrigger *self, SEL);
char __cdecl -[FlurryPulseEventTrigger isEqual:](struct FlurryPulseEventTrigger *self, SEL, id);
id __cdecl -[FlurryPulseEventTrigger eventName](struct FlurryPulseEventTrigger *self, SEL);
void __cdecl -[FlurryPulseEventTrigger setEventName:](struct FlurryPulseEventTrigger *self, SEL, id);
id __cdecl -[FlurryPulseEventTrigger eventParamName](struct FlurryPulseEventTrigger *self, SEL);
void __cdecl -[FlurryPulseEventTrigger setEventParamName:](struct FlurryPulseEventTrigger *self, SEL, id);
id __cdecl -[FlurryPulseEventTrigger eventParamValues](struct FlurryPulseEventTrigger *self, SEL);
void __cdecl -[FlurryPulseEventTrigger setEventParamValues:](struct FlurryPulseEventTrigger *self, SEL, id);
void __cdecl -[FlurryPulseEventTrigger .cxx_destruct](struct FlurryPulseEventTrigger *self, SEL);
id __cdecl +[FlurryAutoIncrement instance](struct FlurryAutoIncrement_meta *self, SEL);
id __cdecl -[FlurryAutoIncrement init](struct FlurryAutoIncrement *self, SEL);
int __cdecl -[FlurryAutoIncrement nextCountFor:](struct FlurryAutoIncrement *self, SEL, int);
void __fastcall sub_D1396(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, unsigned int a13, int a14);
void __cdecl -[FlurryAutoIncrement resetAll](struct FlurryAutoIncrement *self, SEL);
void __fastcall sub_D1488(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, unsigned int a9, int a10);
void __cdecl +[FlurryAutoIncrement setWatchInstance:](struct FlurryAutoIncrement *self, SEL, id);
void __cdecl -[FlurryAutoIncrement encodeWithCoder:](struct FlurryAutoIncrement *self, SEL, id);
id __cdecl -[FlurryAutoIncrement initWithCoder:](struct FlurryAutoIncrement *self, SEL, id);
id __cdecl -[FlurryAutoIncrement counters](struct FlurryAutoIncrement *self, SEL);
void __cdecl -[FlurryAutoIncrement setCounters:](struct FlurryAutoIncrement *self, SEL, id);
void __cdecl -[FlurryAutoIncrement .cxx_destruct](struct FlurryAutoIncrement *self, SEL);
id __cdecl -[FlurryPulseTriggerInvokeInfo initWithCoder:](struct FlurryPulseTriggerInvokeInfo *self, SEL, id);
id __cdecl -[FlurryPulseTriggerInvokeInfo initWithDictionary:](struct FlurryPulseTriggerInvokeInfo *self, SEL, id);
void __cdecl -[FlurryPulseTriggerInvokeInfo encodeWithCoder:](struct FlurryPulseTriggerInvokeInfo *self, SEL, id);
id __cdecl -[FlurryPulseTriggerInvokeInfo dataDictionary](struct FlurryPulseTriggerInvokeInfo *self, SEL);
id __cdecl -[FlurryPulseTriggerInvokeInfo data](struct FlurryPulseTriggerInvokeInfo *self, SEL);
void __fastcall sub_D2170(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, int a25, int a26, int a27, int a28, int a29, int a30, int a31, unsigned int a32, int a33);
id __cdecl -[FlurryPulseTriggerInvokeInfo copyWithZone:](struct FlurryPulseTriggerInvokeInfo *self, SEL, struct _NSZone *);
void __cdecl -[FlurryPulseTriggerInvokeInfo setCBAttemptsSent](struct FlurryPulseTriggerInvokeInfo *self, SEL);
unsigned int __cdecl -[FlurryPulseTriggerInvokeInfo removeSentCBAttempts](struct FlurryPulseTriggerInvokeInfo *self, SEL);
void __fastcall sub_D2742(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, unsigned int a17, int a18);
void __cdecl -[FlurryPulseTriggerInvokeInfo removeCompletedCallbacks](struct FlurryPulseTriggerInvokeInfo *self, SEL);
void __fastcall sub_D2968(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, unsigned int a17, int a18);
id __cdecl -[FlurryPulseTriggerInvokeInfo invokeId](struct FlurryPulseTriggerInvokeInfo *self, SEL);
void __cdecl -[FlurryPulseTriggerInvokeInfo setInvokeId:](struct FlurryPulseTriggerInvokeInfo *self, SEL, id);
int __cdecl -[FlurryPulseTriggerInvokeInfo triggerType](struct FlurryPulseTriggerInvokeInfo *self, SEL);
void __cdecl -[FlurryPulseTriggerInvokeInfo setTriggerType:](struct FlurryPulseTriggerInvokeInfo *self, SEL, int);
id __cdecl -[FlurryPulseTriggerInvokeInfo sessionId](struct FlurryPulseTriggerInvokeInfo *self, SEL);
void __cdecl -[FlurryPulseTriggerInvokeInfo setSessionId:](struct FlurryPulseTriggerInvokeInfo *self, SEL, id);
id __cdecl -[FlurryPulseTriggerInvokeInfo sessionOffset](struct FlurryPulseTriggerInvokeInfo *self, SEL);
void __cdecl -[FlurryPulseTriggerInvokeInfo setSessionOffset:](struct FlurryPulseTriggerInvokeInfo *self, SEL, id);
char __cdecl -[FlurryPulseTriggerInvokeInfo includesEventTrigger](struct FlurryPulseTriggerInvokeInfo *self, SEL);
void __cdecl -[FlurryPulseTriggerInvokeInfo setIncludesEventTrigger:](struct FlurryPulseTriggerInvokeInfo *self, SEL, char);
id __cdecl -[FlurryPulseTriggerInvokeInfo eventOccuranceId](struct FlurryPulseTriggerInvokeInfo *self, SEL);
void __cdecl -[FlurryPulseTriggerInvokeInfo setEventOccuranceId:](struct FlurryPulseTriggerInvokeInfo *self, SEL, id);
id __cdecl -[FlurryPulseTriggerInvokeInfo eventName](struct FlurryPulseTriggerInvokeInfo *self, SEL);
void __cdecl -[FlurryPulseTriggerInvokeInfo setEventName:](struct FlurryPulseTriggerInvokeInfo *self, SEL, id);
id __cdecl -[FlurryPulseTriggerInvokeInfo callbacks](struct FlurryPulseTriggerInvokeInfo *self, SEL);
void __cdecl -[FlurryPulseTriggerInvokeInfo setCallbacks:](struct FlurryPulseTriggerInvokeInfo *self, SEL, id);
void __cdecl -[FlurryPulseTriggerInvokeInfo .cxx_destruct](struct FlurryPulseTriggerInvokeInfo *self, SEL);
id __cdecl -[FlurryConnectionDelegate init](struct FlurryConnectionDelegate *self, SEL);
id __cdecl -[FlurryConnectionDelegate initWithTaskDelegate:taskParent:](struct FlurryConnectionDelegate *self, SEL, id, id);
char __cdecl -[FlurryConnectionDelegate isDone](struct FlurryConnectionDelegate *self, SEL);
id __cdecl -[FlurryConnectionDelegate connection:willSendRequest:redirectResponse:](struct FlurryConnectionDelegate *self, SEL, id, id, id);
void __cdecl -[FlurryConnectionDelegate connection:didReceiveAuthenticationChallenge:](struct FlurryConnectionDelegate *self, SEL, id, id);
void __cdecl -[FlurryConnectionDelegate connection:didCancelAuthenticationChallenge:](struct FlurryConnectionDelegate *self, SEL, id, id);
void __cdecl -[FlurryConnectionDelegate connection:didReceiveResponse:](struct FlurryConnectionDelegate *self, SEL, id, id);
void __cdecl -[FlurryConnectionDelegate connection:didReceiveData:](struct FlurryConnectionDelegate *self, SEL, id, id);
void __cdecl -[FlurryConnectionDelegate connectionDidFinishLoading:](struct FlurryConnectionDelegate *self, SEL, id);
void __cdecl -[FlurryConnectionDelegate connection:didFailWithError:](struct FlurryConnectionDelegate *self, SEL, id, id);
id __cdecl -[FlurryConnectionDelegate connection:willCacheResponse:](struct FlurryConnectionDelegate *self, SEL, id, id);
void __cdecl -[FlurryConnectionDelegate connectionCanceled](struct FlurryConnectionDelegate *self, SEL);
id __cdecl -[FlurryConnectionDelegate constructResponse](struct FlurryConnectionDelegate *self, SEL);
id __cdecl -[FlurryConnectionDelegate originalRequest](struct FlurryConnectionDelegate *self, SEL);
void __cdecl -[FlurryConnectionDelegate setOriginalRequest:](struct FlurryConnectionDelegate *self, SEL, id);
id __cdecl -[FlurryConnectionDelegate response](struct FlurryConnectionDelegate *self, SEL);
id __cdecl -[FlurryConnectionDelegate body](struct FlurryConnectionDelegate *self, SEL);
id __cdecl -[FlurryConnectionDelegate error](struct FlurryConnectionDelegate *self, SEL);
id __cdecl -[FlurryConnectionDelegate httpTaskDelegate](struct FlurryConnectionDelegate *self, SEL);
void __cdecl -[FlurryConnectionDelegate setHttpTaskDelegate:](struct FlurryConnectionDelegate *self, SEL, id);
id __cdecl -[FlurryConnectionDelegate httpTask](struct FlurryConnectionDelegate *self, SEL);
void __cdecl -[FlurryConnectionDelegate setHttpTask:](struct FlurryConnectionDelegate *self, SEL, id);
int __cdecl -[FlurryConnectionDelegate redirectCount](struct FlurryConnectionDelegate *self, SEL);
void __cdecl -[FlurryConnectionDelegate setRedirectCount:](struct FlurryConnectionDelegate *self, SEL, int);
void __cdecl -[FlurryConnectionDelegate .cxx_destruct](struct FlurryConnectionDelegate *self, SEL);
id __cdecl +[FlurryPulseEventController sharedInstance](struct FlurryPulseEventController_meta *self, SEL);
void __fastcall sub_D3778(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl +[FlurryPulseEventController cleanup](struct FlurryPulseEventController_meta *self, SEL);
id __cdecl -[FlurryPulseEventController init](struct FlurryPulseEventController *self, SEL);
void __cdecl -[FlurryPulseEventController dealloc](struct FlurryPulseEventController *self, SEL);
id __cdecl +[FlurryPulseEventController pulseEventArrayInstance](struct FlurryPulseEventController_meta *self, SEL);
id __cdecl +[FlurryPulseEventController pulseEventEnumToString:](struct FlurryPulseEventController *self, SEL, int);
int __cdecl +[FlurryPulseEventController pulseEventStringToEnum:](struct FlurryPulseEventController *self, SEL, id);
void __cdecl -[FlurryPulseEventController registerForNotifications:](struct FlurryPulseEventController *self, SEL, id);
void __cdecl -[FlurryPulseEventController updatePulseForAdTracking](struct FlurryPulseEventController *self, SEL);
void __cdecl -[FlurryPulseEventController processEvent:withParams:forSession:](struct FlurryPulseEventController *self, SEL, id, id, id);
void __cdecl -[FlurryPulseEventController asyncInvokeURLWithParams:](struct FlurryPulseEventController *self, SEL, id);
void __fastcall sub_D6392(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, unsigned int a25, int a26);
void __cdecl -[FlurryPulseEventController fireConfigUrlsForEvent:](struct FlurryPulseEventController *self, SEL, id);
void __fastcall sub_D6742(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, int a25, int a26, int a27, int a28, int a29, int a30, int a31, int a32, int a33, int a34, int a35, unsigned int a36, int a37);
void __cdecl -[FlurryPulseEventController requestSuccessful:withResponse:](struct FlurryPulseEventController *self, SEL, id, id);
void __fastcall sub_D6AEA(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, unsigned int a17, int a18);
void __cdecl -[FlurryPulseEventController requestDidFail:withResponse:](struct FlurryPulseEventController *self, SEL, id, id);
void __fastcall sub_D6FCE(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, unsigned int a21, int a22);
void __cdecl -[FlurryPulseEventController requestDidCancel:withResponse:](struct FlurryPulseEventController *self, SEL, id, id);
void __fastcall sub_D74B6(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, unsigned int a21, int a22);
void __cdecl -[FlurryPulseEventController appWillBackground:](struct FlurryPulseEventController *self, SEL, id);
void __cdecl -[FlurryPulseEventController appWillResume:](struct FlurryPulseEventController *self, SEL, id);
void __cdecl -[FlurryPulseEventController networkStatusChanged:](struct FlurryPulseEventController *self, SEL, id);
void __cdecl -[FlurryPulseEventController firePendingUrlsOnNetworkAvailability](struct FlurryPulseEventController *self, SEL);
void *__fastcall sub_D797C(int a1, int a2, int a3);
int __fastcall sub_D7990(int a1, int a2);
void __fastcall sub_D7998(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[FlurryPulseEventController manageUrlStorage:](struct FlurryPulseEventController *self, SEL, id);
void __fastcall sub_D7C22(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, unsigned int a13, int a14);
void __cdecl -[FlurryPulseEventController makePulseRequest](struct FlurryPulseEventController *self, SEL);
void __cdecl -[FlurryPulseEventController setTimerToFireUrlWithInvokeInfo:](struct FlurryPulseEventController *self, SEL, id);
void __fastcall sub_D7E6C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, unsigned int a17, int a18);
void __cdecl -[FlurryPulseEventController fireUrlOnTimer:](struct FlurryPulseEventController *self, SEL, id);
void __cdecl -[FlurryPulseEventController firePendingUrls](struct FlurryPulseEventController *self, SEL);
id __cdecl -[FlurryPulseEventController substituteParamsInDictionary:withValuesDictionary:forPattern:](struct FlurryPulseEventController *self, SEL, id, id, id);
struct dispatch_queue_s *__cdecl -[FlurryPulseEventController queue](struct FlurryPulseEventController *self, SEL);
void __cdecl -[FlurryPulseEventController setQueue:](struct FlurryPulseEventController *self, SEL, struct dispatch_queue_s *);
void __cdecl -[FlurryDataSenderBase initialize](struct FlurryDataSenderBase *self, SEL);
id __cdecl -[FlurryDataSenderBase init](struct FlurryDataSenderBase *self, SEL);
id __cdecl -[FlurryDataSenderBase initWithQueue:](struct FlurryDataSenderBase *self, SEL, struct dispatch_queue_s *);
void __cdecl -[FlurryDataSenderBase dealloc](struct FlurryDataSenderBase *self, SEL);
char __cdecl -[FlurryDataSenderBase hasOngoingTasksWindow](struct FlurryDataSenderBase *self, SEL);
void __cdecl -[FlurryDataSenderBase registerNewTask:](struct FlurryDataSenderBase *self, SEL, id);
void __cdecl -[FlurryDataSenderBase unregisterTask:completedSuccessfuly:](struct FlurryDataSenderBase *self, SEL, id, char);
void __cdecl -[FlurryDataSenderBase retransmitNotSentBlocks](struct FlurryDataSenderBase *self, SEL);
void __cdecl -[FlurryDataSenderBase didCompleteAllTasks](struct FlurryDataSenderBase *self, SEL);
void __cdecl -[FlurryDataSenderBase cancelTasks](struct FlurryDataSenderBase *self, SEL);
void __cdecl -[FlurryDataSenderBase startBackgroundTaskTrackingIfNeeded](struct FlurryDataSenderBase *self, SEL);
int sub_D8C2C();
void __cdecl -[FlurryDataSenderBase stopBackgroundTasksTracking](struct FlurryDataSenderBase *self, SEL);
void __cdecl -[FlurryDataSenderBase networkStatusChanged:](struct FlurryDataSenderBase *self, SEL, id);
void *__fastcall sub_D8E5C(int a1, int a2, int a3);
int __fastcall sub_D8E70(int a1, int a2);
void __fastcall sub_D8E78(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[FlurryDataSenderBase performRetransmitNotSentBlocks](struct FlurryDataSenderBase *self, SEL);
id __cdecl -[FlurryDataSenderBase runningTasks](struct FlurryDataSenderBase *self, SEL);
void __cdecl -[FlurryDataSenderBase setRunningTasks:](struct FlurryDataSenderBase *self, SEL, id);
unsigned int __cdecl -[FlurryDataSenderBase backgroundTask](struct FlurryDataSenderBase *self, SEL);
void __cdecl -[FlurryDataSenderBase setBackgroundTask:](struct FlurryDataSenderBase *self, SEL, unsigned int);
struct dispatch_queue_s *__cdecl -[FlurryDataSenderBase queue](struct FlurryDataSenderBase *self, SEL);
void __cdecl -[FlurryDataSenderBase setQueue:](struct FlurryDataSenderBase *self, SEL, struct dispatch_queue_s *);
void __cdecl -[FlurryDataSenderBase .cxx_destruct](struct FlurryDataSenderBase *self, SEL);
char *__fastcall sub_D8FA0(int a1, int a2);
int __fastcall sub_D9000(int a1, int a2, int a3, int (__fastcall *a4)(_DWORD, _DWORD, _DWORD), int a5);
signed int __fastcall sub_D94E0(const void *a1, size_t a2, int a3);
int __fastcall sub_D94F0(int a1, int a2, int (__fastcall *a3)(_DWORD, _DWORD, _DWORD), int a4);
int __fastcall sub_D96B0(char a1, int a2, int a3, int (__fastcall *a4)(_DWORD, _DWORD, _DWORD), int a5);
int __fastcall sub_D9738(int a1, int a2);
signed int __fastcall sub_D9744(unsigned int **a1, unsigned int **a2);
char *__fastcall sub_D9760(char *result, const char *a2);
char *__fastcall sub_D9784(char *result, const char *a2);
int __fastcall sub_D97C0(int a1, unsigned int a2, unsigned int a3, int a4);
int __fastcall sub_D97E8(int result, unsigned int a2, unsigned int a3, int a4);
signed int __fastcall sub_D9828(int a1, int a2, int a3, int a4, int a5);
int __fastcall sub_D9890(int a1);
int __fastcall sub_D98A4(int a1);
signed int __fastcall sub_D98E4(int a1, int a2, int a3);
int __fastcall sub_D9A2C(int a1, int a2, int a3, int a4);
int __fastcall sub_D9A78(int a1, int a2, int a3);
int __fastcall sub_D9AA8(int a1, int a2);
int __fastcall sub_D9AF4(int a1);
int __fastcall sub_D9B04(int a1, int a2);
int __fastcall sub_D9B18(int a1);
int __fastcall sub_D9B20(int a1);
int __fastcall sub_D9B2C(int a1, int a2, int a3);
signed int __fastcall sub_D9BA0(int a1);
int __fastcall sub_D9BB8(int a1, int a2, int a3);
int __fastcall sub_D9C44(int a1);
int __fastcall sub_D9C64(int a1, int a2, int a3, int a4);
signed int __fastcall sub_D9D50(int a1, int a2);
int __fastcall sub_DA384(int a1, int _R1, int a3, int a4);
signed int __fastcall sub_DA640(int a1, int a2);
int __fastcall sub_DA660(int result, unsigned int a2);
signed int __fastcall sub_DA680(int a1, int a2);
int __fastcall sub_DA774(int a1);
int __fastcall sub_DA7FC(int result, unsigned int a2);
int __fastcall sub_DA838(int a1);
int __fastcall sub_DA850(int result);
char *__fastcall sub_DA864(const char *a1);
signed int __fastcall sub_DA894(int a1);
int __fastcall sub_DA8C8(int *a1);
int __fastcall sub_DA8E4(int a1);
int __fastcall sub_DA8F0(int a1);
signed int __fastcall sub_DA8F4(int a1, const void *a2, size_t a3);
signed int __fastcall sub_DA96C(int a1, char a2);
int __fastcall sub_DA984(int a1);
signed int __fastcall sub_DA99C(unsigned int a1, int a2, int a3);
signed int __fastcall sub_DAA30(signed int a1);
signed int __fastcall sub_DAA7C(int a1, signed int a2, int a3);
int __fastcall sub_DAB20(int a1, int a2);
int __fastcall sub_DAB6C(char *a1, int a2);
int sub_DABD0();
int __fastcall sub_DAC38(int a1);
signed int __fastcall sub_DAC60(int a1, int a2);
int __fastcall sub_DAC78(int result, int a2);
int __fastcall sub_DAC90(int a1);
int __fastcall sub_DACA0(int a1, int a2);
signed int __fastcall sub_DACBC(int a1, const char *a2, int a3);
signed int __fastcall sub_DAD3C(int a1, char *a2, int a3);
int __fastcall sub_DAD88(int a1);
int __fastcall sub_DAD98(int a1);
int __fastcall sub_DADAC(int a1);
int __fastcall sub_DADC0(int a1, int a2);
int __fastcall sub_DADD8(int a1);
int sub_DADEC();
int __fastcall sub_DAE28(int a1);
int __fastcall sub_DAE38(int a1, unsigned int a2);
signed int __fastcall sub_DAE54(int a1, int a2);
int __fastcall sub_DAEA4(int a1, int a2, int a3);
int __fastcall sub_DAEF8(const char *a1);
int __fastcall sub_DAF28(char *); // idb
int __fastcall sub_DAF4C(int a1);
int __fastcall sub_DAF5C(int a1, int a2);
__int64 __fastcall sub_DAF80(int a1);
int __fastcall sub_DAF98(int a1);
int __fastcall sub_DAFC0(int _R0, int _R1);
_UNKNOWN *sub_DAFD8();
_UNKNOWN *sub_DAFE4();
_UNKNOWN *sub_DAFF0();
int __fastcall sub_DAFFC(int result);
void *__fastcall sub_DB074(int a1, void *a2, int a3, size_t a4);
void *__fastcall sub_DB090(int a1, int a2);
int __fastcall sub_DB0CC(char *); // idb
int __fastcall sub_DB140(int a1, int a2);
int __fastcall sub_DB15C(int result, int a2);
int __fastcall sub_DB168(int result);
signed int __fastcall sub_DB19C(int a1, int a2);
signed int __fastcall sub_DB204(int a1, int a2);
int __fastcall sub_DB230(int a1);
int __fastcall sub_DB25C(char *a1);
int __fastcall sub_DB290(int a1, int a2, int a3, int a4);
int __fastcall sub_DB2F4(const char *a1, int a2);
signed int __fastcall sub_DB310(int a1, int a2, int a3, int a4);
signed int __fastcall sub_DB360(int a1, char *a2);
signed int __fastcall sub_DB3B4(int a1, int a2, __int64 a3, int a4);
int __fastcall sub_DB43C(const void *a1, size_t a2, int a3);
int __fastcall sub_DB4C0(int a1, int a2, int a3, int a4);
int __fastcall sub_DB518(_DWORD, _DWORD, _DWORD, _DWORD); // weak
signed int __fastcall sub_DB51C(int a1, const void *a2, size_t a3, unsigned int a4);
signed int __fastcall sub_DB5B0(int a1, int a2, __int64 a3, int a4);
signed int __fastcall sub_DB628(int a1, int a2, int a3, int a4);
int __fastcall sub_DB694(int a1);
signed int __fastcall sub_DB6E0(int a1, int a2, int a3, int a4);
signed int __fastcall sub_DB734(int a1, int a2, int a3, int a4);
int __fastcall sub_DB774(__int64 a1);
signed int __fastcall sub_DB7C4(int a1, int a2, int a3, int a4);
signed int __fastcall sub_DB81C(int a1, int a2, unsigned int a3);
int __fastcall sub_DB864(int a1);
signed int __fastcall sub_DB8BC(int a1, int _R1, int a3, int a4);
signed int __fastcall sub_DB908(int a1, int a2, int a3, int a4);
int __fastcall sub_DB95C(int a1);
signed int __fastcall sub_DB9B0(int a1, int _R1, int a3, int a4);
signed int __fastcall sub_DB9F8(int _R0, int a2, int a3, int a4);
int __fastcall sub_DBA50(char a1);
signed int __fastcall sub_DBA9C(int a1, char a2, int a3, int a4);
signed int __fastcall sub_DBADC(int a1, int a2, int a3, int a4);
_UNKNOWN *sub_DBB30();
int __fastcall sub_DBB64(int result);
int __fastcall sub_DBB8C(int a1, int a2, int a3, int a4);
__int64 __fastcall sub_DBC3C(int a1);
int __fastcall sub_DBC44(int a1);
signed int __fastcall sub_DBC48(int a1, int a2, int a3, int a4);
unsigned int *__fastcall sub_DBCF4(unsigned int *result);
int __fastcall sub_DBEA0(int a1, int a2, int a3, int a4);
signed int __fastcall sub_DBF68(int a1, int a2, int a3, int a4);
signed int __fastcall sub_DBFAC(int a1, int a2, int a3, int a4);
int __fastcall sub_DC070(int a1, int a2, int a3, int a4);
int __fastcall sub_DC0F0(int a1);
int __fastcall sub_DC0F4(int a1);
signed int __fastcall sub_DC0FC(int a1, int a2, int a3, int a4);
int __fastcall sub_DC13C(int a1, int a2, int a3, int a4, int a5);
int __fastcall sub_DC1F0(_DWORD, _DWORD, _DWORD, _DWORD); // weak
signed int __fastcall sub_DC1F4(int a1, const void *a2, size_t a3, unsigned int a4);
signed int __fastcall sub_DC288(int a1, int a2, __int64 a3, int a4);
signed int __fastcall sub_DC324(int a1, int a2, int a3, int a4);
int __fastcall sub_DC390(int a1, int a2, int a3, int a4);
signed int __fastcall sub_DC424(int a1);
int __fastcall sub_DC490(int a1);
signed int __fastcall sub_DC498(int a1, int a2, int a3, int a4);
signed int __fastcall sub_DC51C(int a1, int a2, int a3, int a4);
signed int __fastcall sub_DC5A4(int a1, int a2, int a3, int a4);
signed int __fastcall sub_DC628(int a1, int a2, int a3, int a4);
int __fastcall sub_DC718(int a1, int a2, int a3, int a4);
signed int __fastcall sub_DC7AC(int a1);
signed int __fastcall sub_DC7D4(int a1, int a2, int a3, int a4);
int __fastcall sub_DC848(int a1);
signed int __fastcall sub_DC850(int a1, int a2, int a3, int a4);
int __fastcall sub_DC8D8(int a1, int a2, int a3, int a4);
signed int __fastcall sub_DC954(int a1, int a2, int a3, int a4);
signed int __fastcall sub_DCA64(int a1, unsigned int *a2);
void __fastcall sub_DCA74(int a1, unsigned int *a2);
signed int __fastcall sub_DCA8C(int a1, int a2, int a3, int a4);
signed int __fastcall sub_DCAA8(int a1, int a2, int a3, int a4);
signed int __fastcall sub_DCBAC(int a1, int a2, signed int a3, int a4, int a5, int a6, char a7, int a8, __int64 a9);
int __fastcall sub_DCF48(int a1, int a2, int a3, int a4);
signed int __fastcall sub_DD154(int a1, int a2, int a3, int a4);
int __fastcall sub_DD174(int a1, int a2);
int __fastcall sub_DD194(int a1);
unsigned int *__fastcall sub_DD19C(int a1);
signed int __fastcall sub_DD1A4(int a1, int a2, int a3, int a4);
signed int __fastcall sub_DD1D4(int a1, signed int *a2, int a3, int a4);
int __fastcall sub_DD1FC(int a1, int a2, int a3, int a4);
signed int __fastcall sub_DD22C(int a1, int a2, int a3, int a4);
signed int __fastcall sub_DD270(int a1, int a2, int a3, int a4);
signed int __fastcall sub_DD2CC(int a1, int a2, int a3, int a4);
signed int __fastcall sub_DD31C(int a1, int a2, int a3, int a4);
signed int __fastcall sub_DD36C(int a1, int a2, int a3, int a4);
signed int __fastcall sub_DD3AC(int a1, int a2, int a3, int a4);
signed int __fastcall sub_DD3EC(int a1, int a2, int a3, int a4);
signed int __fastcall sub_DD438(int a1, int a2, int a3, int a4);
signed int __fastcall sub_DD464(int a1, int a2, int a3, int a4);
signed int __fastcall sub_DD4B4(int a1, int a2, int a3, int a4);
signed int __fastcall sub_DD500(int a1, int a2, int a3, int a4);
signed int __fastcall sub_DD538(int a1, int a2, int a3, int a4);
signed int __fastcall sub_DD594(int a1, int a2, int a3, int a4);
signed int __fastcall sub_DD5E4(int a1, int a2, char a3, int a4);
signed int __fastcall sub_DD618(int a1, int a2, int a3, size_t a4);
signed int __fastcall sub_DD64C(int a1, int a2, int *a3);
signed int __fastcall sub_DD66C(int a1, int a2, int a3, int a4);
signed int __fastcall sub_DD6A0(int a1, int a2, int a3, int a4);
signed int __fastcall sub_DD6D0(int a1, int a2, int a3, int a4);
signed int __fastcall sub_DD700(int a1, int a2, int a3, unsigned int a4);
signed int __fastcall sub_DD734(int a1, int a2, int a3, int a4);
signed int __fastcall sub_DD760(int a1, int a2, int a3, int a4);
signed int __fastcall sub_DD790(int a1, int a2, int a3, int a4);
signed int __fastcall sub_DD7C0(int a1, int a2, int a3, int a4);
signed int __fastcall sub_DD800(int a1, int a2, int a3, int a4);
signed int __fastcall sub_DD830(int a1, int a2, int a3, size_t a4);
signed int __fastcall sub_DD864(int a1, int a2, int *a3);
signed int __fastcall sub_DD884(int a1, int a2, int a3, int a4);
signed int __fastcall sub_DD8E8(int a1, int a2, int a3, int a4, int a5);
signed int __fastcall sub_DD9BC(int a1, int a2, int a3, int a4, int a5);
signed int __fastcall sub_DDA6C(int a1, int a2, int a3, int a4);
signed int __fastcall sub_DDAB8(int a1, int a2, int a3, int a4);
signed int __fastcall sub_DDB10(int a1, int a2, int a3, int a4);
signed int __fastcall sub_DDBA8(int a1, int a2, int a3, int a4, int a5, int a6);
signed int __fastcall sub_DDC90(int a1, int a2, int a3, int a4);
signed int __fastcall sub_DDCF4(int a1, int a2, int a3, int a4);
signed int __fastcall sub_DDDE8(int a1, void **a2, unsigned int a3, int a4);
int __fastcall sub_DDE98(_DWORD); // weak
int __fastcall sub_DDE9C(int a1, const char *a2);
unsigned __int64 __fastcall sub_DDEBC(int a1, const char *a2);
signed int __fastcall sub_DDF0C(int a1, int a2, unsigned int a3, int a4);
signed int __fastcall sub_DDF8C(int a1, int a2, unsigned int a3, int a4);
int __fastcall sub_DDFDC(int a1, int a2, int a3, int a4);
unsigned __int64 __fastcall sub_DE03C(int a1, int a2, unsigned __int64 a3);
signed int __fastcall sub_DE08C(int a1, int a2, unsigned int a3, int a4);
int sub_DE0D4(); // weak
int __fastcall sub_DE0D8(int a1, int a2);
__int64 __fastcall sub_DE0E0(int a1, signed int a2);
signed int __fastcall sub_DE12C(int a1, int a2, unsigned int a3, int a4);
signed int __fastcall sub_DE1C4(int a1, int a2, int a3, int a4);
int __fastcall sub_DE204(int a1, int a2, signed int a3);
__int64 __fastcall sub_DE298(int a1, int a2, signed int a3);
signed int __fastcall sub_DE2E4(int a1, int a2);
signed int __fastcall sub_DE304(int a1);
int __fastcall sub_DE30C(int a1, int a2);
signed __int64 sub_DE324();
signed int __fastcall sub_DE32C(int a1);
signed int __fastcall sub_DE350(int a1);
int __fastcall sub_DE358(int a1, int a2, int a3);
signed __int64 sub_DE36C();
signed int __fastcall sub_DE374(int a1, void *a2);
signed int __fastcall sub_DE37C(int a1);
int __fastcall sub_DE384(int a1, char a2);
signed __int64 sub_DE39C();
int sub_DE3A4();
int sub_DE3A8();
__int64 sub_DE3AC();
int __fastcall sub_DE3B4(int a1, int a2, int a3, int a4);
void **__fastcall sub_DE3F4(int a1, int a2, int a3, int a4);
void *sub_DE478();
int __fastcall sub_DE48C(int a1, int a2, int a3);
int __fastcall sub_DE4E8(int a1, int a2, int a3);
signed int __fastcall sub_DE544(int a1, void *a2, __int64 a3);
signed int __fastcall sub_DE72C(int a1, int a2, int a3);
int __fastcall sub_DE81C(int a1, const void *a2, __int64 a3);
signed __int64 __fastcall sub_DE8F0(int a1);
int __fastcall sub_DE90C(int result);
int __fastcall sub_DE96C(int result);
int __fastcall sub_DE9CC(int a1);
int __fastcall sub_DE9E8(int *a1);
int __fastcall sub_DEA0C(int a1);
signed int __fastcall sub_DEA30(int *a1, int a2, int a3, int a4);
signed int __fastcall sub_DEA5C(int *a1, int a2, int a3, int a4);
signed int __fastcall sub_DEAB8(int *a1, int a2, int a3);
signed int __fastcall sub_DEAF0(int a1, int a2);
int __fastcall sub_DEB0C(int a1);
int __fastcall sub_DEB14(int a1, int a2);
int __fastcall sub_DEB38(int a1, int a2);
int __fastcall sub_DEBD8(int a1, int a2);
int __fastcall sub_DEC44(int *a1, int a2, int a3, int a4);
int __fastcall sub_DFB30(int result);
int __fastcall sub_DFB58(int a1);
unsigned int *__fastcall sub_DFBA0(int a1);
int __fastcall sub_DFBC8(int result);
int __fastcall sub_DFC38(int a1, int a2);
int __fastcall sub_DFC64(int a1);
int __fastcall sub_DFC6C(int a1);
int __fastcall sub_DFC74(int a1, int a2);
int __fastcall sub_DFCA0(int a1, int a2);
int __fastcall sub_DFCCC(int a1, int a2);
int __fastcall sub_DFD00(int a1, int a2);
int __fastcall sub_DFD2C(int a1, int a2);
int __fastcall sub_DFD58(int a1, int a2);
int __fastcall sub_DFD84(int a1, int a2);
int __fastcall sub_DFDB0(int a1, int a2);
int __fastcall sub_DFDD8(int a1, int a2);
int __fastcall sub_DFE0C(int a1, int a2);
int __fastcall sub_DFE38(int a1, int a2);
int __fastcall sub_DFE64(int a1, int a2);
int __fastcall sub_DFE98(int a1, int a2);
int __fastcall sub_DFEC4(int a1, int a2);
int __fastcall sub_DFEF0(int a1, int a2);
int __fastcall sub_DFF24(int a1, int a2);
int __fastcall sub_DFF50(int a1, int a2);
int __fastcall sub_DFF84(int a1, int a2);
int __fastcall sub_DFFB0(int a1, int a2);
int __fastcall sub_DFFDC(int a1, int a2);
int __fastcall sub_E0010(int a1, int a2);
int __fastcall sub_E0038(int a1, int a2);
int __fastcall sub_E0064(int a1, int a2);
int __fastcall sub_E0098(int a1, int a2);
int __fastcall sub_E00C4(int a1, int a2);
int __fastcall sub_E00F0(int a1, int a2);
int __fastcall sub_E0124(int a1, int a2);
int __fastcall sub_E0150(int a1, int a2);
int __fastcall sub_E017C(int a1, int a2);
int __fastcall sub_E01B0(int a1, int a2);
int __fastcall sub_E01E4(int a1, int a2);
int __fastcall sub_E0210(int a1, int a2);
int __fastcall sub_E023C(int a1, int a2);
int __fastcall sub_E0270(int a1, int a2);
int __fastcall sub_E02A4(int a1, int a2);
int __fastcall sub_E02D8(int a1);
int __fastcall sub_E0324(int a1, int a2);
int __fastcall sub_E03AC(int a1, int a2);
signed int __fastcall sub_E03B8(signed int result, int a2);
int __fastcall sub_E03E4(int a1, int a2);
signed int __fastcall sub_E0404(int a1, int a2);
int __fastcall sub_E0434(int a1, int a2, int a3);
int __fastcall sub_E04D0(int a1, int a2);
int __fastcall sub_E076C(int result);
int __fastcall sub_E077C(int a1, int a2);
int __fastcall sub_E0798(int a1, int a2);
int __fastcall sub_E07B4(int a1, int a2);
int __fastcall sub_E07D8(int a1, int a2);
int __fastcall sub_E0810(int a1, int a2);
int __fastcall sub_E0848(int a1, int a2);
int __fastcall sub_E088C(int a1, int a2);
int __fastcall sub_E08FC(int a1, int a2);
int __fastcall sub_E0944(int a1, int a2);
int __fastcall sub_E0958(int a1, int a2);
int __fastcall sub_E097C(int a1, int a2);
int __fastcall sub_E09B4(int a1, int a2);
int __fastcall sub_E09D8(int a1, int a2);
int __fastcall sub_E09FC(int a1, int a2);
int __fastcall sub_E0A20(int a1, int a2);
int __fastcall sub_E0A44(int a1, int a2);
int __fastcall sub_E0A68(int a1, int a2);
int __fastcall sub_E0A84(int a1, int a2);
int __fastcall sub_E0ABC(int a1, int a2);
int __fastcall sub_E0AE0(int a1, int a2);
int __fastcall sub_E0B04(int a1, int a2);
int __fastcall sub_E0B3C(int a1, int a2);
int __fastcall sub_E0B60(int a1, int a2);
int __fastcall sub_E0B84(int a1, int a2);
int __fastcall sub_E0BBC(int a1, int a2);
int __fastcall sub_E0BE0(int a1, int a2);
int __fastcall sub_E0C18(int a1, int a2);
int __fastcall sub_E0C3C(int a1, int a2);
int __fastcall sub_E0C60(int a1, int a2);
int __fastcall sub_E0C98(int a1, int a2);
int __fastcall sub_E0CB4(int a1, int a2);
int __fastcall sub_E0CD8(int a1, int a2);
int __fastcall sub_E0D10(int a1, int a2);
int __fastcall sub_E0D34(int a1, int a2);
int __fastcall sub_E0D58(int a1, int a2);
int __fastcall sub_E0D90(int a1, int a2);
int __fastcall sub_E0DB4(int a1, int a2);
int __fastcall sub_E0DD8(int a1, int a2);
int __fastcall sub_E0DFC(int a1, int a2);
int __fastcall sub_E0E34(int a1, int a2);
int __fastcall sub_E0E6C(int a1, int a2);
int __fastcall sub_E0EA4(int a1, int a2);
int __fastcall sub_E0F6C(int a1, int a2);
int __fastcall sub_E0F7C(int result);
int __fastcall sub_E0F8C(int a1);
int __fastcall sub_E0FC4(int a1, int a2);
int __fastcall sub_E0FD8(int a1, int a2);
int __fastcall sub_E0FE8(int a1, int a2);
int __fastcall sub_E0FF8(int a1, int a2);
int __fastcall sub_E1028(int a1, int a2);
int __fastcall sub_E1058(int a1, int a2, int a3);
int __fastcall sub_E1090(int a1, int a2);
int __fastcall sub_E10A0(int a1, int a2);
int __fastcall sub_E10D4(int a1, int a2, int a3);
int __fastcall sub_E110C(int a1, int a2);
int __fastcall sub_E111C(int a1, int a2);
int __fastcall sub_E112C(int a1, int a2, int a3);
int __fastcall sub_E1158(int a1, int a2);
int __fastcall sub_E1168(int a1, int a2);
int __fastcall sub_E117C(int a1, int a2);
int __fastcall sub_E118C(int a1, int a2);
signed int __fastcall sub_E11A0(int a1, int a2, unsigned int a3, int a4);
int __fastcall sub_E11FC(int a1);
int __fastcall sub_E1218(int a1, int a2);
int __fastcall sub_E1258(int a1, int a2);
int __fastcall sub_E1274(int a1, int a2);
int __fastcall sub_E1290(int a1, int a2);
unsigned int __fastcall sub_E12A0(int a1, int a2);
int __fastcall sub_E12D0(int a1, int a2);
int __fastcall sub_E12E0(int a1, int a2);
int __fastcall sub_E12F4(int a1, int a2);
int __fastcall sub_E1304(int a1, int a2);
signed int __fastcall sub_E1318(int a1, int a2, unsigned int a3, int a4);
signed int __fastcall sub_E1374(int a1, int a2, int a3, int a4, int a5);
int __fastcall sub_E13EC(int a1);
int __fastcall sub_E1408(int a1, int a2);
int __fastcall sub_E1448(int a1, int a2);
int __fastcall sub_E1464(int a1, int a2);
int __fastcall sub_E1480(int a1, int a2);
unsigned int __fastcall sub_E1490(int a1, int a2);
int __fastcall sub_E14C0(int a1, int a2, int a3);
int __fastcall sub_E14CC(int a1, int a2, int a3, int a4);
int __fastcall sub_E1524(int a1, int a2, int a3, int a4, int a5);
unsigned int __fastcall sub_E157C(int a1);
int __fastcall sub_E15CC(int a1, int a2);
int __fastcall sub_E1698(int a1, int a2, int (*a3)(void));
int __fastcall sub_E16D8(int result, int a2, int (*a3)(void));
int __fastcall sub_E1718(int a1, int a2, int (*a3)(void));
int __fastcall sub_E1758(int a1, int a2, int a3);
int __fastcall sub_E176C(__int64 a1, int a2);
int __fastcall sub_E1778(int a1);
int __fastcall sub_E17A0(int a1, int a2);
int __fastcall sub_E17E4(int a1);
int __fastcall sub_E17F8(int a1);
int __fastcall sub_E1808(int a1);
int __fastcall sub_E181C(int result);
int __fastcall sub_E182C(int a1, int a2);
int __fastcall sub_E1850(int a1, int a2);
int __fastcall sub_E18F0(int a1, int a2);
int __fastcall sub_E195C(int a1, int a2, int a3, int a4);
int *__fastcall sub_E23B8(int *result, int **a2, int a3, int **a4, int a5);
int *__fastcall sub_E23FC(int *result, int **a2, int a3, int **a4, int a5);
int *__fastcall sub_E2450(int *result, int **a2, int a3, int **a4, int a5);
int __fastcall sub_E2494(int result, int a2, int a3, int a4, int a5);
int __fastcall sub_E2500(int result, int *a2, int a3, int a4, int a5);
int __fastcall sub_E25BC(int result, int a2, int a3, int a4, int a5);
int *__fastcall sub_E2654(int *result, int **a2, int a3, int **a4, int a5);
int *__fastcall sub_E2698(int *result, int **a2, int a3, int **a4, int a5);
signed int __fastcall sub_E26F8(int *a1, int a2, int a3, int a4, int a5);
int __fastcall sub_E2874(int result, int a2, int a3, int a4, int a5);
signed int __fastcall sub_E28D4(int *a1, signed int *a2, int a3, int a4, int a5);
signed int __fastcall sub_E292C(int *a1, int a2, int a3, int a4, int a5);
signed int __fastcall sub_E2AA8(int *a1, int a2, int a3, int a4, int a5);
signed int __fastcall sub_E2D50(int a1, int a2, int a3, int a4, int a5);
int __fastcall sub_E307C(int a1, int a2);
int __fastcall sub_E3148(int a1, int a2);
int __fastcall sub_E318C(int result);
int __fastcall sub_E31B4(int a1);
unsigned int *__fastcall sub_E31FC(int a1);
int __fastcall sub_E3224(int result);
int __fastcall sub_E3294(int a1, int a2);
int __fastcall sub_E32C0(int a1);
int __fastcall sub_E32C8(int a1);
int __fastcall sub_E32D0(int result);
int __fastcall sub_E32E0(int a1);
signed int __fastcall sub_E3318(int a1, int a2);
int __fastcall sub_E3348(int a1, int a2);
int __fastcall sub_E3390(int a1, int a2);
int __fastcall sub_E33D4(int a1, int a2);
int __fastcall sub_E341C(int a1, int a2);
int __fastcall sub_E3460(int a1, int a2, int a3, int _R3);
int __fastcall sub_E34AC(int a1, int a2);
int __fastcall sub_E34F0(int a1, int a2);
int __fastcall sub_E3534(int a1, int a2, int a3, int _R3);
int __fastcall sub_E3580(int a1, int a2, int a3);
int __fastcall sub_E35CC(int a1, int a2);
int __fastcall sub_E3614(int a1, int a2, int a3, int a4);
int __fastcall sub_E3670(int a1, int a2, int a3, int a4);
int __fastcall sub_E36CC(int a1, int a2);
int __fastcall sub_E370C(int a1, int a2);
int __fastcall sub_E3750(int a1, int a2);
int __fastcall sub_E3798(int a1, int a2);
int __fastcall sub_E37DC(int a1, int a2);
int __fastcall sub_E3820(int a1, int a2, int a3);
int __fastcall sub_E38B8(int a1);
int __fastcall sub_E38D4(int a1, int a2);
int __fastcall sub_E3914(int a1, int a2);
int __fastcall sub_E3930(int a1, int a2);
int __fastcall sub_E394C(int a1, int a2);
unsigned int __fastcall sub_E395C(int a1, int a2);
int __fastcall sub_E398C(int a1, int a2);
int __fastcall sub_E39D0(int a1, int a2);
int __fastcall sub_E3A18(int a1, int a2);
int __fastcall sub_E3A5C(int a1, int a2);
int __fastcall sub_E3AA0(int a1, int a2, int a3, int a4, int a5, int a6);
int __fastcall sub_E3B70(int a1);
int __fastcall sub_E3B8C(int a1, int a2);
int __fastcall sub_E3BCC(int a1, int a2);
int __fastcall sub_E3BE8(int a1, int a2);
int __fastcall sub_E3C04(int a1, int a2);
unsigned int __fastcall sub_E3C14(int a1, int a2);
int __fastcall sub_E3C44(int a1, int a2, int a3);
int __fastcall sub_E3C50(int a1, int a2, int a3, int a4);
int __fastcall sub_E3CE4(int a1, int a2, int a3, int a4, int a5);
unsigned int __fastcall sub_E3D3C(int a1);
int __fastcall sub_E3D8C(int a1, int a2);
int __fastcall sub_E3E58(int a1, int a2, int (*a3)(void));
int __fastcall sub_E3E98(int result, int a2, int (*a3)(void));
int __fastcall sub_E3ED8(int a1, int a2, int (*a3)(void));
int __fastcall sub_E3F18(int a1, int a2, int a3, int a4);
int __fastcall sub_E3FA4(int a1);
int __fastcall sub_E3FF0(int a1, int a2);
int __fastcall sub_E4078(int a1, int a2);
signed int __fastcall sub_E4084(signed int result, int a2);
int __fastcall sub_E40B0(int a1, int a2);
int __fastcall sub_E40D0(int a1, int a2);
int __fastcall sub_E40EC(int a1, int a2);
int __fastcall sub_E4108(int a1, int a2);
int __fastcall sub_E412C(int a1, int a2);
int __fastcall sub_E4164(int a1, int a2);
int __fastcall sub_E419C(int result);
int __fastcall sub_E41AC(int a1, int a2);
int __fastcall sub_E41F0(int a1, int a2);
int __fastcall sub_E4260(int a1, int a2);
int __fastcall sub_E42A8(int a1, int a2);
int __fastcall sub_E42BC(int a1, int a2);
int __fastcall sub_E42E0(int a1, int a2);
int __fastcall sub_E4318(int a1, int a2);
int __fastcall sub_E433C(int a1, int a2);
int __fastcall sub_E4360(int a1, int a2);
int __fastcall sub_E4384(int a1, int a2);
int __fastcall sub_E43A8(int a1, int a2);
int __fastcall sub_E43CC(int a1, int a2);
int __fastcall sub_E43E8(int a1, int a2);
int __fastcall sub_E4420(int a1, int a2);
int __fastcall sub_E4444(int a1, int a2);
int __fastcall sub_E4468(int a1, int a2);
int __fastcall sub_E44A0(int a1, int a2);
int __fastcall sub_E44C4(int a1, int a2);
int __fastcall sub_E44E8(int a1, int a2);
int __fastcall sub_E4520(int a1, int a2);
int __fastcall sub_E4544(int a1, int a2);
int __fastcall sub_E457C(int a1, int a2);
int __fastcall sub_E45A0(int a1, int a2);
int __fastcall sub_E45C4(int a1, int a2);
int __fastcall sub_E45FC(int a1, int a2);
int __fastcall sub_E4618(int a1, int a2);
int __fastcall sub_E463C(int a1, int a2);
int __fastcall sub_E4674(int a1, int a2);
int __fastcall sub_E4698(int a1, int a2);
int __fastcall sub_E46BC(int a1, int a2);
int __fastcall sub_E46F4(int a1, int a2);
int __fastcall sub_E4718(int a1, int a2);
int __fastcall sub_E473C(int a1, int a2);
int __fastcall sub_E4760(int a1, int a2);
int __fastcall sub_E4798(int a1, int a2);
int __fastcall sub_E47D0(int a1, int a2);
int __fastcall sub_E4808(int result);
int __fastcall sub_E4830(int result);
_UNKNOWN *sub_E496C();
_UNKNOWN *sub_E49A0();
_UNKNOWN *sub_E49D4();
_UNKNOWN *sub_E4A08();
_UNKNOWN *sub_E4A3C();
_UNKNOWN *sub_E4A70();
_UNKNOWN *sub_E4AA4();
_UNKNOWN *sub_E4AD8();
int __fastcall sub_E4B0C(char *a1, int a2, int a3);
int __fastcall sub_E4B84(char *); // idb
__int64 __fastcall sub_E4BEC(int a1);
int sub_E4BF4();
signed int __fastcall sub_E4C94(int a1, int a2, int a3, int a4);
int __fastcall sub_E4D18(int a1, int a2, int a3, int a4);
signed int __fastcall sub_E4E0C(int a1, int a2, int a3, int a4);
int __fastcall sub_E4E40(int a1, int a2);
int __fastcall sub_E4E6C(int a1);
int __fastcall sub_E4EE0(int a1);
int __fastcall sub_E4EE4(int a1);
int __fastcall sub_E4F58(int a1);
int __fastcall sub_E4F5C(char *a1);
int __fastcall sub_E5034(int a1, int a2);
signed int __fastcall sub_E5048(int a1, char *a2, int a3, int a4);
signed int __fastcall sub_E50C0(int a1, char *a2, int a3, int a4);
int __fastcall sub_E51D0(char *a1, char *a2);
int __fastcall sub_E52E4(int a1);
signed int __fastcall sub_E52EC(int a1, int a2);
int __fastcall sub_E531C(int a1, int a2);
int __fastcall sub_E5334(int a1, int a2);
int __fastcall sub_E534C(int a1, int a2, int a3, int a4);
int __fastcall sub_E53D4(int a1, int a2, int a3, int a4);
signed int __fastcall sub_E5404(int a1, int a2, int a3, int a4);
signed int __fastcall sub_E5480(int a1, int a2);
int __fastcall sub_E54F0(int a1, int a2, int a3, int a4);
int __fastcall sub_E55D4(int a1, int a2, int a3, int a4);
int __fastcall sub_E5600(int a1, int _R1, int a3, int a4);
void __fastcall sub_E57B8(int a1, int a2);
void sub_E57F0();
signed int __fastcall sub_E5800(int a1, int a2);
signed int __fastcall sub_E5810(int a1, int a2, int a3, int a4);
signed int __fastcall sub_E5EFC(int a1, int *a2, int a3, int a4);
int __fastcall sub_E60B4(int a1, signed int a2);
int __fastcall sub_E6120(int a1);
int sub_E6128();
int __fastcall sub_E6138(signed int a1);
int __fastcall sub_E6148(signed int a1);
int __fastcall sub_E6158(int a1);
signed int __fastcall sub_E61D4(int a1, int a2, int a3);
signed int __fastcall sub_E6260(int a1, int a2, int a3);
int __fastcall sub_E6340(int a1);
signed int __fastcall sub_E63F8(int a1, int a2, int a3);
signed int __fastcall sub_E64EC(int a1, int (__fastcall *a2)(_DWORD, _DWORD, _DWORD), int a3);
signed int __fastcall sub_E65C0(int a1, int a2);
int __fastcall sub_E65D0(int a1);
signed int __fastcall sub_E65FC(int a1, int a2, int a3, int a4);
int __fastcall sub_E666C(int a1);
signed int __fastcall sub_E6BA4(int a1, int a2, int a3);
signed int __fastcall sub_E6BC8(int a1, int a2, int a3, int a4);
int __fastcall nullsub_20(_DWORD); // weak
int __fastcall nullsub_21(_DWORD, _DWORD); // weak
int __fastcall nullsub_22(_DWORD); // weak
int __fastcall sub_E6CB8(int a1, int a2);
int __fastcall sub_E6CE4(int a1, int a2, int a3, int a4);
int __fastcall sub_E7378(int a1);
int __fastcall sub_E73B8(int a1, int a2, int a3, int a4);
int __fastcall sub_E7814(int *a1);
int __fastcall sub_E7838(int a1, int a2);
signed int __fastcall sub_E7858(int a1, const void *a2, size_t a3);
int __fastcall sub_E78D0(int a1);
int __fastcall sub_E7914(int a1, int a2, int a3, int a4);
int __fastcall sub_E7968(int a1);
int __fastcall sub_E7980(int a1, int a2, int a3);
int __fastcall sub_E7998(int a1, int a2, int a3, int a4);
void __cdecl +[FlurryPLCrashSignalHandler initialize](struct FlurryPLCrashSignalHandler_meta *self, SEL);
id __cdecl +[FlurryPLCrashSignalHandler sharedHandler](struct FlurryPLCrashSignalHandler_meta *self, SEL);
void __cdecl +[FlurryPLCrashSignalHandler resetHandlers](struct FlurryPLCrashSignalHandler_meta *self, SEL);
id __cdecl -[FlurryPLCrashSignalHandler init](struct FlurryPLCrashSignalHandler *self, SEL);
char __cdecl -[FlurryPLCrashSignalHandler registerHandlerWithSignal:error:](struct FlurryPLCrashSignalHandler *self, SEL, int, id *);
signed int __fastcall sub_E7C90(int a1, int a2, int a3, int a4, int a5);
char __cdecl -[FlurryPLCrashSignalHandler registerHandlerForSignal:callback:context:error:](struct FlurryPLCrashSignalHandler *self, SEL, int, void **, void *, id *);
void __fastcall plcrash::Flurry::async::async_list<plcrash_signal_handler_action>::nasync_remove_node(OSSpinLock *a1, int a2);
void __fastcall plcrash::Flurry::async::async_list<plcrash_signal_user_callback>::nasync_remove_node(OSSpinLock *a1, int a2);
void __fastcall plcrash::Flurry::async::async_list<plcrash_signal_user_callback>::nasync_append(OSSpinLock *a1, int a2, int a3);
void __fastcall plcrash::Flurry::async::async_list<plcrash_signal_handler_action>::nasync_append(OSSpinLock *a1, int a2, int a3, int a4, int a5);
void __fastcall plcrash::Flurry::async::async_list<plcrash_signal_user_callback>::nasync_prepend(OSSpinLock *a1, int a2, int a3);
int __fastcall plcrash::Flurry::async::async_list<plcrash_signal_handler_action>::~async_list(int a1);
int __fastcall plcrash::Flurry::async::async_list<plcrash_signal_user_callback>::~async_list(int a1);
int sub_E8030();
int __fastcall sub_E8070(int a1, mach_port_name_t a2, int a3, int a4);
int __fastcall sub_E80A8(int a1, int a2, unsigned int a3);
int __fastcall sub_E8170(int a1);
signed int __fastcall sub_E8190(int a1, int a2, int a3);
char *__fastcall sub_E81BC(int a1, unsigned int a2);
signed int __fastcall sub_E81CC(int a1);
kern_return_t __fastcall sub_E81DC(kern_return_t result);
signed int __fastcall sub_E8204(int a1, void *a2, void *a3, void *a4, int a5, char a6);
int __fastcall sub_E84D4(int a1, void *a2);
int sub_E8690();
void __fastcall sub_E8694(int a1);
int __fastcall sub_E8720(int a1, int a2, int a3, int a4, int **a5, const void *a6);
size_t __fastcall sub_E8A58(int a1, int a2, int a3, int a4);
size_t __fastcall sub_E8AEC(int a1, int a2);
size_t __fastcall sub_E8B6C(int a1, int a2, int a3, int a4);
size_t __fastcall sub_E8BB0(int a1, int a2, int a3, int a4, int a5, int a6, char a7, signed int a8);
size_t __fastcall sub_E8C6C(int a1, void *a2, int a3, int a4, int a5, const void *a6, int a7, int a8, char a9);
size_t __fastcall sub_E8E48(int a1, int a2);
int __fastcall sub_E8F10(int a1, int a2, int a3, int a4);
int __fastcall sub_E8FD8(int a1, int **a2);
size_t __fastcall sub_E90D4(int a1, int a2, int a3, int a4, int a5);
size_t __fastcall sub_E9124(int a1, char *a2, unsigned int a3, int a4, int a5, int a6);
size_t __fastcall sub_E91E4(int a1, int a2, int *a3);
size_t __fastcall sub_E9224(int a1, int a2);
unsigned int __fastcall sub_E9294(unsigned int a1);
unsigned int __fastcall sub_E9298(unsigned int a1);
unsigned int __fastcall sub_E929C(int a1, unsigned int a2);
char *__fastcall sub_E92B0(unsigned int a1);
kern_return_t __fastcall sub_E92D0(vm_map_t a1, vm_address_t a2, vm_address_t a3, vm_size_t a4);
mach_port_name_t sub_E92EC();
signed int __fastcall sub_E9310(vm_map_t a1, unsigned int a2, signed int a3, vm_address_t a4, vm_size_t a5);
int __fastcall sub_E9368(int a1, int a2, int a3);
int __fastcall sub_E9394(int a1, int a2, int a3);
void *__fastcall sub_E93A8(void *a1, int a2, size_t a3);
size_t __fastcall sub_E93BC(int a1, void *a2, size_t a3);
int __fastcall sub_E93F8(int result, int a2, int a3, int a4);
size_t __fastcall sub_E940C(int a1, void *a2, size_t a3);
signed int __fastcall sub_E94B8(int a1);
signed int __fastcall sub_E94DC(int a1);
size_t __fastcall sub_E94FC(int a1, unsigned int a2, unsigned int a3, int a4);
int __fastcall sub_E98A0(signed __int64 a1, int a2);
void __cdecl +[FlurryPLCrashReporter initialize](struct FlurryPLCrashReporter_meta *self, SEL);
void __fastcall sub_E99D4(const void *a1);
int32_t __fastcall sub_E9A18(int a1);
id __cdecl +[FlurryPLCrashReporter sharedReporter](struct FlurryPLCrashReporter_meta *self, SEL);
id __cdecl -[FlurryPLCrashReporter init](struct FlurryPLCrashReporter *self, SEL);
id __cdecl -[FlurryPLCrashReporter initWithConfiguration:](struct FlurryPLCrashReporter *self, SEL, id);
char __cdecl -[FlurryPLCrashReporter hasPendingCrashReport](struct FlurryPLCrashReporter *self, SEL);
id __cdecl -[FlurryPLCrashReporter loadPendingCrashReportData](struct FlurryPLCrashReporter *self, SEL);
id __cdecl -[FlurryPLCrashReporter loadPendingCrashReportDataAndReturnError:](struct FlurryPLCrashReporter *self, SEL, id *);
char __cdecl -[FlurryPLCrashReporter purgePendingCrashReport](struct FlurryPLCrashReporter *self, SEL);
char __cdecl -[FlurryPLCrashReporter purgePendingCrashReportAndReturnError:](struct FlurryPLCrashReporter *self, SEL, id *);
char __cdecl -[FlurryPLCrashReporter enableCrashReporter](struct FlurryPLCrashReporter *self, SEL);
char __cdecl -[FlurryPLCrashReporter enableCrashReporterAndReturnError:](struct FlurryPLCrashReporter *self, SEL, id *);
int __fastcall sub_EA000(int a1, int a2, int a3, int a4);
signed int __fastcall sub_EA0A0(int a1, thread_act_t a2, int a3, int a4, __int64 a5);
void __fastcall sub_EA16C(void *a1);
id __cdecl -[FlurryPLCrashReporter generateLiveReportWithThread:](struct FlurryPLCrashReporter *self, SEL, unsigned int);
id __cdecl -[FlurryPLCrashReporter generateLiveReportWithThread:error:](struct FlurryPLCrashReporter *self, SEL, unsigned int, id *);
int __fastcall sub_EA474(const void *a1, int *a2);
id __cdecl -[FlurryPLCrashReporter generateLiveReport](struct FlurryPLCrashReporter *self, SEL);
id __cdecl -[FlurryPLCrashReporter generateLiveReportAndReturnError:](struct FlurryPLCrashReporter *self, SEL, id *);
void __cdecl -[FlurryPLCrashReporter setCrashCallbacks:](struct FlurryPLCrashReporter *self, SEL, struct PLCrashReporterCallbacks *);
id __cdecl -[FlurryPLCrashReporter initWithApplicationIdentifier:appVersion:appMarketingVersion:configuration:](struct FlurryPLCrashReporter *self, SEL, id, id, id, id);
id __cdecl -[FlurryPLCrashReporter initWithBundle:configuration:](struct FlurryPLCrashReporter *self, SEL, id, id);
id __cdecl -[FlurryPLCrashReporter enableMachExceptionServerWithPreviousPortSet:callback:context:error:](struct FlurryPLCrashReporter *self, SEL, id *, void **, void *, id *);
void __cdecl -[FlurryPLCrashReporter dealloc](struct FlurryPLCrashReporter *self, SEL);
int __cdecl -[FlurryPLCrashReporter mapToAsyncSymbolicationStrategy:](struct FlurryPLCrashReporter *self, SEL, unsigned int);
char __cdecl -[FlurryPLCrashReporter populateCrashReportDirectoryAndReturnError:](struct FlurryPLCrashReporter *self, SEL, id *);
id __cdecl -[FlurryPLCrashReporter crashReportDirectory](struct FlurryPLCrashReporter *self, SEL);
id __cdecl -[FlurryPLCrashReporter queuedCrashReportDirectory](struct FlurryPLCrashReporter *self, SEL);
id __cdecl -[FlurryPLCrashReporter crashReportPath](struct FlurryPLCrashReporter *self, SEL);
signed int __fastcall sub_EAB70(int a1, int a2, const void *a3, int **a4);
signed int __fastcall sub_EAC18(const void *a1, int a2);
id __cdecl -[FlurryPLCrashReport initWithData:error:](struct FlurryPLCrashReport *self, SEL, id, id *);
void *__fastcall sub_EAF44(void *result, int a2);
void __cdecl -[FlurryPLCrashReport dealloc](struct FlurryPLCrashReport *self, SEL);
id __cdecl -[FlurryPLCrashReport imageForAddress:](struct FlurryPLCrashReport *self, SEL, uint64_t);
char __cdecl -[FlurryPLCrashReport hasMachineInfo](struct FlurryPLCrashReport *self, SEL);
char __cdecl -[FlurryPLCrashReport hasProcessInfo](struct FlurryPLCrashReport *self, SEL);
char __cdecl -[FlurryPLCrashReport hasExceptionInfo](struct FlurryPLCrashReport *self, SEL);
id __cdecl -[FlurryPLCrashReport systemInfo](struct FlurryPLCrashReport *self, SEL);
id __cdecl -[FlurryPLCrashReport machineInfo](struct FlurryPLCrashReport *self, SEL);
id __cdecl -[FlurryPLCrashReport applicationInfo](struct FlurryPLCrashReport *self, SEL);
id __cdecl -[FlurryPLCrashReport processInfo](struct FlurryPLCrashReport *self, SEL);
id __cdecl -[FlurryPLCrashReport signalInfo](struct FlurryPLCrashReport *self, SEL);
id __cdecl -[FlurryPLCrashReport machExceptionInfo](struct FlurryPLCrashReport *self, SEL);
id __cdecl -[FlurryPLCrashReport threads](struct FlurryPLCrashReport *self, SEL);
id __cdecl -[FlurryPLCrashReport images](struct FlurryPLCrashReport *self, SEL);
id __cdecl -[FlurryPLCrashReport exceptionInfo](struct FlurryPLCrashReport *self, SEL);
struct __CFUUID *__cdecl -[FlurryPLCrashReport uuidRef](struct FlurryPLCrashReport *self, SEL);
struct _Plcrash__CrashReport *__cdecl -[FlurryPLCrashReport decodeCrashData:error:](struct FlurryPLCrashReport *self, SEL, id, id *);
id __cdecl -[FlurryPLCrashReport extractSystemInfo:error:](struct FlurryPLCrashReport *self, SEL, struct _Plcrash__CrashReport__SystemInfo *, id *);
id __cdecl -[FlurryPLCrashReport extractProcessorInfo:error:](struct FlurryPLCrashReport *self, SEL, struct _Plcrash__CrashReport__Processor *, id *);
id __cdecl -[FlurryPLCrashReport extractMachineInfo:error:](struct FlurryPLCrashReport *self, SEL, struct _Plcrash__CrashReport__MachineInfo *, id *);
id __cdecl -[FlurryPLCrashReport extractApplicationInfo:error:](struct FlurryPLCrashReport *self, SEL, struct _Plcrash__CrashReport__ApplicationInfo *, id *);
id __cdecl -[FlurryPLCrashReport extractProcessInfo:error:](struct FlurryPLCrashReport *self, SEL, struct _Plcrash__CrashReport__ProcessInfo *, id *);
id __cdecl -[FlurryPLCrashReport extractSymbolInfo:error:](struct FlurryPLCrashReport *self, SEL, struct _Plcrash__CrashReport__Symbol *, id *);
id __cdecl -[FlurryPLCrashReport extractStackFrameInfo:error:](struct FlurryPLCrashReport *self, SEL, struct _Plcrash__CrashReport__Thread__StackFrame *, id *);
id __cdecl -[FlurryPLCrashReport extractThreadInfo:error:](struct FlurryPLCrashReport *self, SEL, struct _Plcrash__CrashReport *, id *);
id __cdecl -[FlurryPLCrashReport extractImageInfo:error:](struct FlurryPLCrashReport *self, SEL, struct _Plcrash__CrashReport *, id *);
id __cdecl -[FlurryPLCrashReport extractExceptionInfo:error:](struct FlurryPLCrashReport *self, SEL, struct _Plcrash__CrashReport__Exception *, id *);
id __cdecl -[FlurryPLCrashReport extractSignalInfo:error:](struct FlurryPLCrashReport *self, SEL, struct _Plcrash__CrashReport__Signal *, id *);
id __cdecl -[FlurryPLCrashReport extractMachExceptionInfo:error:](struct FlurryPLCrashReport *self, SEL, struct _Plcrash__CrashReport__Signal__MachException *, id *);
int __fastcall sub_EC574(int a1, int a2, unsigned int *a3);
void sub_EC590();
void *__fastcall sub_EC5B8(int a1, size_t a2);
void __fastcall sub_EC5DC(int a1, void *a2);
int __fastcall sub_EC5EC(int a1, int a2, int a3, unsigned int *a4);
int __fastcall sub_ECD0C(int a1, void **a2);
int __fastcall sub_ECE9C(int a1, int a2, int a3, int a4);
int __fastcall sub_ED0F8(unsigned int a1, int a2);
id __cdecl -[FlurryPLCrashReportSystemInfo initWithOperatingSystem:operatingSystemVersion:architecture:timestamp:](struct FlurryPLCrashReportSystemInfo *self, SEL, int, id, int, id);
id __cdecl -[FlurryPLCrashReportSystemInfo initWithOperatingSystem:operatingSystemVersion:operatingSystemBuild:architecture:timestamp:](struct FlurryPLCrashReportSystemInfo *self, SEL, int, id, id, int, id);
void __cdecl -[FlurryPLCrashReportSystemInfo dealloc](struct FlurryPLCrashReportSystemInfo *self, SEL);
int __cdecl -[FlurryPLCrashReportSystemInfo operatingSystem](struct FlurryPLCrashReportSystemInfo *self, SEL);
id __cdecl -[FlurryPLCrashReportSystemInfo operatingSystemVersion](struct FlurryPLCrashReportSystemInfo *self, SEL);
id __cdecl -[FlurryPLCrashReportSystemInfo operatingSystemBuild](struct FlurryPLCrashReportSystemInfo *self, SEL);
int __cdecl -[FlurryPLCrashReportSystemInfo architecture](struct FlurryPLCrashReportSystemInfo *self, SEL);
id __cdecl -[FlurryPLCrashReportSystemInfo timestamp](struct FlurryPLCrashReportSystemInfo *self, SEL);
id __cdecl -[FlurryPLCrashReportApplicationInfo initWithApplicationIdentifier:applicationVersion:applicationMarketingVersion:](struct FlurryPLCrashReportApplicationInfo *self, SEL, id, id, id);
void __cdecl -[FlurryPLCrashReportApplicationInfo dealloc](struct FlurryPLCrashReportApplicationInfo *self, SEL);
id __cdecl -[FlurryPLCrashReportApplicationInfo applicationIdentifier](struct FlurryPLCrashReportApplicationInfo *self, SEL);
id __cdecl -[FlurryPLCrashReportApplicationInfo applicationVersion](struct FlurryPLCrashReportApplicationInfo *self, SEL);
id __cdecl -[FlurryPLCrashReportApplicationInfo applicationMarketingVersion](struct FlurryPLCrashReportApplicationInfo *self, SEL);
id __cdecl -[FlurryPLCrashReportThreadInfo initWithThreadNumber:stackFrames:crashed:registers:](struct FlurryPLCrashReportThreadInfo *self, SEL, int, id, char, id);
void __cdecl -[FlurryPLCrashReportThreadInfo dealloc](struct FlurryPLCrashReportThreadInfo *self, SEL);
int __cdecl -[FlurryPLCrashReportThreadInfo threadNumber](struct FlurryPLCrashReportThreadInfo *self, SEL);
id __cdecl -[FlurryPLCrashReportThreadInfo stackFrames](struct FlurryPLCrashReportThreadInfo *self, SEL);
char __cdecl -[FlurryPLCrashReportThreadInfo crashed](struct FlurryPLCrashReportThreadInfo *self, SEL);
id __cdecl -[FlurryPLCrashReportThreadInfo registers](struct FlurryPLCrashReportThreadInfo *self, SEL);
id __cdecl -[FlurryPLCrashReportBinaryImageInfo initWithCodeType:baseAddress:size:name:uuid:](struct FlurryPLCrashReportBinaryImageInfo *self, SEL, id, uint64_t, uint64_t, id, id);
void __cdecl -[FlurryPLCrashReportBinaryImageInfo dealloc](struct FlurryPLCrashReportBinaryImageInfo *self, SEL);
id __cdecl -[FlurryPLCrashReportBinaryImageInfo codeType](struct FlurryPLCrashReportBinaryImageInfo *self, SEL);
uint64_t __cdecl -[FlurryPLCrashReportBinaryImageInfo imageBaseAddress](struct FlurryPLCrashReportBinaryImageInfo *self, SEL);
uint64_t __cdecl -[FlurryPLCrashReportBinaryImageInfo imageSize](struct FlurryPLCrashReportBinaryImageInfo *self, SEL);
id __cdecl -[FlurryPLCrashReportBinaryImageInfo imageName](struct FlurryPLCrashReportBinaryImageInfo *self, SEL);
char __cdecl -[FlurryPLCrashReportBinaryImageInfo hasImageUUID](struct FlurryPLCrashReportBinaryImageInfo *self, SEL);
id __cdecl -[FlurryPLCrashReportBinaryImageInfo imageUUID](struct FlurryPLCrashReportBinaryImageInfo *self, SEL);
id __cdecl -[FlurryPLCrashReportExceptionInfo initWithExceptionName:reason:](struct FlurryPLCrashReportExceptionInfo *self, SEL, id, id);
id __cdecl -[FlurryPLCrashReportExceptionInfo initWithExceptionName:reason:stackFrames:](struct FlurryPLCrashReportExceptionInfo *self, SEL, id, id, id);
void __cdecl -[FlurryPLCrashReportExceptionInfo dealloc](struct FlurryPLCrashReportExceptionInfo *self, SEL);
id __cdecl -[FlurryPLCrashReportExceptionInfo exceptionName](struct FlurryPLCrashReportExceptionInfo *self, SEL);
id __cdecl -[FlurryPLCrashReportExceptionInfo exceptionReason](struct FlurryPLCrashReportExceptionInfo *self, SEL);
id __cdecl -[FlurryPLCrashReportExceptionInfo stackFrames](struct FlurryPLCrashReportExceptionInfo *self, SEL);
int __fastcall sub_ED9A8(int a1, int a2);
int __fastcall sub_ED9E8(int a1);
id __cdecl -[FlurryPLCrashReportSignalInfo initWithSignalName:code:address:](struct FlurryPLCrashReportSignalInfo *self, SEL, id, id, uint64_t);
void __cdecl -[FlurryPLCrashReportSignalInfo dealloc](struct FlurryPLCrashReportSignalInfo *self, SEL);
id __cdecl -[FlurryPLCrashReportSignalInfo name](struct FlurryPLCrashReportSignalInfo *self, SEL);
id __cdecl -[FlurryPLCrashReportSignalInfo code](struct FlurryPLCrashReportSignalInfo *self, SEL);
uint64_t __cdecl -[FlurryPLCrashReportSignalInfo address](struct FlurryPLCrashReportSignalInfo *self, SEL);
id __cdecl -[FlurryPLCrashReportProcessInfo initWithProcessName:processID:processPath:processStartTime:parentProcessName:parentProcessID:native:](struct FlurryPLCrashReportProcessInfo *self, SEL, id, unsigned int, id, id, id, unsigned int, char);
void __cdecl -[FlurryPLCrashReportProcessInfo dealloc](struct FlurryPLCrashReportProcessInfo *self, SEL);
id __cdecl -[FlurryPLCrashReportProcessInfo processName](struct FlurryPLCrashReportProcessInfo *self, SEL);
unsigned int __cdecl -[FlurryPLCrashReportProcessInfo processID](struct FlurryPLCrashReportProcessInfo *self, SEL);
id __cdecl -[FlurryPLCrashReportProcessInfo processPath](struct FlurryPLCrashReportProcessInfo *self, SEL);
id __cdecl -[FlurryPLCrashReportProcessInfo processStartTime](struct FlurryPLCrashReportProcessInfo *self, SEL);
id __cdecl -[FlurryPLCrashReportProcessInfo parentProcessName](struct FlurryPLCrashReportProcessInfo *self, SEL);
unsigned int __cdecl -[FlurryPLCrashReportProcessInfo parentProcessID](struct FlurryPLCrashReportProcessInfo *self, SEL);
char __cdecl -[FlurryPLCrashReportProcessInfo native](struct FlurryPLCrashReportProcessInfo *self, SEL);
id __cdecl +[FlurryPLCrashReportTextFormatter stringValueForCrashReport:withTextFormat:](struct FlurryPLCrashReportTextFormatter *self, SEL, id, int);
signed int __fastcall sub_EEF78(void *a1, void *a2);
id __cdecl -[FlurryPLCrashReportTextFormatter initWithTextFormat:stringEncoding:](struct FlurryPLCrashReportTextFormatter *self, SEL, int, unsigned int);
id __cdecl -[FlurryPLCrashReportTextFormatter formatReport:error:](struct FlurryPLCrashReportTextFormatter *self, SEL, id, id *);
id __cdecl +[FlurryPLCrashReportTextFormatter formatStackFrame:frameIndex:report:lp64:](struct FlurryPLCrashReportTextFormatter *self, SEL, id, unsigned int, id, char);
kern_return_t __fastcall sub_EF30C(int a1, int a2);
void __fastcall sub_EF354(int a1, unsigned int a2, const char *a3);
int32_t __fastcall sub_EF394(int a1, int a2);
int32_t __fastcall sub_EF3D8(int a1, int a2);
int __fastcall sub_EF3E4(int a1, unsigned int a2);
int __fastcall sub_EF410(int a1, int a2);
int32_t __fastcall plcrash::Flurry::async::async_list<plcrash_async_image *>::set_reading(int a1, int a2);
void __fastcall plcrash::Flurry::async::async_list<plcrash_async_image *>::nasync_append(OSSpinLock *a1, int a2);
void __fastcall plcrash::Flurry::async::async_list<plcrash_async_image *>::nasync_remove_node(OSSpinLock *a1, int a2);
id __cdecl -[FlurryPLCrashReportProcessorInfo initWithTypeEncoding:type:subtype:](struct FlurryPLCrashReportProcessorInfo *self, SEL, int, uint64_t, uint64_t);
int __cdecl -[FlurryPLCrashReportProcessorInfo typeEncoding](struct FlurryPLCrashReportProcessorInfo *self, SEL);
uint64_t __cdecl -[FlurryPLCrashReportProcessorInfo type](struct FlurryPLCrashReportProcessorInfo *self, SEL);
uint64_t __cdecl -[FlurryPLCrashReportProcessorInfo subtype](struct FlurryPLCrashReportProcessorInfo *self, SEL);
id __cdecl -[FlurryPLCrashReportMachineInfo initWithModelName:processorInfo:processorCount:logicalProcessorCount:](struct FlurryPLCrashReportMachineInfo *self, SEL, id, id, unsigned int, unsigned int);
void __cdecl -[FlurryPLCrashReportMachineInfo dealloc](struct FlurryPLCrashReportMachineInfo *self, SEL);
id __cdecl -[FlurryPLCrashReportMachineInfo modelName](struct FlurryPLCrashReportMachineInfo *self, SEL);
id __cdecl -[FlurryPLCrashReportMachineInfo processorInfo](struct FlurryPLCrashReportMachineInfo *self, SEL);
unsigned int __cdecl -[FlurryPLCrashReportMachineInfo processorCount](struct FlurryPLCrashReportMachineInfo *self, SEL);
unsigned int __cdecl -[FlurryPLCrashReportMachineInfo logicalProcessorCount](struct FlurryPLCrashReportMachineInfo *self, SEL);
void *__fastcall sub_EF748(char *a1);
signed int __fastcall sub_EF7CC(const char *a1, void *a2);
signed int __fastcall sub_EF7F0(int a1, unsigned int a2);
void __fastcall sub_EF884(int a1, int a2, int a3, int a4, int a5);
int __fastcall sub_EF8E0(int (__fastcall *a1)(_DWORD, _DWORD), int a2, void *a3);
void *__fastcall sub_EF920(void *result, int a2, int a3, int a4);
void *__fastcall sub_EF9C0(void *a1, int a2, int a3);
void *__fastcall sub_EFA0C(void *a1, int a2, int a3);
signed int __fastcall sub_EFA58(int a1, int a2, const char *a3, unsigned int a4);
BOOL __fastcall sub_EFC64(int a1, unsigned int a2);
int __fastcall sub_EFC7C(int a1);
int __fastcall sub_EFC8C(int a1, unsigned int a2);
int __fastcall sub_EFD2C(int a1, int a2);
unsigned int __fastcall sub_EFD74(int a1, int a2);
signed int __fastcall sub_EFDC4(int a1, int a2, int a3);
signed int __fastcall sub_EFE84(int a1, int a2, int a3, int a4);
signed int __fastcall sub_EFF8C(int a1, int a2);
int __fastcall sub_F0104(int a1, int a2, int a3, int a4);
signed int __fastcall sub_F018C(int a1, int a2, void (__fastcall *a3)(_DWORD, _DWORD, _DWORD), int a4);
int __fastcall sub_F0278(int a1, unsigned int a2, int a3, int a4, int a5, int a6, int a7);
signed int __fastcall sub_F032C(int a1, vm_map_t a2, int a3, unsigned int a4, int a5);
signed int __fastcall sub_F0520(int a1, unsigned int a2, signed int a3, int a4);
int __fastcall sub_F0564(int a1, int a2, signed int a3, int a4);
kern_return_t __fastcall sub_F0584(int a1);
int __fastcall sub_F05B4(int a1);
int __fastcall sub_F05D8(int a1);
int __fastcall sub_F0608(int a1);
signed int __fastcall sub_F0660(int a1, int a2);
signed int __fastcall sub_F06BC(int a1, int a2, void (__fastcall *a3)(_DWORD, _DWORD, _DWORD, _DWORD));
int __fastcall sub_F0CAC(int a1, int a2, int a3, unsigned int a4, int a5);
int __fastcall sub_F0CC0(int result, int a2, int a3, int a4, int a5);
signed int sub_F0CE4();
int __fastcall sub_F0D60(unsigned int a1, int a2, int a3, void (__fastcall *a4)(_DWORD, _DWORD, _DWORD, _DWORD));
signed int __fastcall sub_F0E7C(int a1, int a2);
int __fastcall sub_F0F48(unsigned int a1, int a2, int a3, int a4, void (__fastcall *a5)(_DWORD, _DWORD, _DWORD, _DWORD));
int __fastcall sub_F0FA4(unsigned int a1, int a2, int a3, int a4, vm_address_t a5);
int __fastcall sub_F10D4(unsigned int a1, int a2, int a3, int a4, int a5, void (__fastcall *a6)(_DWORD, _DWORD, _DWORD, _DWORD));
int __fastcall sub_F11AC(int a1, unsigned int a2, int a3);
int __fastcall sub_F1224(unsigned int a1, int a2, int a3, int a4, void (__fastcall *a5)(_DWORD, _DWORD, _DWORD, _DWORD));
int __fastcall sub_F127C(unsigned int a1, int a2, int a3, int a4, vm_address_t a5);
int sub_F13A0();
int __fastcall sub_F13F8(int a1);
int __fastcall sub_F1404(int a1);
signed int __fastcall sub_F1410(int a1, char a2, int a3, int a4, void (__fastcall *a5)(_DWORD, _DWORD, _DWORD), int a6);
signed int __fastcall sub_F14C0(signed int result, int a2, int a3);
signed int __fastcall sub_F1518(int a1, int a2, int a3, unsigned int a4, int a5);
int __fastcall sub_F1628(int a1, unsigned int a2, unsigned int a3);
signed int __fastcall sub_F163C(int a1, int a2);
signed int __fastcall sub_F1654(int a1);
signed int __fastcall sub_F1704(int a1, int a2);
kern_return_t __fastcall sub_F1734(kern_return_t result);
id __cdecl -[FlurryPLCrashReportStackFrameInfo initWithInstructionPointer:symbolInfo:](struct FlurryPLCrashReportStackFrameInfo *self, SEL, uint64_t, id);
void __cdecl -[FlurryPLCrashReportStackFrameInfo dealloc](struct FlurryPLCrashReportStackFrameInfo *self, SEL);
uint64_t __cdecl -[FlurryPLCrashReportStackFrameInfo instructionPointer](struct FlurryPLCrashReportStackFrameInfo *self, SEL);
id __cdecl -[FlurryPLCrashReportStackFrameInfo symbolInfo](struct FlurryPLCrashReportStackFrameInfo *self, SEL);
id __cdecl -[FlurryPLCrashReportRegisterInfo initWithRegisterName:registerValue:](struct FlurryPLCrashReportRegisterInfo *self, SEL, id, uint64_t);
void __cdecl -[FlurryPLCrashReportRegisterInfo dealloc](struct FlurryPLCrashReportRegisterInfo *self, SEL);
id __cdecl -[FlurryPLCrashReportRegisterInfo registerName](struct FlurryPLCrashReportRegisterInfo *self, SEL);
uint64_t __cdecl -[FlurryPLCrashReportRegisterInfo registerValue](struct FlurryPLCrashReportRegisterInfo *self, SEL);
id __cdecl -[FlurryPLCrashReportSymbolInfo initWithSymbolName:startAddress:endAddress:](struct FlurryPLCrashReportSymbolInfo *self, SEL, id, uint64_t, uint64_t);
void __cdecl -[FlurryPLCrashReportSymbolInfo dealloc](struct FlurryPLCrashReportSymbolInfo *self, SEL);
id __cdecl -[FlurryPLCrashReportSymbolInfo symbolName](struct FlurryPLCrashReportSymbolInfo *self, SEL);
uint64_t __cdecl -[FlurryPLCrashReportSymbolInfo startAddress](struct FlurryPLCrashReportSymbolInfo *self, SEL);
uint64_t __cdecl -[FlurryPLCrashReportSymbolInfo endAddress](struct FlurryPLCrashReportSymbolInfo *self, SEL);
id __cdecl -[FlurryPLCrashMachExceptionServer initWithCallBack:context:error:](struct FlurryPLCrashMachExceptionServer *self, SEL, void **, void *, id *);
int __fastcall sub_F1CCC(int a1);
unsigned int __cdecl -[FlurryPLCrashMachExceptionServer serverThread](struct FlurryPLCrashMachExceptionServer *self, SEL);
unsigned int __cdecl -[FlurryPLCrashMachExceptionServer copySendRightForServerAndReturningError:](struct FlurryPLCrashMachExceptionServer *self, SEL, id *);
id __cdecl -[FlurryPLCrashMachExceptionServer exceptionPortWithMask:error:](struct FlurryPLCrashMachExceptionServer *self, SEL, unsigned int, id *);
int __fastcall sub_F2080(int, thread_act_t target_act, int, int, int, int); // idb
void __cdecl -[FlurryPLCrashMachExceptionServer dealloc](struct FlurryPLCrashMachExceptionServer *self, SEL);
mach_msg_return_t __fastcall sub_F2374(int a1, int a2);
int __fastcall sub_F23DC(void *a1, int a2, int a3, int a4, void *a5);
int __fastcall sub_F24FC(int result);
signed int __fastcall sub_F2504(void *a1, int a2);
signed int __fastcall sub_F2544(int a1, thread_act_t a2);
int __fastcall sub_F2580(int a1, int a2);
int __fastcall sub_F25B4(int a1);
int __fastcall sub_F25B8(int a1);
__int64 __fastcall sub_F25BC(int a1, unsigned int a2);
int __fastcall sub_F271C(int result, unsigned int a2, int a3, int a4);
signed int __fastcall sub_F2B58(int a1);
char *__fastcall sub_F2B64(int a1, unsigned int a2);
id __cdecl +[FlurryPLCrashProcessInfo currentProcessInfo](struct FlurryPLCrashProcessInfo_meta *self, SEL);
id __cdecl -[FlurryPLCrashProcessInfo initWithProcessID:](struct FlurryPLCrashProcessInfo *self, SEL, int);
void __cdecl -[FlurryPLCrashProcessInfo dealloc](struct FlurryPLCrashProcessInfo *self, SEL);
int __cdecl -[FlurryPLCrashProcessInfo processID](struct FlurryPLCrashProcessInfo *self, SEL);
id __cdecl -[FlurryPLCrashProcessInfo processName](struct FlurryPLCrashProcessInfo *self, SEL);
int __cdecl -[FlurryPLCrashProcessInfo parentProcessID](struct FlurryPLCrashProcessInfo *self, SEL);
char __cdecl -[FlurryPLCrashProcessInfo isTraced](struct FlurryPLCrashProcessInfo *self, SEL);
struct timeval __cdecl -[FlurryPLCrashProcessInfo startTime](struct FlurryPLCrashProcessInfo *self, SEL);
id __cdecl +[FlurryPLCrashHostInfo currentHostInfo](struct FlurryPLCrashHostInfo_meta *self, SEL);
id __cdecl -[FlurryPLCrashHostInfo init](struct FlurryPLCrashHostInfo *self, SEL);
struct PLCrashHostInfoVersion *__cdecl -[FlurryPLCrashHostInfo darwinVersion](struct PLCrashHostInfoVersion *__return_ptr __struct_ptr retstr, struct FlurryPLCrashHostInfo *self, SEL);
id __cdecl +[FlurryPLCrashMachExceptionPort exceptionPortsForTask:mask:error:](struct FlurryPLCrashMachExceptionPort *self, SEL, unsigned int, unsigned int, id *);
id __cdecl +[FlurryPLCrashMachExceptionPort exceptionPortsForThread:mask:error:](struct FlurryPLCrashMachExceptionPort *self, SEL, unsigned int, unsigned int, id *);
id __cdecl -[FlurryPLCrashMachExceptionPort initWithServerPort:mask:behavior:flavor:](struct FlurryPLCrashMachExceptionPort *self, SEL, unsigned int, unsigned int, int, int);
void __cdecl -[FlurryPLCrashMachExceptionPort dealloc](struct FlurryPLCrashMachExceptionPort *self, SEL);
char __cdecl -[FlurryPLCrashMachExceptionPort registerForTask:previousPortSet:error:](struct FlurryPLCrashMachExceptionPort *self, SEL, unsigned int, id *, id *);
char __cdecl -[FlurryPLCrashMachExceptionPort registerForThread:previousPortSet:error:](struct FlurryPLCrashMachExceptionPort *self, SEL, unsigned int, id *, id *);
unsigned int __cdecl -[FlurryPLCrashMachExceptionPort server_port](struct FlurryPLCrashMachExceptionPort *self, SEL);
unsigned int __cdecl -[FlurryPLCrashMachExceptionPort mask](struct FlurryPLCrashMachExceptionPort *self, SEL);
int __cdecl -[FlurryPLCrashMachExceptionPort behavior](struct FlurryPLCrashMachExceptionPort *self, SEL);
int __cdecl -[FlurryPLCrashMachExceptionPort flavor](struct FlurryPLCrashMachExceptionPort *self, SEL);
id __cdecl -[FlurryPLCrashMachExceptionPortSet initWithSet:](struct FlurryPLCrashMachExceptionPortSet *self, SEL, id);
id __cdecl -[FlurryPLCrashMachExceptionPortSet initWithAsyncSafeRepresentation:](struct FlurryPLCrashMachExceptionPortSet *self, SEL, struct plcrash_mach_exception_port_set);
void __cdecl -[FlurryPLCrashMachExceptionPortSet dealloc](struct FlurryPLCrashMachExceptionPortSet *self, SEL);
unsigned int __cdecl -[FlurryPLCrashMachExceptionPortSet countByEnumeratingWithState:objects:count:](struct FlurryPLCrashMachExceptionPortSet *self, SEL, struct anon_struct_34 *, id *, unsigned int);
struct plcrash_mach_exception_port_set *__cdecl -[FlurryPLCrashMachExceptionPortSet asyncSafeRepresentation](struct plcrash_mach_exception_port_set *__return_ptr __struct_ptr retstr, struct FlurryPLCrashMachExceptionPortSet *self, SEL);
id __cdecl -[FlurryPLCrashMachExceptionPortSet set](struct FlurryPLCrashMachExceptionPortSet *self, SEL);
signed int __fastcall sub_F392C(int a1, int a2, unsigned int a3, int a4, int a5);
id __cdecl +[FlurryPLCrashReporterConfig defaultConfiguration](struct FlurryPLCrashReporterConfig_meta *self, SEL);
id __cdecl -[FlurryPLCrashReporterConfig init](struct FlurryPLCrashReporterConfig *self, SEL);
id __cdecl -[FlurryPLCrashReporterConfig initWithSignalHandlerType:symbolicationStrategy:](struct FlurryPLCrashReporterConfig *self, SEL, unsigned int, unsigned int);
unsigned int __cdecl -[FlurryPLCrashReporterConfig signalHandlerType](struct FlurryPLCrashReporterConfig *self, SEL);
unsigned int __cdecl -[FlurryPLCrashReporterConfig symbolicationStrategy](struct FlurryPLCrashReporterConfig *self, SEL);
id __cdecl -[FlurryPLCrashReportMachExceptionInfo initWithType:codes:](struct FlurryPLCrashReportMachExceptionInfo *self, SEL, uint64_t, id);
void __cdecl -[FlurryPLCrashReportMachExceptionInfo dealloc](struct FlurryPLCrashReportMachExceptionInfo *self, SEL);
uint64_t __cdecl -[FlurryPLCrashReportMachExceptionInfo type](struct FlurryPLCrashReportMachExceptionInfo *self, SEL);
id __cdecl -[FlurryPLCrashReportMachExceptionInfo codes](struct FlurryPLCrashReportMachExceptionInfo *self, SEL);
id __cdecl +[UIColor(HexColorAddition) colorWithHexString:](struct UIColor *self, SEL, id);
id __cdecl +[UIColor(HexColorAddition) colorWithHexString:alpha:](struct UIColor *self, SEL, id, float);
id __cdecl +[UIColor(HexColorAddition) colorWith8BitRed:green:blue:](struct UIColor *self, SEL, int, int, int);
id __cdecl +[UIColor(HexColorAddition) colorWith8BitRed:green:blue:alpha:](struct UIColor *self, SEL, int, int, int, float);
id __cdecl +[UIColor(HexColorAddition) hexStringTransformFromThreeCharacters:](struct UIColor *self, SEL, id);
unsigned int __cdecl +[UIColor(HexColorAddition) hexValueToUnsigned:](struct UIColor *self, SEL, id);
int __cdecl +[INTULocationManager locationServicesState](struct INTULocationManager_meta *self, SEL);
id __cdecl +[INTULocationManager sharedInstance](struct INTULocationManager_meta *self, SEL);
void __fastcall sub_F4048(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[INTULocationManager init](struct INTULocationManager *self, SEL);
int __cdecl -[INTULocationManager requestLocationWithDesiredAccuracy:timeout:block:](struct INTULocationManager *self, SEL, int, double, id);
int __cdecl -[INTULocationManager requestLocationWithDesiredAccuracy:timeout:delayUntilAuthorized:block:](struct INTULocationManager *self, SEL, int, double, char, id);
int __cdecl -[INTULocationManager subscribeToLocationUpdatesWithBlock:](struct INTULocationManager *self, SEL, id);
int __cdecl -[INTULocationManager subscribeToLocationUpdatesWithDesiredAccuracy:block:](struct INTULocationManager *self, SEL, int, id);
int __cdecl -[INTULocationManager subscribeToSignificantLocationChangesWithBlock:](struct INTULocationManager *self, SEL, id);
void __cdecl -[INTULocationManager forceCompleteLocationRequest:](struct INTULocationManager *self, SEL, int);
void __cdecl -[INTULocationManager cancelLocationRequest:](struct INTULocationManager *self, SEL, int);
void __cdecl -[INTULocationManager addLocationRequest:](struct INTULocationManager *self, SEL, id);
void __cdecl -[INTULocationManager removeLocationRequest:](struct INTULocationManager *self, SEL, id);
id __cdecl -[INTULocationManager currentLocation](struct INTULocationManager *self, SEL);
void __cdecl -[INTULocationManager requestAuthorizationIfNeeded](struct INTULocationManager *self, SEL);
void __cdecl -[INTULocationManager updateWithMaximumDesiredAccuracy:](struct INTULocationManager *self, SEL, int);
void __cdecl -[INTULocationManager startMonitoringSignificantLocationChangesIfNeeded](struct INTULocationManager *self, SEL);
void __cdecl -[INTULocationManager startUpdatingLocationIfNeeded](struct INTULocationManager *self, SEL);
void __cdecl -[INTULocationManager stopMonitoringSignificantLocationChangesIfPossible](struct INTULocationManager *self, SEL);
void __cdecl -[INTULocationManager stopUpdatingLocationIfPossible](struct INTULocationManager *self, SEL);
void __cdecl -[INTULocationManager processLocationRequests](struct INTULocationManager *self, SEL);
void __cdecl -[INTULocationManager completeAllLocationRequests](struct INTULocationManager *self, SEL);
void __cdecl -[INTULocationManager completeLocationRequest:](struct INTULocationManager *self, SEL, id);
void __fastcall sub_F55C4(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_F5614(int a1, int a2);
void __fastcall sub_F562C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[INTULocationManager processRecurringRequest:](struct INTULocationManager *self, SEL, id);
id __cdecl -[INTULocationManager activeLocationRequestsWithType:](struct INTULocationManager *self, SEL, int);
signed int __fastcall sub_F57A0(int a1, void *a2);
id __cdecl -[INTULocationManager activeLocationRequestsExcludingType:](struct INTULocationManager *self, SEL, int);
signed int __fastcall sub_F5884(int a1, void *a2);
int __cdecl -[INTULocationManager statusForLocationRequest:](struct INTULocationManager *self, SEL, id);
int __cdecl -[INTULocationManager achievedAccuracyForLocation:](struct INTULocationManager *self, SEL, id);
void __cdecl -[INTULocationManager locationRequestDidTimeout:](struct INTULocationManager *self, SEL, id);
void __cdecl -[INTULocationManager locationManager:didUpdateLocations:](struct INTULocationManager *self, SEL, id, id);
void __cdecl -[INTULocationManager locationManager:didFailWithError:](struct INTULocationManager *self, SEL, id, id);
void __cdecl -[INTULocationManager locationManager:didChangeAuthorizationStatus:](struct INTULocationManager *self, SEL, id, int);
id __cdecl -[INTULocationManager locationManager](struct INTULocationManager *self, SEL);
void __cdecl -[INTULocationManager setLocationManager:](struct INTULocationManager *self, SEL, id);
void __cdecl -[INTULocationManager setCurrentLocation:](struct INTULocationManager *self, SEL, id);
char __cdecl -[INTULocationManager isMonitoringSignificantLocationChanges](struct INTULocationManager *self, SEL);
void __cdecl -[INTULocationManager setIsMonitoringSignificantLocationChanges:](struct INTULocationManager *self, SEL, char);
char __cdecl -[INTULocationManager isUpdatingLocation](struct INTULocationManager *self, SEL);
void __cdecl -[INTULocationManager setIsUpdatingLocation:](struct INTULocationManager *self, SEL, char);
char __cdecl -[INTULocationManager updateFailed](struct INTULocationManager *self, SEL);
void __cdecl -[INTULocationManager setUpdateFailed:](struct INTULocationManager *self, SEL, char);
id __cdecl -[INTULocationManager locationRequests](struct INTULocationManager *self, SEL);
void __cdecl -[INTULocationManager setLocationRequests:](struct INTULocationManager *self, SEL, id);
void __cdecl -[INTULocationManager .cxx_destruct](struct INTULocationManager *self, SEL);
int __cdecl +[INTULocationRequest getUniqueRequestID](struct INTULocationRequest_meta *self, SEL);
id __cdecl -[INTULocationRequest init](struct INTULocationRequest *self, SEL);
id __cdecl -[INTULocationRequest initWithType:](struct INTULocationRequest *self, SEL, int);
double __cdecl -[INTULocationRequest updateTimeStaleThreshold](struct INTULocationRequest *self, SEL);
double __cdecl -[INTULocationRequest horizontalAccuracyThreshold](struct INTULocationRequest *self, SEL);
void __cdecl -[INTULocationRequest complete](struct INTULocationRequest *self, SEL);
void __cdecl -[INTULocationRequest forceTimeout](struct INTULocationRequest *self, SEL);
void __cdecl -[INTULocationRequest cancel](struct INTULocationRequest *self, SEL);
void __cdecl -[INTULocationRequest startTimeoutTimerIfNeeded](struct INTULocationRequest *self, SEL);
char __cdecl -[INTULocationRequest isRecurring](struct INTULocationRequest *self, SEL);
double __cdecl -[INTULocationRequest timeAlive](struct INTULocationRequest *self, SEL);
char __cdecl -[INTULocationRequest hasTimedOut](struct INTULocationRequest *self, SEL);
void __cdecl -[INTULocationRequest timeoutTimerFired:](struct INTULocationRequest *self, SEL, id);
char __cdecl -[INTULocationRequest isEqual:](struct INTULocationRequest *self, SEL, id);
unsigned int __cdecl -[INTULocationRequest hash](struct INTULocationRequest *self, SEL);
void __cdecl -[INTULocationRequest dealloc](struct INTULocationRequest *self, SEL);
id __cdecl -[INTULocationRequest delegate](struct INTULocationRequest *self, SEL);
void __cdecl -[INTULocationRequest setDelegate:](struct INTULocationRequest *self, SEL, id);
int __cdecl -[INTULocationRequest requestID](struct INTULocationRequest *self, SEL);
int __cdecl -[INTULocationRequest type](struct INTULocationRequest *self, SEL);
int __cdecl -[INTULocationRequest desiredAccuracy](struct INTULocationRequest *self, SEL);
void __cdecl -[INTULocationRequest setDesiredAccuracy:](struct INTULocationRequest *self, SEL, int);
double __cdecl -[INTULocationRequest timeout](struct INTULocationRequest *self, SEL);
void __cdecl -[INTULocationRequest setTimeout:](struct INTULocationRequest *self, SEL, double);
void __cdecl -[INTULocationRequest setHasTimedOut:](struct INTULocationRequest *self, SEL, char);
id __cdecl -[INTULocationRequest block](struct INTULocationRequest *self, SEL);
void __cdecl -[INTULocationRequest setBlock:](struct INTULocationRequest *self, SEL, id);
id __cdecl -[INTULocationRequest requestStartTime](struct INTULocationRequest *self, SEL);
void __cdecl -[INTULocationRequest setRequestStartTime:](struct INTULocationRequest *self, SEL, id);
id __cdecl -[INTULocationRequest timeoutTimer](struct INTULocationRequest *self, SEL);
void __cdecl -[INTULocationRequest setTimeoutTimer:](struct INTULocationRequest *self, SEL, id);
void __cdecl -[INTULocationRequest .cxx_destruct](struct INTULocationRequest *self, SEL);
id __cdecl +[MBProgressHUD showHUDAddedTo:animated:](struct MBProgressHUD *self, SEL, id, char);
char __cdecl +[MBProgressHUD hideHUDForView:animated:](struct MBProgressHUD *self, SEL, id, char);
unsigned int __cdecl +[MBProgressHUD hideAllHUDsForView:animated:](struct MBProgressHUD *self, SEL, id, char);
id __cdecl +[MBProgressHUD HUDForView:](struct MBProgressHUD *self, SEL, id);
id __cdecl +[MBProgressHUD allHUDsForView:](struct MBProgressHUD *self, SEL, id);
id __cdecl -[MBProgressHUD initWithFrame:](struct MBProgressHUD *self, SEL, struct CGRect);
id __cdecl -[MBProgressHUD initWithView:](struct MBProgressHUD *self, SEL, id);
id __cdecl -[MBProgressHUD initWithWindow:](struct MBProgressHUD *self, SEL, id);
void __cdecl -[MBProgressHUD dealloc](struct MBProgressHUD *self, SEL);
void __cdecl -[MBProgressHUD show:](struct MBProgressHUD *self, SEL, char);
void __cdecl -[MBProgressHUD hide:](struct MBProgressHUD *self, SEL, char);
void __cdecl -[MBProgressHUD hide:afterDelay:](struct MBProgressHUD *self, SEL, char, double);
void __cdecl -[MBProgressHUD hideDelayed:](struct MBProgressHUD *self, SEL, id);
void __cdecl -[MBProgressHUD handleGraceTimer:](struct MBProgressHUD *self, SEL, id);
void __cdecl -[MBProgressHUD handleMinShowTimer:](struct MBProgressHUD *self, SEL, id);
void __cdecl -[MBProgressHUD didMoveToSuperview](struct MBProgressHUD *self, SEL);
void __cdecl -[MBProgressHUD showUsingAnimation:](struct MBProgressHUD *self, SEL, char);
void __cdecl -[MBProgressHUD hideUsingAnimation:](struct MBProgressHUD *self, SEL, char);
void __cdecl -[MBProgressHUD animationFinished:finished:context:](struct MBProgressHUD *self, SEL, id, char, void *);
void __cdecl -[MBProgressHUD done](struct MBProgressHUD *self, SEL);
void __cdecl -[MBProgressHUD showWhileExecuting:onTarget:withObject:animated:](struct MBProgressHUD *self, SEL, SEL, id, id, char);
void __cdecl -[MBProgressHUD showAnimated:whileExecutingBlock:](struct MBProgressHUD *self, SEL, char, id);
void __cdecl -[MBProgressHUD showAnimated:whileExecutingBlock:completionBlock:](struct MBProgressHUD *self, SEL, char, id, id);
void __cdecl -[MBProgressHUD showAnimated:whileExecutingBlock:onQueue:](struct MBProgressHUD *self, SEL, char, id, struct dispatch_queue_s *);
void __cdecl -[MBProgressHUD showAnimated:whileExecutingBlock:onQueue:completionBlock:](struct MBProgressHUD *self, SEL, char, id, struct dispatch_queue_s *, id);
void __fastcall sub_F7C08(int a1);
void *__fastcall sub_F7C6C(int a1, int a2, int a3);
int __fastcall sub_F7C80(int a1, int a2);
void __fastcall sub_F7C88(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_F7C90(int a1, int a2);
void __fastcall sub_F7CAC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[MBProgressHUD launchExecution](struct MBProgressHUD *self, SEL);
void __cdecl -[MBProgressHUD cleanUp](struct MBProgressHUD *self, SEL);
void __cdecl -[MBProgressHUD setupLabels](struct MBProgressHUD *self, SEL);
void __cdecl -[MBProgressHUD updateIndicators](struct MBProgressHUD *self, SEL);
void __cdecl -[MBProgressHUD layoutSubviews](struct MBProgressHUD *self, SEL);
void __cdecl -[MBProgressHUD drawRect:](struct MBProgressHUD *self, SEL, struct CGRect);
void __cdecl -[MBProgressHUD registerForKVO](struct MBProgressHUD *self, SEL);
void __cdecl -[MBProgressHUD unregisterFromKVO](struct MBProgressHUD *self, SEL);
id __cdecl -[MBProgressHUD observableKeypaths](struct MBProgressHUD *self, SEL);
void __cdecl -[MBProgressHUD observeValueForKeyPath:ofObject:change:context:](struct MBProgressHUD *self, SEL, id, id, id, void *);
void __cdecl -[MBProgressHUD updateUIForKeypath:](struct MBProgressHUD *self, SEL, id);
void __cdecl -[MBProgressHUD registerForNotifications](struct MBProgressHUD *self, SEL);
void __cdecl -[MBProgressHUD unregisterFromNotifications](struct MBProgressHUD *self, SEL);
void __cdecl -[MBProgressHUD statusBarOrientationDidChange:](struct MBProgressHUD *self, SEL, id);
void __cdecl -[MBProgressHUD updateForCurrentOrientationAnimated:](struct MBProgressHUD *self, SEL, char);
int sub_F985C(); // weak
int __cdecl -[MBProgressHUD animationType](struct MBProgressHUD *self, SEL);
void __cdecl -[MBProgressHUD setAnimationType:](struct MBProgressHUD *self, SEL, int);
id __cdecl -[MBProgressHUD delegate](struct MBProgressHUD *self, SEL);
void __cdecl -[MBProgressHUD setDelegate:](struct MBProgressHUD *self, SEL, id);
float __cdecl -[MBProgressHUD opacity](struct MBProgressHUD *self, SEL);
void __cdecl -[MBProgressHUD setOpacity:](struct MBProgressHUD *self, SEL, float);
id __cdecl -[MBProgressHUD color](struct MBProgressHUD *self, SEL);
void __cdecl -[MBProgressHUD setColor:](struct MBProgressHUD *self, SEL, id);
id __cdecl -[MBProgressHUD labelFont](struct MBProgressHUD *self, SEL);
void __cdecl -[MBProgressHUD setLabelFont:](struct MBProgressHUD *self, SEL, id);
id __cdecl -[MBProgressHUD labelColor](struct MBProgressHUD *self, SEL);
void __cdecl -[MBProgressHUD setLabelColor:](struct MBProgressHUD *self, SEL, id);
id __cdecl -[MBProgressHUD detailsLabelFont](struct MBProgressHUD *self, SEL);
void __cdecl -[MBProgressHUD setDetailsLabelFont:](struct MBProgressHUD *self, SEL, id);
id __cdecl -[MBProgressHUD detailsLabelColor](struct MBProgressHUD *self, SEL);
void __cdecl -[MBProgressHUD setDetailsLabelColor:](struct MBProgressHUD *self, SEL, id);
id __cdecl -[MBProgressHUD indicator](struct MBProgressHUD *self, SEL);
void __cdecl -[MBProgressHUD setIndicator:](struct MBProgressHUD *self, SEL, id);
float __cdecl -[MBProgressHUD xOffset](struct MBProgressHUD *self, SEL);
void __cdecl -[MBProgressHUD setXOffset:](struct MBProgressHUD *self, SEL, float);
float __cdecl -[MBProgressHUD yOffset](struct MBProgressHUD *self, SEL);
void __cdecl -[MBProgressHUD setYOffset:](struct MBProgressHUD *self, SEL, float);
struct CGSize __cdecl -[MBProgressHUD minSize](struct MBProgressHUD *self, SEL);
void __cdecl -[MBProgressHUD setMinSize:](struct MBProgressHUD *self, SEL, struct CGSize);
char __cdecl -[MBProgressHUD isSquare](struct MBProgressHUD *self, SEL);
void __cdecl -[MBProgressHUD setSquare:](struct MBProgressHUD *self, SEL, char);
float __cdecl -[MBProgressHUD margin](struct MBProgressHUD *self, SEL);
void __cdecl -[MBProgressHUD setMargin:](struct MBProgressHUD *self, SEL, float);
char __cdecl -[MBProgressHUD dimBackground](struct MBProgressHUD *self, SEL);
void __cdecl -[MBProgressHUD setDimBackground:](struct MBProgressHUD *self, SEL, char);
float __cdecl -[MBProgressHUD graceTime](struct MBProgressHUD *self, SEL);
void __cdecl -[MBProgressHUD setGraceTime:](struct MBProgressHUD *self, SEL, float);
float __cdecl -[MBProgressHUD minShowTime](struct MBProgressHUD *self, SEL);
void __cdecl -[MBProgressHUD setMinShowTime:](struct MBProgressHUD *self, SEL, float);
id __cdecl -[MBProgressHUD graceTimer](struct MBProgressHUD *self, SEL);
void __cdecl -[MBProgressHUD setGraceTimer:](struct MBProgressHUD *self, SEL, id);
id __cdecl -[MBProgressHUD minShowTimer](struct MBProgressHUD *self, SEL);
void __cdecl -[MBProgressHUD setMinShowTimer:](struct MBProgressHUD *self, SEL, id);
char __cdecl -[MBProgressHUD taskInProgress](struct MBProgressHUD *self, SEL);
void __cdecl -[MBProgressHUD setTaskInProgress:](struct MBProgressHUD *self, SEL, char);
char __cdecl -[MBProgressHUD removeFromSuperViewOnHide](struct MBProgressHUD *self, SEL);
void __cdecl -[MBProgressHUD setRemoveFromSuperViewOnHide:](struct MBProgressHUD *self, SEL, char);
id __cdecl -[MBProgressHUD customView](struct MBProgressHUD *self, SEL);
void __cdecl -[MBProgressHUD setCustomView:](struct MBProgressHUD *self, SEL, id);
id __cdecl -[MBProgressHUD showStarted](struct MBProgressHUD *self, SEL);
void __cdecl -[MBProgressHUD setShowStarted:](struct MBProgressHUD *self, SEL, id);
int __cdecl -[MBProgressHUD mode](struct MBProgressHUD *self, SEL);
void __cdecl -[MBProgressHUD setMode:](struct MBProgressHUD *self, SEL, int);
id __cdecl -[MBProgressHUD labelText](struct MBProgressHUD *self, SEL);
void __cdecl -[MBProgressHUD setLabelText:](struct MBProgressHUD *self, SEL, id);
id __cdecl -[MBProgressHUD detailsLabelText](struct MBProgressHUD *self, SEL);
void __cdecl -[MBProgressHUD setDetailsLabelText:](struct MBProgressHUD *self, SEL, id);
float __cdecl -[MBProgressHUD progress](struct MBProgressHUD *self, SEL);
void __cdecl -[MBProgressHUD setProgress:](struct MBProgressHUD *self, SEL, float);
struct CGSize __cdecl -[MBProgressHUD size](struct MBProgressHUD *self, SEL);
id __cdecl -[MBProgressHUD activityIndicatorColor](struct MBProgressHUD *self, SEL);
void __cdecl -[MBProgressHUD setActivityIndicatorColor:](struct MBProgressHUD *self, SEL, id);
id __cdecl -[MBProgressHUD completionBlock](struct MBProgressHUD *self, SEL);
void __cdecl -[MBProgressHUD setCompletionBlock:](struct MBProgressHUD *self, SEL, id);
float __cdecl -[MBProgressHUD cornerRadius](struct MBProgressHUD *self, SEL);
void __cdecl -[MBProgressHUD setCornerRadius:](struct MBProgressHUD *self, SEL, float);
void __cdecl -[MBProgressHUD .cxx_destruct](struct MBProgressHUD *self, SEL);
id __cdecl -[MBRoundProgressView init](struct MBRoundProgressView *self, SEL);
id __cdecl -[MBRoundProgressView initWithFrame:](struct MBRoundProgressView *self, SEL, struct CGRect);
void __cdecl -[MBRoundProgressView dealloc](struct MBRoundProgressView *self, SEL);
void __cdecl -[MBRoundProgressView drawRect:](struct MBRoundProgressView *self, SEL, struct CGRect);
void __cdecl -[MBRoundProgressView registerForKVO](struct MBRoundProgressView *self, SEL);
void __cdecl -[MBRoundProgressView unregisterFromKVO](struct MBRoundProgressView *self, SEL);
id __cdecl -[MBRoundProgressView observableKeypaths](struct MBRoundProgressView *self, SEL);
void __cdecl -[MBRoundProgressView observeValueForKeyPath:ofObject:change:context:](struct MBRoundProgressView *self, SEL, id, id, id, void *);
float __cdecl -[MBRoundProgressView progress](struct MBRoundProgressView *self, SEL);
void __cdecl -[MBRoundProgressView setProgress:](struct MBRoundProgressView *self, SEL, float);
id __cdecl -[MBRoundProgressView progressTintColor](struct MBRoundProgressView *self, SEL);
void __cdecl -[MBRoundProgressView setProgressTintColor:](struct MBRoundProgressView *self, SEL, id);
id __cdecl -[MBRoundProgressView backgroundTintColor](struct MBRoundProgressView *self, SEL);
void __cdecl -[MBRoundProgressView setBackgroundTintColor:](struct MBRoundProgressView *self, SEL, id);
char __cdecl -[MBRoundProgressView isAnnular](struct MBRoundProgressView *self, SEL);
void __cdecl -[MBRoundProgressView setAnnular:](struct MBRoundProgressView *self, SEL, char);
void __cdecl -[MBRoundProgressView .cxx_destruct](struct MBRoundProgressView *self, SEL);
id __cdecl -[MBBarProgressView init](struct MBBarProgressView *self, SEL);
id __cdecl -[MBBarProgressView initWithFrame:](struct MBBarProgressView *self, SEL, struct CGRect);
void __cdecl -[MBBarProgressView dealloc](struct MBBarProgressView *self, SEL);
void __cdecl -[MBBarProgressView drawRect:](struct MBBarProgressView *self, SEL, struct CGRect);
void __cdecl -[MBBarProgressView registerForKVO](struct MBBarProgressView *self, SEL);
void __cdecl -[MBBarProgressView unregisterFromKVO](struct MBBarProgressView *self, SEL);
id __cdecl -[MBBarProgressView observableKeypaths](struct MBBarProgressView *self, SEL);
void __cdecl -[MBBarProgressView observeValueForKeyPath:ofObject:change:context:](struct MBBarProgressView *self, SEL, id, id, id, void *);
float __cdecl -[MBBarProgressView progress](struct MBBarProgressView *self, SEL);
void __cdecl -[MBBarProgressView setProgress:](struct MBBarProgressView *self, SEL, float);
id __cdecl -[MBBarProgressView lineColor](struct MBBarProgressView *self, SEL);
void __cdecl -[MBBarProgressView setLineColor:](struct MBBarProgressView *self, SEL, id);
id __cdecl -[MBBarProgressView progressRemainingColor](struct MBBarProgressView *self, SEL);
void __cdecl -[MBBarProgressView setProgressRemainingColor:](struct MBBarProgressView *self, SEL, id);
id __cdecl -[MBBarProgressView progressColor](struct MBBarProgressView *self, SEL);
void __cdecl -[MBBarProgressView setProgressColor:](struct MBBarProgressView *self, SEL, id);
void __cdecl -[MBBarProgressView .cxx_destruct](struct MBBarProgressView *self, SEL);
id __cdecl -[NJKWebViewProgress init](struct NJKWebViewProgress *self, SEL);
void __cdecl -[NJKWebViewProgress startProgress](struct NJKWebViewProgress *self, SEL);
void __cdecl -[NJKWebViewProgress incrementProgress](struct NJKWebViewProgress *self, SEL);
void __cdecl -[NJKWebViewProgress completeProgress](struct NJKWebViewProgress *self, SEL);
void __cdecl -[NJKWebViewProgress setProgress:](struct NJKWebViewProgress *self, SEL, float);
void __cdecl -[NJKWebViewProgress reset](struct NJKWebViewProgress *self, SEL);
char __cdecl -[NJKWebViewProgress webView:shouldStartLoadWithRequest:navigationType:](struct NJKWebViewProgress *self, SEL, id, id, int);
void __cdecl -[NJKWebViewProgress webViewDidStartLoad:](struct NJKWebViewProgress *self, SEL, id);
void __cdecl -[NJKWebViewProgress webViewDidFinishLoad:](struct NJKWebViewProgress *self, SEL, id);
void __cdecl -[NJKWebViewProgress webView:didFailLoadWithError:](struct NJKWebViewProgress *self, SEL, id, id);
char __cdecl -[NJKWebViewProgress respondsToSelector:](struct NJKWebViewProgress *self, SEL, SEL);
id __cdecl -[NJKWebViewProgress methodSignatureForSelector:](struct NJKWebViewProgress *self, SEL, SEL);
void __cdecl -[NJKWebViewProgress forwardInvocation:](struct NJKWebViewProgress *self, SEL, id);
id __cdecl -[NJKWebViewProgress progressDelegate](struct NJKWebViewProgress *self, SEL);
void __cdecl -[NJKWebViewProgress setProgressDelegate:](struct NJKWebViewProgress *self, SEL, id);
id __cdecl -[NJKWebViewProgress webViewProxyDelegate](struct NJKWebViewProgress *self, SEL);
void __cdecl -[NJKWebViewProgress setWebViewProxyDelegate:](struct NJKWebViewProgress *self, SEL, id);
id __cdecl -[NJKWebViewProgress progressBlock](struct NJKWebViewProgress *self, SEL);
void __cdecl -[NJKWebViewProgress setProgressBlock:](struct NJKWebViewProgress *self, SEL, id);
float __cdecl -[NJKWebViewProgress progress](struct NJKWebViewProgress *self, SEL);
void __cdecl -[NJKWebViewProgress .cxx_destruct](struct NJKWebViewProgress *self, SEL);
id __cdecl -[NJKWebViewProgressView initWithFrame:](struct NJKWebViewProgressView *self, SEL, struct CGRect);
void __cdecl -[NJKWebViewProgressView awakeFromNib](struct NJKWebViewProgressView *self, SEL);
void __cdecl -[NJKWebViewProgressView configureViews](struct NJKWebViewProgressView *self, SEL);
void __cdecl -[NJKWebViewProgressView setProgress:](struct NJKWebViewProgressView *self, SEL, float);
void __cdecl -[NJKWebViewProgressView setProgress:animated:](struct NJKWebViewProgressView *self, SEL, float, char);
void *__fastcall sub_FC3D8(int a1);
int __fastcall sub_FC47C(int a1, int a2);
void __fastcall sub_FC484(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void *__fastcall sub_FC48C(int a1);
int __fastcall sub_FC4B0(int a1, int a2);
void __fastcall sub_FC4B8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void *__fastcall sub_FC4C0(int a1);
int __fastcall sub_FC538(int a1, int a2);
void __fastcall sub_FC540(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void *__fastcall sub_FC548(int a1);
int __fastcall sub_FC56C(int a1, int a2);
void __fastcall sub_FC574(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
float __cdecl -[NJKWebViewProgressView progress](struct NJKWebViewProgressView *self, SEL);
id __cdecl -[NJKWebViewProgressView progressBarView](struct NJKWebViewProgressView *self, SEL);
void __cdecl -[NJKWebViewProgressView setProgressBarView:](struct NJKWebViewProgressView *self, SEL, id);
double __cdecl -[NJKWebViewProgressView barAnimationDuration](struct NJKWebViewProgressView *self, SEL);
void __cdecl -[NJKWebViewProgressView setBarAnimationDuration:](struct NJKWebViewProgressView *self, SEL, double);
double __cdecl -[NJKWebViewProgressView fadeAnimationDuration](struct NJKWebViewProgressView *self, SEL);
void __cdecl -[NJKWebViewProgressView setFadeAnimationDuration:](struct NJKWebViewProgressView *self, SEL, double);
double __cdecl -[NJKWebViewProgressView fadeOutDelay](struct NJKWebViewProgressView *self, SEL);
void __cdecl -[NJKWebViewProgressView setFadeOutDelay:](struct NJKWebViewProgressView *self, SEL, double);
void __cdecl -[NJKWebViewProgressView .cxx_destruct](struct NJKWebViewProgressView *self, SEL);
void __cdecl +[OpenShare connectAlipay](struct OpenShare_meta *self, SEL);
char __cdecl +[OpenShare isAlipayInstalled](struct OpenShare_meta *self, SEL);
void __cdecl +[OpenShare AliPay:Success:Fail:](struct OpenShare *self, SEL, id, id, id);
char __cdecl +[OpenShare Alipay_handleOpenURL](struct OpenShare_meta *self, SEL);
void __cdecl +[OpenShare connectQQWithAppId:](struct OpenShare *self, SEL, id);
char __cdecl +[OpenShare isQQInstalled](struct OpenShare_meta *self, SEL);
void __cdecl +[OpenShare shareToQQFriends:Success:Fail:](struct OpenShare *self, SEL, id, id, id);
void __cdecl +[OpenShare shareToQQZone:Success:Fail:](struct OpenShare *self, SEL, id, id, id);
void __cdecl +[OpenShare shareToQQFavorites:Success:Fail:](struct OpenShare *self, SEL, id, id, id);
void __cdecl +[OpenShare shareToQQDataline:Success:Fail:](struct OpenShare *self, SEL, id, id, id);
void __cdecl +[OpenShare QQAuth:Success:Fail:](struct OpenShare *self, SEL, id, id, id);
id __cdecl +[OpenShare genShareUrl:to:](struct OpenShare *self, SEL, id, int);
char __cdecl +[OpenShare QQ_handleOpenURL](struct OpenShare_meta *self, SEL);
void __cdecl +[OpenShare chatWithQQNumber:](struct OpenShare *self, SEL, id);
void __cdecl +[OpenShare chatInQQGroup:](struct OpenShare *self, SEL, id);
void __cdecl +[OpenShare connectRenrenWithAppId:AndAppKey:](struct OpenShare *self, SEL, id, id);
char __cdecl +[OpenShare isRenrenInstalled](struct OpenShare_meta *self, SEL);
void __cdecl +[OpenShare shareToRenrenSession:Success:Fail:](struct OpenShare *self, SEL, id, id, id);
void __cdecl +[OpenShare shareToRenrenTimeline:Success:Fail:](struct OpenShare *self, SEL, id, id, id);
id __cdecl +[OpenShare genRenrenShareUrl:to:](struct OpenShare *self, SEL, id, int);
char __cdecl +[OpenShare Renren_handleOpenURL](struct OpenShare_meta *self, SEL);
void __cdecl +[OpenShare connectWeiboWithAppKey:](struct OpenShare *self, SEL, id);
char __cdecl +[OpenShare isWeiboInstalled](struct OpenShare_meta *self, SEL);
void __cdecl +[OpenShare shareToWeibo:Success:Fail:](struct OpenShare *self, SEL, id, id, id);
void __cdecl +[OpenShare WeiboAuth:redirectURI:Success:Fail:](struct OpenShare *self, SEL, id, id, id, id);
char __cdecl +[OpenShare Weibo_handleOpenURL](struct OpenShare_meta *self, SEL);
void __cdecl +[OpenShare connectWeixinWithAppId:](struct OpenShare *self, SEL, id);
char __cdecl +[OpenShare isWeixinInstalled](struct OpenShare_meta *self, SEL);
void __cdecl +[OpenShare shareToWeixinSession:Success:Fail:](struct OpenShare *self, SEL, id, id, id);
void __cdecl +[OpenShare shareToWeixinTimeline:Success:Fail:](struct OpenShare *self, SEL, id, id, id);
void __cdecl +[OpenShare shareToWeixinFavorite:Success:Fail:](struct OpenShare *self, SEL, id, id, id);
id __cdecl +[OpenShare genWeixinShareUrl:to:](struct OpenShare *self, SEL, id, int);
void __cdecl +[OpenShare WeixinAuth:Success:Fail:](struct OpenShare *self, SEL, id, id, id);
void __cdecl +[OpenShare WeixinPay:Success:Fail:](struct OpenShare *self, SEL, id, id, id);
char __cdecl +[OpenShare Weixin_handleOpenURL](struct OpenShare_meta *self, SEL);
void __cdecl +[OpenShare set:Keys:](struct OpenShare *self, SEL, id, id);
id __cdecl +[OpenShare keyFor:](struct OpenShare *self, SEL, id);
void __cdecl +[OpenShare openURL:](struct OpenShare *self, SEL, id);
char __cdecl +[OpenShare canOpen:](struct OpenShare *self, SEL, id);
char __cdecl +[OpenShare handleOpenURL:](struct OpenShare *self, SEL, id);
id __cdecl +[OpenShare shareSuccessCallback](struct OpenShare_meta *self, SEL);
id __cdecl +[OpenShare shareFailCallback](struct OpenShare_meta *self, SEL);
void __cdecl +[OpenShare setShareSuccessCallback:](struct OpenShare *self, SEL, id);
void __cdecl +[OpenShare setShareFailCallback:](struct OpenShare *self, SEL, id);
void __cdecl +[OpenShare setPaySuccessCallback:](struct OpenShare *self, SEL, id);
void __cdecl +[OpenShare setPayFailCallback:](struct OpenShare *self, SEL, id);
id __cdecl +[OpenShare paySuccessCallback](struct OpenShare_meta *self, SEL);
id __cdecl +[OpenShare payFailCallback](struct OpenShare_meta *self, SEL);
id __cdecl +[OpenShare returnedURL](struct OpenShare_meta *self, SEL);
id __cdecl +[OpenShare returnedData](struct OpenShare_meta *self, SEL);
void __cdecl +[OpenShare setReturnedData:](struct OpenShare *self, SEL, id);
void __cdecl +[OpenShare setMessage:](struct OpenShare *self, SEL, id);
id __cdecl +[OpenShare message](struct OpenShare_meta *self, SEL);
id __cdecl +[OpenShare authSuccessCallback](struct OpenShare_meta *self, SEL);
id __cdecl +[OpenShare authFailCallback](struct OpenShare_meta *self, SEL);
char __cdecl +[OpenShare beginShare:Message:Success:Fail:](struct OpenShare *self, SEL, id, id, id, id);
char __cdecl +[OpenShare beginAuth:Success:Fail:](struct OpenShare *self, SEL, id, id, id);
id __cdecl +[OpenShare parseUrl:](struct OpenShare *self, SEL, id);
id __cdecl +[OpenShare base64Encode:](struct OpenShare *self, SEL, id);
id __cdecl +[OpenShare base64Decode:](struct OpenShare *self, SEL, id);
id __cdecl +[OpenShare CFBundleDisplayName](struct OpenShare_meta *self, SEL);
id __cdecl +[OpenShare CFBundleIdentifier](struct OpenShare_meta *self, SEL);
void __cdecl +[OpenShare setGeneralPasteboard:Value:encoding:](struct OpenShare *self, SEL, id, id, unsigned int);
id __cdecl +[OpenShare generalPasteboardData:encoding:](struct OpenShare *self, SEL, id, unsigned int);
id __cdecl +[OpenShare base64AndUrlEncode:](struct OpenShare *self, SEL, id);
id __cdecl +[OpenShare urlDecode:](struct OpenShare *self, SEL, id);
id __cdecl +[OpenShare screenshot](struct OpenShare_meta *self, SEL);
id __cdecl +[OpenShare dataWithImage:](struct OpenShare *self, SEL, id);
id __cdecl +[OpenShare dataWithImage:scale:](struct OpenShare *self, SEL, id, struct CGSize);
id __cdecl -[OpenShare scaleImage:toSize:](struct OpenShare *self, SEL, id, struct CGSize);
char __cdecl -[OSMessage isEmpty:AndNotEmpty:](struct OSMessage *self, SEL, id, id);
id __cdecl -[OSMessage title](struct OSMessage *self, SEL);
void __cdecl -[OSMessage setTitle:](struct OSMessage *self, SEL, id);
id __cdecl -[OSMessage desc](struct OSMessage *self, SEL);
void __cdecl -[OSMessage setDesc:](struct OSMessage *self, SEL, id);
id __cdecl -[OSMessage link](struct OSMessage *self, SEL);
void __cdecl -[OSMessage setLink:](struct OSMessage *self, SEL, id);
id __cdecl -[OSMessage image](struct OSMessage *self, SEL);
void __cdecl -[OSMessage setImage:](struct OSMessage *self, SEL, id);
id __cdecl -[OSMessage thumbnail](struct OSMessage *self, SEL);
void __cdecl -[OSMessage setThumbnail:](struct OSMessage *self, SEL, id);
unsigned int __cdecl -[OSMessage multimediaType](struct OSMessage *self, SEL);
void __cdecl -[OSMessage setMultimediaType:](struct OSMessage *self, SEL, unsigned int);
id __cdecl -[OSMessage extInfo](struct OSMessage *self, SEL);
void __cdecl -[OSMessage setExtInfo:](struct OSMessage *self, SEL, id);
id __cdecl -[OSMessage mediaDataUrl](struct OSMessage *self, SEL);
void __cdecl -[OSMessage setMediaDataUrl:](struct OSMessage *self, SEL, id);
id __cdecl -[OSMessage fileExt](struct OSMessage *self, SEL);
void __cdecl -[OSMessage setFileExt:](struct OSMessage *self, SEL, id);
id __cdecl -[OSMessage file](struct OSMessage *self, SEL);
void __cdecl -[OSMessage setFile:](struct OSMessage *self, SEL, id);
void __cdecl -[OSMessage .cxx_destruct](struct OSMessage *self, SEL);
id __cdecl +[PDTSimpleCalendarViewCell formatDate:withCalendar:](struct PDTSimpleCalendarViewCell *self, SEL, id, id);
id __cdecl +[PDTSimpleCalendarViewCell formatAccessibilityDate:withCalendar:](struct PDTSimpleCalendarViewCell *self, SEL, id, id);
id __cdecl +[PDTSimpleCalendarViewCell dateFormatter](struct PDTSimpleCalendarViewCell_meta *self, SEL);
void *sub_103D84();
id __cdecl +[PDTSimpleCalendarViewCell chineseCalendar](struct PDTSimpleCalendarViewCell_meta *self, SEL);
void __fastcall sub_103E2C(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl +[PDTSimpleCalendarViewCell accessibilityDateFormatter](struct PDTSimpleCalendarViewCell_meta *self, SEL);
void *sub_103F08();
id __cdecl +[PDTSimpleCalendarViewCell stringFromDate:withDateFormatter:withCalendar:](struct PDTSimpleCalendarViewCell *self, SEL, id, id, id);
id __cdecl +[PDTSimpleCalendarViewCell cacheMonthSymbolsForCalendar:](struct PDTSimpleCalendarViewCell *self, SEL, id);
void __fastcall sub_104150(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl +[PDTSimpleCalendarViewCell lunarDaySymbols](struct PDTSimpleCalendarViewCell_meta *self, SEL);
void __fastcall sub_1041DC(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl +[PDTSimpleCalendarViewCell cacheWeekdaySymbolsForCalendar:](struct PDTSimpleCalendarViewCell *self, SEL, id);
void __fastcall sub_1044D0(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl +[PDTSimpleCalendarViewCell addHolidays:](struct PDTSimpleCalendarViewCell *self, SEL, id);
id __cdecl +[PDTSimpleCalendarViewCell holidays](struct PDTSimpleCalendarViewCell_meta *self, SEL);
void __fastcall sub_1045AC(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[PDTSimpleCalendarViewCell initWithFrame:](struct PDTSimpleCalendarViewCell *self, SEL, struct CGRect);
id __cdecl -[PDTSimpleCalendarViewCell holidayLabel](struct PDTSimpleCalendarViewCell *self, SEL);
void __cdecl -[PDTSimpleCalendarViewCell setDate:calendar:](struct PDTSimpleCalendarViewCell *self, SEL, id, id);
void __cdecl -[PDTSimpleCalendarViewCell setIsToday:](struct PDTSimpleCalendarViewCell *self, SEL, char);
void __cdecl -[PDTSimpleCalendarViewCell setSelected:](struct PDTSimpleCalendarViewCell *self, SEL, char);
void __cdecl -[PDTSimpleCalendarViewCell setCircleColor:selected:](struct PDTSimpleCalendarViewCell *self, SEL, char, char);
void __cdecl -[PDTSimpleCalendarViewCell refreshCellColors](struct PDTSimpleCalendarViewCell *self, SEL);
void __cdecl -[PDTSimpleCalendarViewCell prepareForReuse](struct PDTSimpleCalendarViewCell *self, SEL);
void __cdecl +[PDTSimpleCalendarViewCell initialize](struct PDTSimpleCalendarViewCell_meta *self, SEL);
id __cdecl -[PDTSimpleCalendarViewCell subTextDefaultColor](struct PDTSimpleCalendarViewCell *self, SEL);
id __cdecl -[PDTSimpleCalendarViewCell circleDefaultColor](struct PDTSimpleCalendarViewCell *self, SEL);
id __cdecl -[PDTSimpleCalendarViewCell circleTodayColor](struct PDTSimpleCalendarViewCell *self, SEL);
id __cdecl -[PDTSimpleCalendarViewCell circleSelectedColor](struct PDTSimpleCalendarViewCell *self, SEL);
id __cdecl -[PDTSimpleCalendarViewCell textDefaultColor](struct PDTSimpleCalendarViewCell *self, SEL);
id __cdecl -[PDTSimpleCalendarViewCell textTodayColor](struct PDTSimpleCalendarViewCell *self, SEL);
id __cdecl -[PDTSimpleCalendarViewCell textSelectedColor](struct PDTSimpleCalendarViewCell *self, SEL);
id __cdecl -[PDTSimpleCalendarViewCell textDisabledColor](struct PDTSimpleCalendarViewCell *self, SEL);
id __cdecl -[PDTSimpleCalendarViewCell separatorColor](struct PDTSimpleCalendarViewCell *self, SEL);
id __cdecl -[PDTSimpleCalendarViewCell textDefaultFont](struct PDTSimpleCalendarViewCell *self, SEL);
char __cdecl -[PDTSimpleCalendarViewCell enabled](struct PDTSimpleCalendarViewCell *self, SEL);
void __cdecl -[PDTSimpleCalendarViewCell setEnabled:](struct PDTSimpleCalendarViewCell *self, SEL, char);
id __cdecl -[PDTSimpleCalendarViewCell delegate](struct PDTSimpleCalendarViewCell *self, SEL);
void __cdecl -[PDTSimpleCalendarViewCell setDelegate:](struct PDTSimpleCalendarViewCell *self, SEL, id);
char __cdecl -[PDTSimpleCalendarViewCell isToday](struct PDTSimpleCalendarViewCell *self, SEL);
char __cdecl -[PDTSimpleCalendarViewCell isWeekend](struct PDTSimpleCalendarViewCell *self, SEL);
void __cdecl -[PDTSimpleCalendarViewCell setIsWeekend:](struct PDTSimpleCalendarViewCell *self, SEL, char);
void __cdecl -[PDTSimpleCalendarViewCell setCircleDefaultColor:](struct PDTSimpleCalendarViewCell *self, SEL, id);
void __cdecl -[PDTSimpleCalendarViewCell setCircleTodayColor:](struct PDTSimpleCalendarViewCell *self, SEL, id);
void __cdecl -[PDTSimpleCalendarViewCell setCircleSelectedColor:](struct PDTSimpleCalendarViewCell *self, SEL, id);
void __cdecl -[PDTSimpleCalendarViewCell setTextDefaultColor:](struct PDTSimpleCalendarViewCell *self, SEL, id);
void __cdecl -[PDTSimpleCalendarViewCell setTextTodayColor:](struct PDTSimpleCalendarViewCell *self, SEL, id);
void __cdecl -[PDTSimpleCalendarViewCell setTextSelectedColor:](struct PDTSimpleCalendarViewCell *self, SEL, id);
void __cdecl -[PDTSimpleCalendarViewCell setTextDisabledColor:](struct PDTSimpleCalendarViewCell *self, SEL, id);
void __cdecl -[PDTSimpleCalendarViewCell setTextDefaultFont:](struct PDTSimpleCalendarViewCell *self, SEL, id);
void __cdecl -[PDTSimpleCalendarViewCell setSeparatorColor:](struct PDTSimpleCalendarViewCell *self, SEL, id);
void __cdecl -[PDTSimpleCalendarViewCell setSubTextDefaultColor:](struct PDTSimpleCalendarViewCell *self, SEL, id);
id __cdecl -[PDTSimpleCalendarViewCell textView](struct PDTSimpleCalendarViewCell *self, SEL);
void __cdecl -[PDTSimpleCalendarViewCell setTextView:](struct PDTSimpleCalendarViewCell *self, SEL, id);
id __cdecl -[PDTSimpleCalendarViewCell dayLabel](struct PDTSimpleCalendarViewCell *self, SEL);
void __cdecl -[PDTSimpleCalendarViewCell setDayLabel:](struct PDTSimpleCalendarViewCell *self, SEL, id);
id __cdecl -[PDTSimpleCalendarViewCell localDayLabel](struct PDTSimpleCalendarViewCell *self, SEL);
void __cdecl -[PDTSimpleCalendarViewCell setLocalDayLabel:](struct PDTSimpleCalendarViewCell *self, SEL, id);
id __cdecl -[PDTSimpleCalendarViewCell localDayBorder](struct PDTSimpleCalendarViewCell *self, SEL);
void __cdecl -[PDTSimpleCalendarViewCell setLocalDayBorder:](struct PDTSimpleCalendarViewCell *self, SEL, id);
id __cdecl -[PDTSimpleCalendarViewCell date](struct PDTSimpleCalendarViewCell *self, SEL);
void __cdecl -[PDTSimpleCalendarViewCell setDate:](struct PDTSimpleCalendarViewCell *self, SEL, id);
id __cdecl -[PDTSimpleCalendarViewCell separatorView](struct PDTSimpleCalendarViewCell *self, SEL);
void __cdecl -[PDTSimpleCalendarViewCell setSeparatorView:](struct PDTSimpleCalendarViewCell *self, SEL, id);
char __cdecl -[PDTSimpleCalendarViewCell isHoliday](struct PDTSimpleCalendarViewCell *self, SEL);
void __cdecl -[PDTSimpleCalendarViewCell setIsHoliday:](struct PDTSimpleCalendarViewCell *self, SEL, char);
void __cdecl -[PDTSimpleCalendarViewCell setHolidayLabel:](struct PDTSimpleCalendarViewCell *self, SEL, id);
void __cdecl -[PDTSimpleCalendarViewCell .cxx_destruct](struct PDTSimpleCalendarViewCell *self, SEL);
id __cdecl -[PDTSimpleCalendarViewController initWithNibName:bundle:](struct PDTSimpleCalendarViewController *self, SEL, id, id);
id __cdecl -[PDTSimpleCalendarViewController initWithCoder:](struct PDTSimpleCalendarViewController *self, SEL, id);
id __cdecl -[PDTSimpleCalendarViewController initWithCollectionViewLayout:](struct PDTSimpleCalendarViewController *self, SEL, id);
void __cdecl -[PDTSimpleCalendarViewController simpleCalendarCommonInit](struct PDTSimpleCalendarViewController *self, SEL);
id __cdecl -[PDTSimpleCalendarViewController headerDateFormatter](struct PDTSimpleCalendarViewController *self, SEL);
id __cdecl -[PDTSimpleCalendarViewController overlayDateFormatter](struct PDTSimpleCalendarViewController *self, SEL);
id __cdecl -[PDTSimpleCalendarViewController weekView](struct PDTSimpleCalendarViewController *self, SEL);
id __cdecl -[PDTSimpleCalendarViewController calendar](struct PDTSimpleCalendarViewController *self, SEL);
void __cdecl -[PDTSimpleCalendarViewController setCalendar:](struct PDTSimpleCalendarViewController *self, SEL, id);
id __cdecl -[PDTSimpleCalendarViewController firstDate](struct PDTSimpleCalendarViewController *self, SEL);
void __cdecl -[PDTSimpleCalendarViewController setFirstDate:](struct PDTSimpleCalendarViewController *self, SEL, id);
id __cdecl -[PDTSimpleCalendarViewController firstDateMonth](struct PDTSimpleCalendarViewController *self, SEL);
id __cdecl -[PDTSimpleCalendarViewController lastDate](struct PDTSimpleCalendarViewController *self, SEL);
void __cdecl -[PDTSimpleCalendarViewController setLastDate:](struct PDTSimpleCalendarViewController *self, SEL, id);
id __cdecl -[PDTSimpleCalendarViewController lastDateMonth](struct PDTSimpleCalendarViewController *self, SEL);
void __cdecl -[PDTSimpleCalendarViewController setSelectedDate:](struct PDTSimpleCalendarViewController *self, SEL, id);
void __cdecl -[PDTSimpleCalendarViewController setSelectedDate:animated:](struct PDTSimpleCalendarViewController *self, SEL, id, char);
void __cdecl -[PDTSimpleCalendarViewController scrollToSelectedDate:](struct PDTSimpleCalendarViewController *self, SEL, char);
void __cdecl -[PDTSimpleCalendarViewController scrollToDate:animated:](struct PDTSimpleCalendarViewController *self, SEL, id, char);
void __cdecl -[PDTSimpleCalendarViewController setOverlayTextColor:](struct PDTSimpleCalendarViewController *self, SEL, id);
void __cdecl -[PDTSimpleCalendarViewController viewDidLoad](struct PDTSimpleCalendarViewController *self, SEL);
void __cdecl -[PDTSimpleCalendarViewController loadView](struct PDTSimpleCalendarViewController *self, SEL);
void __cdecl -[PDTSimpleCalendarViewController viewWillAppear:](struct PDTSimpleCalendarViewController *self, SEL, char);
void __cdecl -[PDTSimpleCalendarViewController viewWillDisappear:](struct PDTSimpleCalendarViewController *self, SEL, char);
void __cdecl -[PDTSimpleCalendarViewController willRotateToInterfaceOrientation:duration:](struct PDTSimpleCalendarViewController *self, SEL, int, double);
int __cdecl -[PDTSimpleCalendarViewController numberOfSectionsInCollectionView:](struct PDTSimpleCalendarViewController *self, SEL, id);
int __cdecl -[PDTSimpleCalendarViewController collectionView:numberOfItemsInSection:](struct PDTSimpleCalendarViewController *self, SEL, id, int);
id __cdecl -[PDTSimpleCalendarViewController collectionView:cellForItemAtIndexPath:](struct PDTSimpleCalendarViewController *self, SEL, id, id);
char __cdecl -[PDTSimpleCalendarViewController collectionView:shouldSelectItemAtIndexPath:](struct PDTSimpleCalendarViewController *self, SEL, id, id);
void __cdecl -[PDTSimpleCalendarViewController collectionView:didSelectItemAtIndexPath:](struct PDTSimpleCalendarViewController *self, SEL, id, id);
id __cdecl -[PDTSimpleCalendarViewController collectionView:viewForSupplementaryElementOfKind:atIndexPath:](struct PDTSimpleCalendarViewController *self, SEL, id, id, id);
struct CGSize __cdecl -[PDTSimpleCalendarViewController collectionView:layout:sizeForItemAtIndexPath:](struct PDTSimpleCalendarViewController *self, SEL, id, id, id);
void __cdecl -[PDTSimpleCalendarViewController scrollViewWillEndDragging:withVelocity:targetContentOffset:](struct PDTSimpleCalendarViewController *self, SEL, id, struct CGPoint, struct CGPoint *);
void __fastcall sub_1092E0(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_109320(int a1, int a2);
void __fastcall sub_109328(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[PDTSimpleCalendarViewController scrollViewDidEndDragging:willDecelerate:](struct PDTSimpleCalendarViewController *self, SEL, id, char);
void __cdecl -[PDTSimpleCalendarViewController scrollViewDidScroll:](struct PDTSimpleCalendarViewController *self, SEL, id);
void __cdecl -[PDTSimpleCalendarViewController hideOverlayView](struct PDTSimpleCalendarViewController *self, SEL);
void __fastcall sub_109530(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_10956C(int a1, int a2);
void __fastcall sub_109574(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[PDTSimpleCalendarViewController clampDate:toComponents:](struct PDTSimpleCalendarViewController *self, SEL, id, unsigned int);
char __cdecl -[PDTSimpleCalendarViewController isTodayDate:](struct PDTSimpleCalendarViewController *self, SEL, id);
char __cdecl -[PDTSimpleCalendarViewController isSelectedDate:](struct PDTSimpleCalendarViewController *self, SEL, id);
char __cdecl -[PDTSimpleCalendarViewController isEnabledDate:](struct PDTSimpleCalendarViewController *self, SEL, id);
char __cdecl -[PDTSimpleCalendarViewController clampAndCompareDate:withReferenceDate:](struct PDTSimpleCalendarViewController *self, SEL, id, id);
id __cdecl -[PDTSimpleCalendarViewController firstOfMonthForSection:](struct PDTSimpleCalendarViewController *self, SEL, int);
int __cdecl -[PDTSimpleCalendarViewController sectionForDate:](struct PDTSimpleCalendarViewController *self, SEL, id);
id __cdecl -[PDTSimpleCalendarViewController dateForCellAtIndexPath:](struct PDTSimpleCalendarViewController *self, SEL, id);
id __cdecl -[PDTSimpleCalendarViewController indexPathForCellAtDate:](struct PDTSimpleCalendarViewController *self, SEL, id);
id __cdecl -[PDTSimpleCalendarViewController cellForItemAtDate:](struct PDTSimpleCalendarViewController *self, SEL, id);
id __cdecl -[PDTSimpleCalendarViewController cacheDateForSection](struct PDTSimpleCalendarViewController *self, SEL);
id __cdecl -[PDTSimpleCalendarViewController cacheDateForCell](struct PDTSimpleCalendarViewController *self, SEL);
id __cdecl -[PDTSimpleCalendarViewController selectedDate](struct PDTSimpleCalendarViewController *self, SEL);
id __cdecl -[PDTSimpleCalendarViewController backgroundColor](struct PDTSimpleCalendarViewController *self, SEL);
void __cdecl -[PDTSimpleCalendarViewController setBackgroundColor:](struct PDTSimpleCalendarViewController *self, SEL, id);
id __cdecl -[PDTSimpleCalendarViewController overlayTextColor](struct PDTSimpleCalendarViewController *self, SEL);
id __cdecl -[PDTSimpleCalendarViewController delegate](struct PDTSimpleCalendarViewController *self, SEL);
void __cdecl -[PDTSimpleCalendarViewController setDelegate:](struct PDTSimpleCalendarViewController *self, SEL, id);
id __cdecl -[PDTSimpleCalendarViewController overlayView](struct PDTSimpleCalendarViewController *self, SEL);
void __cdecl -[PDTSimpleCalendarViewController setOverlayView:](struct PDTSimpleCalendarViewController *self, SEL, id);
void __cdecl -[PDTSimpleCalendarViewController setHeaderDateFormatter:](struct PDTSimpleCalendarViewController *self, SEL, id);
void __cdecl -[PDTSimpleCalendarViewController setOverlayDateFormatter:](struct PDTSimpleCalendarViewController *self, SEL, id);
unsigned int __cdecl -[PDTSimpleCalendarViewController daysPerWeek](struct PDTSimpleCalendarViewController *self, SEL);
void __cdecl -[PDTSimpleCalendarViewController setDaysPerWeek:](struct PDTSimpleCalendarViewController *self, SEL, unsigned int);
void __cdecl -[PDTSimpleCalendarViewController .cxx_destruct](struct PDTSimpleCalendarViewController *self, SEL);
id __cdecl -[PDTSimpleCalendarViewFlowLayout init](struct PDTSimpleCalendarViewFlowLayout *self, SEL);
id __cdecl -[PDTSimpleCalendarViewHeader initWithFrame:](struct PDTSimpleCalendarViewHeader *self, SEL, struct CGRect);
id __cdecl -[PDTSimpleCalendarViewHeader textColor](struct PDTSimpleCalendarViewHeader *self, SEL);
id __cdecl -[PDTSimpleCalendarViewHeader textFont](struct PDTSimpleCalendarViewHeader *self, SEL);
id __cdecl -[PDTSimpleCalendarViewHeader separatorColor](struct PDTSimpleCalendarViewHeader *self, SEL);
id __cdecl -[PDTSimpleCalendarViewHeader titleLabel](struct PDTSimpleCalendarViewHeader *self, SEL);
void __cdecl -[PDTSimpleCalendarViewHeader setTitleLabel:](struct PDTSimpleCalendarViewHeader *self, SEL, id);
void __cdecl -[PDTSimpleCalendarViewHeader setTextColor:](struct PDTSimpleCalendarViewHeader *self, SEL, id);
void __cdecl -[PDTSimpleCalendarViewHeader setTextFont:](struct PDTSimpleCalendarViewHeader *self, SEL, id);
void __cdecl -[PDTSimpleCalendarViewHeader setSeparatorColor:](struct PDTSimpleCalendarViewHeader *self, SEL, id);
void __cdecl -[PDTSimpleCalendarViewHeader .cxx_destruct](struct PDTSimpleCalendarViewHeader *self, SEL);
id __cdecl -[PDTSimpleWeekView initWithFrame:calendar:](struct PDTSimpleWeekView *self, SEL, struct CGRect, id);
id __cdecl -[PDTSimpleWeekView defaultBackgroundColor](struct PDTSimpleWeekView *self, SEL);
id __cdecl -[PDTSimpleWeekView calendar](struct PDTSimpleWeekView *self, SEL);
id __cdecl -[PDTSimpleWeekView veryShortStandaloneWeekdaySymbols](struct PDTSimpleWeekView *self, SEL);
void __cdecl -[PDTSimpleWeekView setVeryShortStandaloneWeekdaySymbols:](struct PDTSimpleWeekView *self, SEL, id);
id __cdecl -[PDTSimpleWeekView shortStandaloneWeekdaySymbols](struct PDTSimpleWeekView *self, SEL);
void __cdecl -[PDTSimpleWeekView setShortStandaloneWeekdaySymbols:](struct PDTSimpleWeekView *self, SEL, id);
id __cdecl -[PDTSimpleWeekView standaloneWeekdaySymbols](struct PDTSimpleWeekView *self, SEL);
void __cdecl -[PDTSimpleWeekView setStandaloneWeekdaySymbols:](struct PDTSimpleWeekView *self, SEL, id);
void __cdecl -[PDTSimpleWeekView .cxx_destruct](struct PDTSimpleWeekView *self, SEL);
id __cdecl +[Reachability reachabilityWithHostName:](struct Reachability *self, SEL, id);
id __cdecl +[Reachability reachabilityWithHostname:](struct Reachability *self, SEL, id);
id __cdecl +[Reachability reachabilityWithAddress:](struct Reachability *self, SEL, void *);
id __cdecl +[Reachability reachabilityForInternetConnection](struct Reachability_meta *self, SEL);
id __cdecl +[Reachability reachabilityForLocalWiFi](struct Reachability_meta *self, SEL);
id __cdecl -[Reachability initWithReachabilityRef:](struct Reachability *self, SEL, struct __SCNetworkReachability *);
void __cdecl -[Reachability dealloc](struct Reachability *self, SEL);
char __cdecl -[Reachability startNotifier](struct Reachability *self, SEL);
void __fastcall sub_10B1C4(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[Reachability stopNotifier](struct Reachability *self, SEL);
char __cdecl -[Reachability isReachableWithFlags:](struct Reachability *self, SEL, unsigned int);
char __cdecl -[Reachability isReachable](struct Reachability *self, SEL);
char __cdecl -[Reachability isReachableViaWWAN](struct Reachability *self, SEL);
char __cdecl -[Reachability isReachableViaWiFi](struct Reachability *self, SEL);
char __cdecl -[Reachability isConnectionRequired](struct Reachability *self, SEL);
char __cdecl -[Reachability connectionRequired](struct Reachability *self, SEL);
char __cdecl -[Reachability isConnectionOnDemand](struct Reachability *self, SEL);
char __cdecl -[Reachability isInterventionRequired](struct Reachability *self, SEL);
int __cdecl -[Reachability currentReachabilityStatus](struct Reachability *self, SEL);
unsigned int __cdecl -[Reachability reachabilityFlags](struct Reachability *self, SEL);
id __cdecl -[Reachability currentReachabilityString](struct Reachability *self, SEL);
id __cdecl -[Reachability currentReachabilityFlags](struct Reachability *self, SEL);
void __cdecl -[Reachability reachabilityChanged:](struct Reachability *self, SEL, unsigned int);
void __fastcall sub_10B6F0(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_10B744(int a1, int a2);
void __fastcall sub_10B74C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[Reachability description](struct Reachability *self, SEL);
id __cdecl -[Reachability reachableBlock](struct Reachability *self, SEL);
void __cdecl -[Reachability setReachableBlock:](struct Reachability *self, SEL, id);
id __cdecl -[Reachability unreachableBlock](struct Reachability *self, SEL);
void __cdecl -[Reachability setUnreachableBlock:](struct Reachability *self, SEL, id);
char __cdecl -[Reachability reachableOnWWAN](struct Reachability *self, SEL);
void __cdecl -[Reachability setReachableOnWWAN:](struct Reachability *self, SEL, char);
struct __SCNetworkReachability *__cdecl -[Reachability reachabilityRef](struct Reachability *self, SEL);
void __cdecl -[Reachability setReachabilityRef:](struct Reachability *self, SEL, struct __SCNetworkReachability *);
id __cdecl -[Reachability reachabilitySerialQueue](struct Reachability *self, SEL);
void __cdecl -[Reachability setReachabilitySerialQueue:](struct Reachability *self, SEL, id);
id __cdecl -[Reachability reachabilityObject](struct Reachability *self, SEL);
void __cdecl -[Reachability setReachabilityObject:](struct Reachability *self, SEL, id);
void __cdecl -[Reachability .cxx_destruct](struct Reachability *self, SEL);
id __cdecl +[NSData(ImageContentType) sd_contentTypeForImageData:](struct NSData *self, SEL, id);
id __cdecl +[NSData(ImageContentTypeDeprecated) contentTypeForImageData:](struct NSData *self, SEL, id);
id __cdecl -[AutoPurgeCache init](struct AutoPurgeCache *self, SEL);
void __cdecl -[AutoPurgeCache dealloc](struct AutoPurgeCache *self, SEL);
int __fastcall sub_10BBC8(int a1, int a2);
id __cdecl +[SDImageCache sharedImageCache](struct SDImageCache_meta *self, SEL);
void __fastcall sub_10BCD4(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[SDImageCache init](struct SDImageCache *self, SEL);
id __cdecl -[SDImageCache initWithNamespace:](struct SDImageCache *self, SEL, id);
id __cdecl -[SDImageCache initWithNamespace:diskCacheDirectory:](struct SDImageCache *self, SEL, id, id);
void __fastcall sub_10C078(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_10C0B8(int a1, int a2);
void __fastcall sub_10C0C0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[SDImageCache dealloc](struct SDImageCache *self, SEL);
void __cdecl -[SDImageCache addReadOnlyCachePath:](struct SDImageCache *self, SEL, id);
id __cdecl -[SDImageCache cachePathForKey:inPath:](struct SDImageCache *self, SEL, id, id);
id __cdecl -[SDImageCache defaultCachePathForKey:](struct SDImageCache *self, SEL, id);
id __cdecl -[SDImageCache cachedFileNameForKey:](struct SDImageCache *self, SEL, id);
id __cdecl -[SDImageCache makeDiskCachePath:](struct SDImageCache *self, SEL, id);
void __cdecl -[SDImageCache storeImage:recalculateFromImage:imageData:forKey:toDisk:](struct SDImageCache *self, SEL, id, char, id, id, char);
void __fastcall sub_10C648(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_10C7A8(int a1, int a2);
void __fastcall sub_10C7CC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[SDImageCache storeImage:forKey:](struct SDImageCache *self, SEL, id, id);
void __cdecl -[SDImageCache storeImage:forKey:toDisk:](struct SDImageCache *self, SEL, id, id, char);
char __cdecl -[SDImageCache diskImageExistsWithKey:](struct SDImageCache *self, SEL, id);
void __cdecl -[SDImageCache diskImageExistsWithKey:completion:](struct SDImageCache *self, SEL, id, id);
void __fastcall sub_10C9A0(int a1);
int __fastcall sub_10CA50(int a1);
int __fastcall sub_10CA5C(int a1, int a2);
void __fastcall sub_10CA68(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_10CA70(int a1, int a2);
void __fastcall sub_10CA94(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[SDImageCache imageFromMemoryCacheForKey:](struct SDImageCache *self, SEL, id);
id __cdecl -[SDImageCache imageFromDiskCacheForKey:](struct SDImageCache *self, SEL, id);
id __cdecl -[SDImageCache diskImageDataBySearchingAllPathsForKey:](struct SDImageCache *self, SEL, id);
id __cdecl -[SDImageCache diskImageForKey:](struct SDImageCache *self, SEL, id);
id __cdecl -[SDImageCache scaledImageForKey:image:](struct SDImageCache *self, SEL, id, id);
id __cdecl -[SDImageCache queryDiskCacheForKey:done:](struct SDImageCache *self, SEL, id, id);
int __fastcall sub_10D084(int a1);
int __fastcall sub_10D1EC(int a1);
int __fastcall sub_10D1F8(int a1, int a2);
void __fastcall sub_10D214(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_10D22C(int a1, int a2);
void __fastcall sub_10D258(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[SDImageCache removeImageForKey:](struct SDImageCache *self, SEL, id);
void __cdecl -[SDImageCache removeImageForKey:withCompletion:](struct SDImageCache *self, SEL, id, id);
void __cdecl -[SDImageCache removeImageForKey:fromDisk:](struct SDImageCache *self, SEL, id, char);
void __cdecl -[SDImageCache removeImageForKey:fromDisk:withCompletion:](struct SDImageCache *self, SEL, id, char, id);
void __fastcall sub_10D3E4(int a1);
int __fastcall sub_10D49C(int a1);
int __fastcall sub_10D4A4(int a1, int a2);
void __fastcall sub_10D4B0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_10D4B8(int a1, int a2);
void __fastcall sub_10D4DC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[SDImageCache setMaxMemoryCost:](struct SDImageCache *self, SEL, unsigned int);
unsigned int __cdecl -[SDImageCache maxMemoryCost](struct SDImageCache *self, SEL);
unsigned int __cdecl -[SDImageCache maxMemoryCountLimit](struct SDImageCache *self, SEL);
void __cdecl -[SDImageCache setMaxMemoryCountLimit:](struct SDImageCache *self, SEL, unsigned int);
void __cdecl -[SDImageCache clearMemory](struct SDImageCache *self, SEL);
void __cdecl -[SDImageCache clearDisk](struct SDImageCache *self, SEL);
void __cdecl -[SDImageCache clearDiskOnCompletion:](struct SDImageCache *self, SEL, id);
void __fastcall sub_10D6B8(int a1);
int __fastcall sub_10D7A8(int a1);
int __fastcall sub_10D7B0(int a1, int a2);
void __fastcall sub_10D7BC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_10D7C4(int a1, int a2);
void __fastcall sub_10D7E4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[SDImageCache cleanDisk](struct SDImageCache *self, SEL);
void __cdecl -[SDImageCache cleanDiskWithCompletionBlock:](struct SDImageCache *self, SEL, id);
char *__fastcall sub_10D894(int a1);
void *__fastcall sub_10DE8C(int a1, int a2, int a3);
int __fastcall sub_10DF20(int a1);
int __fastcall sub_10DF28(int a1, int a2);
void __fastcall sub_10DF34(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_10DF3C(int a1, int a2);
void __fastcall sub_10DF5C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[SDImageCache backgroundCleanDisk](struct SDImageCache *self, SEL);
void __fastcall sub_10E116(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, int a25, int a26, int a27, int a28, unsigned int a29);
int __fastcall sub_10E144(int a1);
int __fastcall sub_10E178(int a1, int a2);
int __fastcall sub_10E198(int a1, void *a2, struct objc_object *a3, struct objc_object *a4);
int __fastcall sub_10E1B0(int a1);
int __fastcall sub_10E1E4(int a1, int a2);
int __fastcall sub_10E204(int a1, void *a2, struct objc_object *a3, struct objc_object *a4);
unsigned int __cdecl -[SDImageCache getSize](struct SDImageCache *self, SEL);
void __fastcall sub_10E308(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, unsigned int a21);
char *__fastcall sub_10E334(int a1);
int __fastcall sub_10E4F8(int a1, int a2);
int __fastcall sub_10E518(int a1, void *a2, struct objc_object *a3, struct objc_object *a4);
unsigned int __cdecl -[SDImageCache getDiskCount](struct SDImageCache *self, SEL);
void __fastcall sub_10E61C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, unsigned int a21);
void __fastcall sub_10E648(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_10E6DC(int a1, int a2);
int __fastcall sub_10E6FC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4);
void __cdecl -[SDImageCache calculateSizeWithCompletionBlock:](struct SDImageCache *self, SEL, id);
char *__fastcall sub_10E804(int a1);
int __fastcall sub_10E9DC(int a1);
int __fastcall sub_10E9EC(int a1, int a2);
void __fastcall sub_10E9F8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_10EA00(int a1, int a2);
void __fastcall sub_10EA24(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
char __cdecl -[SDImageCache shouldDecompressImages](struct SDImageCache *self, SEL);
void __cdecl -[SDImageCache setShouldDecompressImages:](struct SDImageCache *self, SEL, char);
int __cdecl -[SDImageCache maxCacheAge](struct SDImageCache *self, SEL);
void __cdecl -[SDImageCache setMaxCacheAge:](struct SDImageCache *self, SEL, int);
unsigned int __cdecl -[SDImageCache maxCacheSize](struct SDImageCache *self, SEL);
void __cdecl -[SDImageCache setMaxCacheSize:](struct SDImageCache *self, SEL, unsigned int);
id __cdecl -[SDImageCache memCache](struct SDImageCache *self, SEL);
void __cdecl -[SDImageCache setMemCache:](struct SDImageCache *self, SEL, id);
id __cdecl -[SDImageCache diskCachePath](struct SDImageCache *self, SEL);
void __cdecl -[SDImageCache setDiskCachePath:](struct SDImageCache *self, SEL, id);
id __cdecl -[SDImageCache customPaths](struct SDImageCache *self, SEL);
void __cdecl -[SDImageCache setCustomPaths:](struct SDImageCache *self, SEL, id);
struct dispatch_queue_s *__cdecl -[SDImageCache ioQueue](struct SDImageCache *self, SEL);
void __cdecl -[SDImageCache setIoQueue:](struct SDImageCache *self, SEL, struct dispatch_queue_s *);
void __cdecl -[SDImageCache .cxx_destruct](struct SDImageCache *self, SEL);
id __fastcall sub_10EBC4(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl +[UIImage(ForceDecode) decodedImageWithImage:](struct UIImage *self, SEL, id);
void __cdecl +[SDWebImageDownloader initialize](struct SDWebImageDownloader_meta *self, SEL);
id __cdecl +[SDWebImageDownloader sharedDownloader](struct SDWebImageDownloader_meta *self, SEL);
void __fastcall sub_10F2B8(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[SDWebImageDownloader init](struct SDWebImageDownloader *self, SEL);
void __cdecl -[SDWebImageDownloader dealloc](struct SDWebImageDownloader *self, SEL);
void __cdecl -[SDWebImageDownloader setValue:forHTTPHeaderField:](struct SDWebImageDownloader *self, SEL, id, id);
id __cdecl -[SDWebImageDownloader valueForHTTPHeaderField:](struct SDWebImageDownloader *self, SEL, id);
void __cdecl -[SDWebImageDownloader setMaxConcurrentDownloads:](struct SDWebImageDownloader *self, SEL, int);
unsigned int __cdecl -[SDWebImageDownloader currentDownloadCount](struct SDWebImageDownloader *self, SEL);
int __cdecl -[SDWebImageDownloader maxConcurrentDownloads](struct SDWebImageDownloader *self, SEL);
void __cdecl -[SDWebImageDownloader setOperationClass:](struct SDWebImageDownloader *self, SEL, Class);
id __cdecl -[SDWebImageDownloader downloadImageWithURL:options:progress:completed:](struct SDWebImageDownloader *self, SEL, id, unsigned int, id, id);
void __fastcall sub_10F7F6(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, int a25, int a26, int a27, int a28, unsigned int a29);
int __fastcall sub_10F828(int a1, int a2);
void __fastcall sub_10F834(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_10F83C(int a1);
void __fastcall sub_10FEF4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, int a25, int a26, int a27, int a28, int a29, int a30, int a31, int a32, int a33, int a34, int a35, int a36, int a37, int a38, int a39, int a40, int a41, int a42, int a43, int a44, unsigned int a45, int a46);
signed int __fastcall sub_10FF48(unsigned int a1, int a2, int a3);
void __fastcall sub_110184(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, int a25, int a26, int a27, int a28, int a29, int a30, int a31, char a32, int a33, int a34, int a35, int a36, int a37, int a38, int a39, unsigned int a40, int a41);
void __fastcall sub_1101BC(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_110228(int a1, int a2);
void __fastcall sub_110248(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_110268(int a1, int a2);
void __fastcall sub_110284(int a1, int a2, int a3, int a4, struct objc_object *a5);
signed int __fastcall sub_11029C(unsigned int a1, int a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_11050E(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, int a25, int a26, int a27, int a28, int a29, int a30, int a31, int a32, int a33, int a34, int a35, char a36, int a37, int a38, int a39, int a40, int a41, int a42, int a43, unsigned int a44, int a45);
void __fastcall sub_110544(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1105F4(int a1, int a2);
void __fastcall sub_110614(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_110634(int a1, int a2);
void __fastcall sub_110650(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_110668(int a1);
void __fastcall sub_1106F0(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_110730(int a1, int a2);
void __fastcall sub_110748(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_110760(int a1, int a2);
void __fastcall sub_11077C(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_110794(int a1, int a2);
int __fastcall sub_1107C0(int a1);
void __cdecl -[SDWebImageDownloader addProgressCallback:andCompletedBlock:forURL:createCallback:](struct SDWebImageDownloader *self, SEL, id, id, id, id);
void __fastcall sub_1108D8(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_110AA4(int a1, int a2);
void __fastcall sub_110AE0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[SDWebImageDownloader setSuspended:](struct SDWebImageDownloader *self, SEL, char);
char __cdecl -[SDWebImageDownloader shouldDecompressImages](struct SDWebImageDownloader *self, SEL);
void __cdecl -[SDWebImageDownloader setShouldDecompressImages:](struct SDWebImageDownloader *self, SEL, char);
double __cdecl -[SDWebImageDownloader downloadTimeout](struct SDWebImageDownloader *self, SEL);
void __cdecl -[SDWebImageDownloader setDownloadTimeout:](struct SDWebImageDownloader *self, SEL, double);
int __cdecl -[SDWebImageDownloader executionOrder](struct SDWebImageDownloader *self, SEL);
void __cdecl -[SDWebImageDownloader setExecutionOrder:](struct SDWebImageDownloader *self, SEL, int);
id __cdecl -[SDWebImageDownloader username](struct SDWebImageDownloader *self, SEL);
void __cdecl -[SDWebImageDownloader setUsername:](struct SDWebImageDownloader *self, SEL, id);
id __cdecl -[SDWebImageDownloader password](struct SDWebImageDownloader *self, SEL);
void __cdecl -[SDWebImageDownloader setPassword:](struct SDWebImageDownloader *self, SEL, id);
id __cdecl -[SDWebImageDownloader headersFilter](struct SDWebImageDownloader *self, SEL);
void __cdecl -[SDWebImageDownloader setHeadersFilter:](struct SDWebImageDownloader *self, SEL, id);
id __cdecl -[SDWebImageDownloader downloadQueue](struct SDWebImageDownloader *self, SEL);
void __cdecl -[SDWebImageDownloader setDownloadQueue:](struct SDWebImageDownloader *self, SEL, id);
id __cdecl -[SDWebImageDownloader lastAddedOperation](struct SDWebImageDownloader *self, SEL);
void __cdecl -[SDWebImageDownloader setLastAddedOperation:](struct SDWebImageDownloader *self, SEL, id);
Class __cdecl -[SDWebImageDownloader operationClass](struct SDWebImageDownloader *self, SEL);
id __cdecl -[SDWebImageDownloader URLCallbacks](struct SDWebImageDownloader *self, SEL);
void __cdecl -[SDWebImageDownloader setURLCallbacks:](struct SDWebImageDownloader *self, SEL, id);
id __cdecl -[SDWebImageDownloader HTTPHeaders](struct SDWebImageDownloader *self, SEL);
void __cdecl -[SDWebImageDownloader setHTTPHeaders:](struct SDWebImageDownloader *self, SEL, id);
struct dispatch_queue_s *__cdecl -[SDWebImageDownloader barrierQueue](struct SDWebImageDownloader *self, SEL);
void __cdecl -[SDWebImageDownloader setBarrierQueue:](struct SDWebImageDownloader *self, SEL, struct dispatch_queue_s *);
void __cdecl -[SDWebImageDownloader .cxx_destruct](struct SDWebImageDownloader *self, SEL);
id __cdecl -[SDWebImageDownloaderOperation initWithRequest:options:progress:completed:cancelled:](struct SDWebImageDownloaderOperation *self, SEL, id, unsigned int, id, id, id);
void __cdecl -[SDWebImageDownloaderOperation start](struct SDWebImageDownloaderOperation *self, SEL);
void __fastcall sub_1116B2(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, int a25, int a26, int a27, int a28, char a29, int a30, int a31, int a32, unsigned int a33, int a34);
void __fastcall sub_111710(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_111788(int a1, int a2);
void __fastcall sub_1117A4(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_1117BC(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_111810(int a1, int a2);
void __fastcall sub_111818(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[SDWebImageDownloaderOperation cancel](struct SDWebImageDownloaderOperation *self, SEL);
void __fastcall sub_11192E(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, unsigned int a13, int a14);
void __cdecl -[SDWebImageDownloaderOperation cancelInternalAndStop](struct SDWebImageDownloaderOperation *self, SEL);
void __cdecl -[SDWebImageDownloaderOperation cancelInternal](struct SDWebImageDownloaderOperation *self, SEL);
void __fastcall sub_111B24(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_111B78(int a1, int a2);
void __fastcall sub_111B80(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[SDWebImageDownloaderOperation done](struct SDWebImageDownloaderOperation *self, SEL);
void __cdecl -[SDWebImageDownloaderOperation reset](struct SDWebImageDownloaderOperation *self, SEL);
void __cdecl -[SDWebImageDownloaderOperation setFinished:](struct SDWebImageDownloaderOperation *self, SEL, char);
void __cdecl -[SDWebImageDownloaderOperation setExecuting:](struct SDWebImageDownloaderOperation *self, SEL, char);
char __cdecl -[SDWebImageDownloaderOperation isConcurrent](struct SDWebImageDownloaderOperation *self, SEL);
void __cdecl -[SDWebImageDownloaderOperation connection:didReceiveResponse:](struct SDWebImageDownloaderOperation *self, SEL, id, id);
void __fastcall sub_111FE4(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_112038(int a1, int a2);
void __fastcall sub_112040(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_112048(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_11209C(int a1, int a2);
void __fastcall sub_1120A4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[SDWebImageDownloaderOperation connection:didReceiveData:](struct SDWebImageDownloaderOperation *self, SEL, id, id);
void __fastcall sub_1125E0(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_11263C(int a1, int a2);
void __fastcall sub_112654(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_11266C(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1126C8(int a1, int a2);
void __fastcall sub_1126E0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __cdecl +[SDWebImageDownloaderOperation orientationFromPropertyValue:](struct SDWebImageDownloaderOperation *self, SEL, int);
id __cdecl -[SDWebImageDownloaderOperation scaledImageForKey:image:](struct SDWebImageDownloaderOperation *self, SEL, id, id);
void __cdecl -[SDWebImageDownloaderOperation connectionDidFinishLoading:](struct SDWebImageDownloaderOperation *self, SEL, id);
void __fastcall sub_112D40(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, unsigned int a25, int a26);
void __fastcall sub_112D6C(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_112DFC(int a1, int a2);
void __fastcall sub_112E04(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[SDWebImageDownloaderOperation connection:didFailWithError:](struct SDWebImageDownloaderOperation *self, SEL, id, id);
void __fastcall sub_112FCE(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, unsigned int a17, int a18);
void __fastcall sub_112FFC(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_113050(int a1, int a2);
void __fastcall sub_113058(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[SDWebImageDownloaderOperation connection:willCacheResponse:](struct SDWebImageDownloaderOperation *self, SEL, id, id);
char __cdecl -[SDWebImageDownloaderOperation shouldContinueWhenAppEntersBackground](struct SDWebImageDownloaderOperation *self, SEL);
char __cdecl -[SDWebImageDownloaderOperation connectionShouldUseCredentialStorage:](struct SDWebImageDownloaderOperation *self, SEL, id);
void __cdecl -[SDWebImageDownloaderOperation connection:willSendRequestForAuthenticationChallenge:](struct SDWebImageDownloaderOperation *self, SEL, id, id);
char __cdecl -[SDWebImageDownloaderOperation isExecuting](struct SDWebImageDownloaderOperation *self, SEL);
char __cdecl -[SDWebImageDownloaderOperation isFinished](struct SDWebImageDownloaderOperation *self, SEL);
id __cdecl -[SDWebImageDownloaderOperation request](struct SDWebImageDownloaderOperation *self, SEL);
char __cdecl -[SDWebImageDownloaderOperation shouldDecompressImages](struct SDWebImageDownloaderOperation *self, SEL);
void __cdecl -[SDWebImageDownloaderOperation setShouldDecompressImages:](struct SDWebImageDownloaderOperation *self, SEL, char);
char __cdecl -[SDWebImageDownloaderOperation shouldUseCredentialStorage](struct SDWebImageDownloaderOperation *self, SEL);
void __cdecl -[SDWebImageDownloaderOperation setShouldUseCredentialStorage:](struct SDWebImageDownloaderOperation *self, SEL, char);
id __cdecl -[SDWebImageDownloaderOperation credential](struct SDWebImageDownloaderOperation *self, SEL);
void __cdecl -[SDWebImageDownloaderOperation setCredential:](struct SDWebImageDownloaderOperation *self, SEL, id);
unsigned int __cdecl -[SDWebImageDownloaderOperation options](struct SDWebImageDownloaderOperation *self, SEL);
int __cdecl -[SDWebImageDownloaderOperation expectedSize](struct SDWebImageDownloaderOperation *self, SEL);
void __cdecl -[SDWebImageDownloaderOperation setExpectedSize:](struct SDWebImageDownloaderOperation *self, SEL, int);
id __cdecl -[SDWebImageDownloaderOperation response](struct SDWebImageDownloaderOperation *self, SEL);
void __cdecl -[SDWebImageDownloaderOperation setResponse:](struct SDWebImageDownloaderOperation *self, SEL, id);
id __cdecl -[SDWebImageDownloaderOperation progressBlock](struct SDWebImageDownloaderOperation *self, SEL);
void __cdecl -[SDWebImageDownloaderOperation setProgressBlock:](struct SDWebImageDownloaderOperation *self, SEL, id);
id __cdecl -[SDWebImageDownloaderOperation completedBlock](struct SDWebImageDownloaderOperation *self, SEL);
void __cdecl -[SDWebImageDownloaderOperation setCompletedBlock:](struct SDWebImageDownloaderOperation *self, SEL, id);
id __cdecl -[SDWebImageDownloaderOperation cancelBlock](struct SDWebImageDownloaderOperation *self, SEL);
void __cdecl -[SDWebImageDownloaderOperation setCancelBlock:](struct SDWebImageDownloaderOperation *self, SEL, id);
id __cdecl -[SDWebImageDownloaderOperation imageData](struct SDWebImageDownloaderOperation *self, SEL);
void __cdecl -[SDWebImageDownloaderOperation setImageData:](struct SDWebImageDownloaderOperation *self, SEL, id);
id __cdecl -[SDWebImageDownloaderOperation connection](struct SDWebImageDownloaderOperation *self, SEL);
void __cdecl -[SDWebImageDownloaderOperation setConnection:](struct SDWebImageDownloaderOperation *self, SEL, id);
id __cdecl -[SDWebImageDownloaderOperation thread](struct SDWebImageDownloaderOperation *self, SEL);
void __cdecl -[SDWebImageDownloaderOperation setThread:](struct SDWebImageDownloaderOperation *self, SEL, id);
unsigned int __cdecl -[SDWebImageDownloaderOperation backgroundTaskId](struct SDWebImageDownloaderOperation *self, SEL);
void __cdecl -[SDWebImageDownloaderOperation setBackgroundTaskId:](struct SDWebImageDownloaderOperation *self, SEL, unsigned int);
void __cdecl -[SDWebImageDownloaderOperation .cxx_destruct](struct SDWebImageDownloaderOperation *self, SEL);
id __cdecl +[SDWebImageManager sharedManager](struct SDWebImageManager_meta *self, SEL);
void __fastcall sub_1136C8(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[SDWebImageManager init](struct SDWebImageManager *self, SEL);
id __cdecl -[SDWebImageManager createCache](struct SDWebImageManager *self, SEL);
id __cdecl -[SDWebImageManager cacheKeyForURL:](struct SDWebImageManager *self, SEL, id);
char __cdecl -[SDWebImageManager cachedImageExistsForURL:](struct SDWebImageManager *self, SEL, id);
char __cdecl -[SDWebImageManager diskImageExistsForURL:](struct SDWebImageManager *self, SEL, id);
void __cdecl -[SDWebImageManager cachedImageExistsForURL:completion:](struct SDWebImageManager *self, SEL, id, id);
int __fastcall sub_113B00(int a1);
int __fastcall sub_113B10(int a1, int a2);
void __fastcall sub_113B1C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_113B24(int a1);
int __fastcall sub_113B30(int a1, int a2);
void __fastcall sub_113B3C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[SDWebImageManager diskImageExistsForURL:completion:](struct SDWebImageManager *self, SEL, id, id);
int __fastcall sub_113C10(int a1);
int __fastcall sub_113C1C(int a1, int a2);
void __fastcall sub_113C28(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[SDWebImageManager downloadImageWithURL:options:progress:completed:](struct SDWebImageManager *self, SEL, id, unsigned int, id, id);
void __fastcall sub_114112(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, int a25, int a26, int a27, int a28, int a29, int a30, int a31, int a32, int a33, int a34, int a35, int a36, int a37, int a38, int a39, int a40, char a41, char a42, int a43, int a44, int a45, int a46, int a47, int a48, int a49, int a50, int a51, int a52, unsigned int a53, int a54);
int __fastcall sub_114174(int a1, int a2);
void __fastcall sub_114180(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_114188(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1141F0(int a1, int a2);
void __fastcall sub_11420C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_114224(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_11428C(int a1, int a2);
void __fastcall sub_1142A8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_1142C0(int a1, int a2, int a3);
void __fastcall sub_114AF2(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, int a25, int a26, int a27, int a28, int a29, int a30, int a31, int a32, int a33, int a34, int a35, int a36, int a37, int a38, int a39, int a40, int a41, int a42, int a43, int a44, int a45, int a46, int a47, int a48, int a49, int a50, int a51, int a52, int a53, int a54, int a55, int a56, int a57, int a58, int a59, int a60, int a61, int a62, int a63);
int __fastcall sub_114B70(int a1);
int __fastcall sub_114BA0(int a1, int a2);
void __fastcall sub_114BC0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_114BE0(int a1, int a2, int a3, int a4, char a5);
void __fastcall sub_115410(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, int a25, int a26, int a27, int a28, int a29, int a30, int a31, int a32, int a33, int a34, int a35, int a36, int a37, int a38, int a39, int a40, int a41, int a42, int a43, int a44, int a45, int a46, int a47, int a48, int a49, int a50, int a51, int a52, int a53, int a54, int a55, int a56, int a57, int a58, int a59, int a60, int a61, int a62, int a63);
void __fastcall sub_115470(int a1);
int __fastcall sub_1154BC(int a1, int a2);
void __fastcall sub_1154EC(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_115510(int a1);
int __fastcall sub_11555C(int a1, int a2);
void __fastcall sub_11558C(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1155B0(int a1);
void __fastcall sub_115858(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, int a25, int a26, int a27, int a28, int a29, int a30, int a31, int a32, unsigned int a33);
void __fastcall sub_115884(int a1);
int __fastcall sub_1158D0(int a1, int a2);
void __fastcall sub_115900(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_115924(int a1);
int __fastcall sub_115970(int a1, int a2);
void __fastcall sub_1159A0(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1159C4(int a1, int a2);
void __fastcall sub_115A08(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_115A40(int a1);
int __fastcall sub_115A8C(int a1, int a2);
void __fastcall sub_115ABC(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_115AE0(int a1);
int __fastcall sub_115B2C(int a1, int a2);
void __fastcall sub_115B5C(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_115B80(int a1, int a2);
int __fastcall sub_115BC8(int a1);
int __fastcall sub_115C00(struct GADRewardBasedVideoAd *a1);
void __fastcall sub_115CF2(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, unsigned int a9, int a10);
int __fastcall sub_115D1C(int a1, int a2);
int __fastcall sub_115D40(int a1, void *a2, struct objc_object *a3, struct objc_object *a4);
void __fastcall sub_115D60(int a1);
int __fastcall sub_115DB8(int a1, int a2);
void __fastcall sub_115DE8(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_115E0C(int a1);
int __fastcall sub_115E64(int a1, int a2);
void __fastcall sub_115E94(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_115EB8(int a1);
int __fastcall sub_115F04(int a1, int a2);
void __fastcall sub_115F30(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_115F50(int a1);
int __fastcall sub_115F9C(int a1, int a2);
void __fastcall sub_115FC8(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_115FE8(int a1, int a2);
void __fastcall sub_116038(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[SDWebImageManager saveImageToCache:forURL:](struct SDWebImageManager *self, SEL, id, id);
void __cdecl -[SDWebImageManager cancelAll](struct SDWebImageManager *self, SEL);
void __fastcall sub_11621E(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, unsigned int a13, int a14);
char __cdecl -[SDWebImageManager isRunning](struct SDWebImageManager *self, SEL);
id __cdecl -[SDWebImageManager delegate](struct SDWebImageManager *self, SEL);
void __cdecl -[SDWebImageManager setDelegate:](struct SDWebImageManager *self, SEL, id);
id __cdecl -[SDWebImageManager imageCache](struct SDWebImageManager *self, SEL);
void __cdecl -[SDWebImageManager setImageCache:](struct SDWebImageManager *self, SEL, id);
id __cdecl -[SDWebImageManager imageDownloader](struct SDWebImageManager *self, SEL);
void __cdecl -[SDWebImageManager setImageDownloader:](struct SDWebImageManager *self, SEL, id);
id __cdecl -[SDWebImageManager cacheKeyFilter](struct SDWebImageManager *self, SEL);
void __cdecl -[SDWebImageManager setCacheKeyFilter:](struct SDWebImageManager *self, SEL, id);
id __cdecl -[SDWebImageManager failedURLs](struct SDWebImageManager *self, SEL);
void __cdecl -[SDWebImageManager setFailedURLs:](struct SDWebImageManager *self, SEL, id);
id __cdecl -[SDWebImageManager runningOperations](struct SDWebImageManager *self, SEL);
void __cdecl -[SDWebImageManager setRunningOperations:](struct SDWebImageManager *self, SEL, id);
void __cdecl -[SDWebImageManager .cxx_destruct](struct SDWebImageManager *self, SEL);
void __cdecl -[SDWebImageCombinedOperation setCancelBlock:](struct SDWebImageCombinedOperation *self, SEL, id);
void __cdecl -[SDWebImageCombinedOperation cancel](struct SDWebImageCombinedOperation *self, SEL);
char __cdecl -[SDWebImageCombinedOperation isCancelled](struct SDWebImageCombinedOperation *self, SEL);
void __cdecl -[SDWebImageCombinedOperation setCancelled:](struct SDWebImageCombinedOperation *self, SEL, char);
id __cdecl -[SDWebImageCombinedOperation cancelBlock](struct SDWebImageCombinedOperation *self, SEL);
id __cdecl -[SDWebImageCombinedOperation cacheOperation](struct SDWebImageCombinedOperation *self, SEL);
void __cdecl -[SDWebImageCombinedOperation setCacheOperation:](struct SDWebImageCombinedOperation *self, SEL, id);
void __cdecl -[SDWebImageCombinedOperation .cxx_destruct](struct SDWebImageCombinedOperation *self, SEL);
id __cdecl -[SDWebImageManager downloadWithURL:options:progress:completed:](struct SDWebImageManager *self, SEL, id, unsigned int, id, id);
void __fastcall sub_1166DC(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_116724(int a1, int a2);
void __fastcall sub_116730(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl +[SDWebImagePrefetcher sharedImagePrefetcher](struct SDWebImagePrefetcher_meta *self, SEL);
void __fastcall sub_1167B0(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[SDWebImagePrefetcher init](struct SDWebImagePrefetcher *self, SEL);
void __cdecl -[SDWebImagePrefetcher setMaxConcurrentDownloads:](struct SDWebImagePrefetcher *self, SEL, unsigned int);
unsigned int __cdecl -[SDWebImagePrefetcher maxConcurrentDownloads](struct SDWebImagePrefetcher *self, SEL);
void __cdecl -[SDWebImagePrefetcher startPrefetchingAtIndex:](struct SDWebImagePrefetcher *self, SEL, unsigned int);
void __fastcall sub_116A9C(int a1, int a2, int a3, int a4, char a5, int a6);
void *__fastcall sub_116E94(int a1);
int __fastcall sub_116EC4(int a1, int a2);
void __fastcall sub_116ECC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_116ED4(int a1, int a2);
void __fastcall sub_116EDC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[SDWebImagePrefetcher reportStatus](struct SDWebImagePrefetcher *self, SEL);
void __cdecl -[SDWebImagePrefetcher prefetchURLs:](struct SDWebImagePrefetcher *self, SEL, id);
void __cdecl -[SDWebImagePrefetcher prefetchURLs:progress:completed:](struct SDWebImagePrefetcher *self, SEL, id, id, id);
void __cdecl -[SDWebImagePrefetcher cancelPrefetching](struct SDWebImagePrefetcher *self, SEL);
id __cdecl -[SDWebImagePrefetcher manager](struct SDWebImagePrefetcher *self, SEL);
void __cdecl -[SDWebImagePrefetcher setManager:](struct SDWebImagePrefetcher *self, SEL, id);
unsigned int __cdecl -[SDWebImagePrefetcher options](struct SDWebImagePrefetcher *self, SEL);
void __cdecl -[SDWebImagePrefetcher setOptions:](struct SDWebImagePrefetcher *self, SEL, unsigned int);
struct dispatch_queue_s *__cdecl -[SDWebImagePrefetcher prefetcherQueue](struct SDWebImagePrefetcher *self, SEL);
void __cdecl -[SDWebImagePrefetcher setPrefetcherQueue:](struct SDWebImagePrefetcher *self, SEL, struct dispatch_queue_s *);
id __cdecl -[SDWebImagePrefetcher delegate](struct SDWebImagePrefetcher *self, SEL);
void __cdecl -[SDWebImagePrefetcher setDelegate:](struct SDWebImagePrefetcher *self, SEL, id);
id __cdecl -[SDWebImagePrefetcher prefetchURLs](struct SDWebImagePrefetcher *self, SEL);
void __cdecl -[SDWebImagePrefetcher setPrefetchURLs:](struct SDWebImagePrefetcher *self, SEL, id);
unsigned int __cdecl -[SDWebImagePrefetcher requestedCount](struct SDWebImagePrefetcher *self, SEL);
void __cdecl -[SDWebImagePrefetcher setRequestedCount:](struct SDWebImagePrefetcher *self, SEL, unsigned int);
unsigned int __cdecl -[SDWebImagePrefetcher skippedCount](struct SDWebImagePrefetcher *self, SEL);
void __cdecl -[SDWebImagePrefetcher setSkippedCount:](struct SDWebImagePrefetcher *self, SEL, unsigned int);
unsigned int __cdecl -[SDWebImagePrefetcher finishedCount](struct SDWebImagePrefetcher *self, SEL);
void __cdecl -[SDWebImagePrefetcher setFinishedCount:](struct SDWebImagePrefetcher *self, SEL, unsigned int);
double __cdecl -[SDWebImagePrefetcher startedTime](struct SDWebImagePrefetcher *self, SEL);
void __cdecl -[SDWebImagePrefetcher setStartedTime:](struct SDWebImagePrefetcher *self, SEL, double);
id __cdecl -[SDWebImagePrefetcher completionBlock](struct SDWebImagePrefetcher *self, SEL);
void __cdecl -[SDWebImagePrefetcher setCompletionBlock:](struct SDWebImagePrefetcher *self, SEL, id);
id __cdecl -[SDWebImagePrefetcher progressBlock](struct SDWebImagePrefetcher *self, SEL);
void __cdecl -[SDWebImagePrefetcher setProgressBlock:](struct SDWebImagePrefetcher *self, SEL, id);
void __cdecl -[SDWebImagePrefetcher .cxx_destruct](struct SDWebImagePrefetcher *self, SEL);
id __cdecl -[UIButton(WebCache) sd_currentImageURL](struct UIButton *self, SEL);
id __cdecl -[UIButton(WebCache) sd_imageURLForState:](struct UIButton *self, SEL, unsigned int);
void __cdecl -[UIButton(WebCache) sd_setImageWithURL:forState:](struct UIButton *self, SEL, id, unsigned int);
void __cdecl -[UIButton(WebCache) sd_setImageWithURL:forState:placeholderImage:](struct UIButton *self, SEL, id, unsigned int, id);
void __cdecl -[UIButton(WebCache) sd_setImageWithURL:forState:placeholderImage:options:](struct UIButton *self, SEL, id, unsigned int, id, unsigned int);
void __cdecl -[UIButton(WebCache) sd_setImageWithURL:forState:completed:](struct UIButton *self, SEL, id, unsigned int, id);
void __cdecl -[UIButton(WebCache) sd_setImageWithURL:forState:placeholderImage:completed:](struct UIButton *self, SEL, id, unsigned int, id, id);
void __cdecl -[UIButton(WebCache) sd_setImageWithURL:forState:placeholderImage:options:completed:](struct UIButton *self, SEL, id, unsigned int, id, unsigned int, id);
void __fastcall sub_1179F4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, char a24, int a25, int a26, int a27, int a28, int a29, int a30, int a31, int a32, int a33, int a34, int a35, int a36, int a37, int a38, int a39, int a40, unsigned int a41, int a42);
void __fastcall sub_117A30(int a1);
int __fastcall sub_117AD0(int a1, int a2);
void __fastcall sub_117AEC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_117B04(int a1);
int __fastcall sub_117BA4(int a1, int a2);
void __fastcall sub_117BC0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_117BD8(int a1, int a2, int a3, int a4, char a5, int a6);
void __fastcall sub_117E16(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, int a25, int a26, int a27, int a28, int a29, int a30, int a31, int a32, int a33, int a34, int a35, int a36, unsigned int a37);
void __fastcall sub_117E40(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_117E98(int a1, int a2);
void __fastcall sub_117ED0(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_117EFC(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_117F54(int a1, int a2);
void __fastcall sub_117F8C(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_117FB8(int a1, int a2);
void __fastcall sub_117FE4(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[UIButton(WebCache) sd_setBackgroundImageWithURL:forState:](struct UIButton *self, SEL, id, unsigned int);
void __cdecl -[UIButton(WebCache) sd_setBackgroundImageWithURL:forState:placeholderImage:](struct UIButton *self, SEL, id, unsigned int, id);
void __cdecl -[UIButton(WebCache) sd_setBackgroundImageWithURL:forState:placeholderImage:options:](struct UIButton *self, SEL, id, unsigned int, id, unsigned int);
void __cdecl -[UIButton(WebCache) sd_setBackgroundImageWithURL:forState:completed:](struct UIButton *self, SEL, id, unsigned int, id);
void __cdecl -[UIButton(WebCache) sd_setBackgroundImageWithURL:forState:placeholderImage:completed:](struct UIButton *self, SEL, id, unsigned int, id, id);
void __cdecl -[UIButton(WebCache) sd_setBackgroundImageWithURL:forState:placeholderImage:options:completed:](struct UIButton *self, SEL, id, unsigned int, id, unsigned int, id);
void __fastcall sub_118404(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, int a25, int a26, int a27, int a28, int a29, int a30, int a31, int a32, int a33, int a34, int a35, int a36, int a37, char a38, int a39, int a40, unsigned int a41, int a42);
int __fastcall sub_118440(int a1, int a2, int a3, int a4, char a5, int a6);
void __fastcall sub_11867E(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, int a25, int a26, int a27, int a28, int a29, int a30, int a31, int a32, int a33, int a34, int a35, int a36, unsigned int a37);
void __fastcall sub_1186A8(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_118700(int a1, int a2);
void __fastcall sub_118738(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_118764(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1187BC(int a1, int a2);
void __fastcall sub_1187F4(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_118820(int a1, int a2);
void __fastcall sub_11884C(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_11886C(int a1);
int __fastcall sub_11890C(int a1, int a2);
void __fastcall sub_118928(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_118940(int a1);
int __fastcall sub_1189E0(int a1, int a2);
void __fastcall sub_1189FC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[UIButton(WebCache) sd_setImageLoadOperation:forState:](struct UIButton *self, SEL, id, unsigned int);
void __cdecl -[UIButton(WebCache) sd_cancelImageLoadForState:](struct UIButton *self, SEL, unsigned int);
void __cdecl -[UIButton(WebCache) sd_setBackgroundImageLoadOperation:forState:](struct UIButton *self, SEL, id, unsigned int);
void __cdecl -[UIButton(WebCache) sd_cancelBackgroundImageLoadForState:](struct UIButton *self, SEL, unsigned int);
id __cdecl -[UIButton(WebCache) imageURLStorage](struct UIButton *self, SEL);
id __cdecl -[UIButton(WebCacheDeprecated) currentImageURL](struct UIButton *self, SEL);
id __cdecl -[UIButton(WebCacheDeprecated) imageURLForState:](struct UIButton *self, SEL, unsigned int);
void __cdecl -[UIButton(WebCacheDeprecated) setImageWithURL:forState:](struct UIButton *self, SEL, id, unsigned int);
void __cdecl -[UIButton(WebCacheDeprecated) setImageWithURL:forState:placeholderImage:](struct UIButton *self, SEL, id, unsigned int, id);
void __cdecl -[UIButton(WebCacheDeprecated) setImageWithURL:forState:placeholderImage:options:](struct UIButton *self, SEL, id, unsigned int, id, unsigned int);
void __cdecl -[UIButton(WebCacheDeprecated) setImageWithURL:forState:completed:](struct UIButton *self, SEL, id, unsigned int, id);
void __fastcall sub_118E18(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_118E58(int a1, int a2);
void __fastcall sub_118E64(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[UIButton(WebCacheDeprecated) setImageWithURL:forState:placeholderImage:completed:](struct UIButton *self, SEL, id, unsigned int, id, id);
void __fastcall sub_118F0C(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_118F4C(int a1, int a2);
void __fastcall sub_118F58(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[UIButton(WebCacheDeprecated) setImageWithURL:forState:placeholderImage:options:completed:](struct UIButton *self, SEL, id, unsigned int, id, unsigned int, id);
void __fastcall sub_119000(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_119040(int a1, int a2);
void __fastcall sub_11904C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[UIButton(WebCacheDeprecated) setBackgroundImageWithURL:forState:](struct UIButton *self, SEL, id, unsigned int);
void __cdecl -[UIButton(WebCacheDeprecated) setBackgroundImageWithURL:forState:placeholderImage:](struct UIButton *self, SEL, id, unsigned int, id);
void __cdecl -[UIButton(WebCacheDeprecated) setBackgroundImageWithURL:forState:placeholderImage:options:](struct UIButton *self, SEL, id, unsigned int, id, unsigned int);
void __cdecl -[UIButton(WebCacheDeprecated) setBackgroundImageWithURL:forState:completed:](struct UIButton *self, SEL, id, unsigned int, id);
void __fastcall sub_119190(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1191D0(int a1, int a2);
void __fastcall sub_1191DC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[UIButton(WebCacheDeprecated) setBackgroundImageWithURL:forState:placeholderImage:completed:](struct UIButton *self, SEL, id, unsigned int, id, id);
void __fastcall sub_119284(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1192C4(int a1, int a2);
void __fastcall sub_1192D0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[UIButton(WebCacheDeprecated) setBackgroundImageWithURL:forState:placeholderImage:options:completed:](struct UIButton *self, SEL, id, unsigned int, id, unsigned int, id);
void __fastcall sub_119378(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1193B8(int a1, int a2);
void __fastcall sub_1193C4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[UIButton(WebCacheDeprecated) cancelCurrentImageLoad](struct UIButton *self, SEL);
void __cdecl -[UIButton(WebCacheDeprecated) cancelBackgroundImageLoadForState:](struct UIButton *self, SEL, unsigned int);
id __cdecl +[UIImage(GIF) sd_animatedGIFWithData:](struct UIImage *self, SEL, id);
float __cdecl +[UIImage(GIF) sd_frameDurationAtIndex:source:](struct UIImage *self, SEL, unsigned int, struct CGImageSource *);
id __cdecl +[UIImage(GIF) sd_animatedGIFNamed:](struct UIImage *self, SEL, id);
id __cdecl -[UIImage(GIF) sd_animatedImageByScalingAndCroppingToSize:](struct UIImage *self, SEL, struct CGSize);
id __cdecl +[UIImage(MultiFormat) sd_imageWithData:](struct UIImage *self, SEL, id);
int __cdecl +[UIImage(MultiFormat) sd_imageOrientationFromImageData:](struct UIImage *self, SEL, id);
int __cdecl +[UIImage(MultiFormat) sd_exifOrientationToiOSOrientation:](struct UIImage *self, SEL, int);
void __cdecl -[UIImageView(HighlightedWebCache) sd_setHighlightedImageWithURL:](struct UIImageView *self, SEL, id);
void __cdecl -[UIImageView(HighlightedWebCache) sd_setHighlightedImageWithURL:options:](struct UIImageView *self, SEL, id, unsigned int);
void __cdecl -[UIImageView(HighlightedWebCache) sd_setHighlightedImageWithURL:completed:](struct UIImageView *self, SEL, id, id);
void __cdecl -[UIImageView(HighlightedWebCache) sd_setHighlightedImageWithURL:options:completed:](struct UIImageView *self, SEL, id, unsigned int, id);
void __cdecl -[UIImageView(HighlightedWebCache) sd_setHighlightedImageWithURL:options:progress:completed:](struct UIImageView *self, SEL, id, unsigned int, id, id);
void __fastcall sub_11A262(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, int a25, int a26, int a27, int a28, int a29, int a30, int a31, int a32, int a33, int a34, int a35, int a36, int a37, char a38, int a39, int a40, unsigned int a41, int a42);
int __fastcall sub_11A29C(int a1, int a2, int a3, int a4, char a5, int a6);
void __fastcall sub_11A4CE(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, int a25, int a26, int a27, int a28, int a29, int a30, int a31, int a32, int a33, int a34, int a35, int a36, unsigned int a37);
void __fastcall sub_11A4F8(int a1);
int __fastcall sub_11A57C(int a1, int a2);
void __fastcall sub_11A5B4(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_11A5E0(int a1);
int __fastcall sub_11A664(int a1, int a2);
void __fastcall sub_11A69C(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_11A6C8(int a1, int a2);
void __fastcall sub_11A6F4(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_11A714(int a1);
int __fastcall sub_11A7B4(int a1, int a2);
void __fastcall sub_11A7D0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_11A7E8(int a1);
int __fastcall sub_11A888(int a1, int a2);
void __fastcall sub_11A8A4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[UIImageView(HighlightedWebCache) sd_cancelCurrentHighlightedImageLoad](struct UIImageView *self, SEL);
void __cdecl -[UIImageView(HighlightedWebCacheDeprecated) setHighlightedImageWithURL:](struct UIImageView *self, SEL, id);
void __cdecl -[UIImageView(HighlightedWebCacheDeprecated) setHighlightedImageWithURL:options:](struct UIImageView *self, SEL, id, unsigned int);
void __cdecl -[UIImageView(HighlightedWebCacheDeprecated) setHighlightedImageWithURL:completed:](struct UIImageView *self, SEL, id, id);
void __fastcall sub_11A9B8(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_11A9F8(int a1, int a2);
void __fastcall sub_11AA04(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[UIImageView(HighlightedWebCacheDeprecated) setHighlightedImageWithURL:options:completed:](struct UIImageView *self, SEL, id, unsigned int, id);
void __fastcall sub_11AAA0(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_11AAE0(int a1, int a2);
void __fastcall sub_11AAEC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[UIImageView(HighlightedWebCacheDeprecated) setHighlightedImageWithURL:options:progress:completed:](struct UIImageView *self, SEL, id, unsigned int, id, id);
void __fastcall sub_11AB90(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_11ABD0(int a1, int a2);
void __fastcall sub_11ABDC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[UIImageView(HighlightedWebCacheDeprecated) cancelCurrentHighlightedImageLoad](struct UIImageView *self, SEL);
void __cdecl -[UIImageView(WebCache) sd_setImageWithURL:](struct UIImageView *self, SEL, id);
void __cdecl -[UIImageView(WebCache) sd_setImageWithURL:placeholderImage:](struct UIImageView *self, SEL, id, id);
void __cdecl -[UIImageView(WebCache) sd_setImageWithURL:placeholderImage:options:](struct UIImageView *self, SEL, id, id, unsigned int);
void __cdecl -[UIImageView(WebCache) sd_setImageWithURL:completed:](struct UIImageView *self, SEL, id, id);
void __cdecl -[UIImageView(WebCache) sd_setImageWithURL:placeholderImage:completed:](struct UIImageView *self, SEL, id, id, id);
void __cdecl -[UIImageView(WebCache) sd_setImageWithURL:placeholderImage:options:completed:](struct UIImageView *self, SEL, id, id, unsigned int, id);
void __cdecl -[UIImageView(WebCache) sd_setImageWithURL:placeholderImage:options:progress:completed:](struct UIImageView *self, SEL, id, id, unsigned int, id, id);
void __fastcall sub_11B10E(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, int a25, int a26, int a27, int a28, int a29, int a30, int a31, int a32, int a33, int a34, int a35, int a36, int a37, int a38, char a39, int a40, int a41, int a42, int a43, int a44, int a45, int a46, int a47, int a48, unsigned int a49, int a50);
void *__fastcall sub_11B148(int a1);
int __fastcall sub_11B160(int a1, int a2);
void __fastcall sub_11B178(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_11B190(int a1, int a2, int a3, int a4, char a5, int a6);
void __fastcall sub_11B3EC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, int a25, int a26, int a27, int a28, int a29, int a30, int a31, int a32, int a33, int a34, int a35, int a36, int a37, int a38, int a39, int a40, unsigned int a41);
void __fastcall sub_11B418(int a1);
int __fastcall sub_11B4C8(int a1, int a2);
void __fastcall sub_11B504(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_11B534(int a1);
int __fastcall sub_11B5E4(int a1, int a2);
void __fastcall sub_11B620(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_11B650(int a1, int a2);
void __fastcall sub_11B680(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_11B6A4(int a1);
int __fastcall sub_11B744(int a1, int a2);
void __fastcall sub_11B760(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_11B778(int a1);
int __fastcall sub_11B818(int a1, int a2);
void __fastcall sub_11B834(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[UIImageView(WebCache) sd_setImageWithPreviousCachedImageWithURL:andPlaceholderImage:options:progress:completed:](struct UIImageView *self, SEL, id, id, unsigned int, id, id);
id __cdecl -[UIImageView(WebCache) sd_imageURL](struct UIImageView *self, SEL);
void __cdecl -[UIImageView(WebCache) sd_setAnimationImagesWithURLs:](struct UIImageView *self, SEL, id);
void __fastcall sub_11BC58(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, int a25, int a26, int a27, int a28, int a29, int a30, int a31, int a32, int a33, int a34, int a35, int a36, char a37, int a38, int a39, unsigned int a40, int a41);
int __fastcall sub_11BCA0(int a1, int a2, int a3, int a4, int a5, int a6);
void __fastcall sub_11BE68(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, unsigned int a25);
void __fastcall sub_11BE94(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_11BF8C(int a1, int a2);
void __fastcall sub_11BFA8(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_11BFC0(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_11C0B8(int a1, int a2);
void __fastcall sub_11C0D4(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_11C0EC(int a1, int a2);
int __fastcall sub_11C0F4(int a1);
void __cdecl -[UIImageView(WebCache) sd_cancelCurrentImageLoad](struct UIImageView *self, SEL);
void __cdecl -[UIImageView(WebCache) sd_cancelCurrentAnimationImagesLoad](struct UIImageView *self, SEL);
id __cdecl -[UIImageView(WebCacheDeprecated) imageURL](struct UIImageView *self, SEL);
void __cdecl -[UIImageView(WebCacheDeprecated) setImageWithURL:](struct UIImageView *self, SEL, id);
void __cdecl -[UIImageView(WebCacheDeprecated) setImageWithURL:placeholderImage:](struct UIImageView *self, SEL, id, id);
void __cdecl -[UIImageView(WebCacheDeprecated) setImageWithURL:placeholderImage:options:](struct UIImageView *self, SEL, id, id, unsigned int);
void __cdecl -[UIImageView(WebCacheDeprecated) setImageWithURL:completed:](struct UIImageView *self, SEL, id, id);
void __fastcall sub_11C274(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_11C2B4(int a1, int a2);
void __fastcall sub_11C2C0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[UIImageView(WebCacheDeprecated) setImageWithURL:placeholderImage:completed:](struct UIImageView *self, SEL, id, id, id);
void __fastcall sub_11C364(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_11C3A4(int a1, int a2);
void __fastcall sub_11C3B0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[UIImageView(WebCacheDeprecated) setImageWithURL:placeholderImage:options:completed:](struct UIImageView *self, SEL, id, id, unsigned int, id);
void __fastcall sub_11C45C(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_11C49C(int a1, int a2);
void __fastcall sub_11C4A8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[UIImageView(WebCacheDeprecated) setImageWithURL:placeholderImage:options:progress:completed:](struct UIImageView *self, SEL, id, id, unsigned int, id, id);
void __fastcall sub_11C55C(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_11C59C(int a1, int a2);
void __fastcall sub_11C5A8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[UIImageView(WebCacheDeprecated) cancelCurrentArrayLoad](struct UIImageView *self, SEL);
void __cdecl -[UIImageView(WebCacheDeprecated) cancelCurrentImageLoad](struct UIImageView *self, SEL);
void __cdecl -[UIImageView(WebCacheDeprecated) setAnimationImagesWithURLs:](struct UIImageView *self, SEL, id);
id __cdecl -[UIView(WebCacheOperation) operationDictionary](struct UIView *self, SEL);
void __cdecl -[UIView(WebCacheOperation) sd_setImageLoadOperation:forKey:](struct UIView *self, SEL, id, id);
void __cdecl -[UIView(WebCacheOperation) sd_cancelImageLoadOperationWithKey:](struct UIView *self, SEL, id);
void __cdecl -[UIView(WebCacheOperation) sd_removeImageLoadOperationWithKey:](struct UIView *self, SEL, id);
id __cdecl -[TSBlurView toolbar](struct TSBlurView *self, SEL);
void __cdecl -[TSBlurView setBlurTintColor:](struct TSBlurView *self, SEL, id);
id __cdecl -[TSBlurView blurTintColor](struct TSBlurView *self, SEL);
void __cdecl -[TSBlurView setToolbar:](struct TSBlurView *self, SEL, id);
void __cdecl -[TSBlurView .cxx_destruct](struct TSBlurView *self, SEL);
id __cdecl +[TSMessage sharedMessage](struct TSMessage_meta *self, SEL);
void __cdecl +[TSMessage showNotificationWithTitle:type:](struct TSMessage *self, SEL, id, int);
void __cdecl +[TSMessage showNotificationWithTitle:subtitle:type:](struct TSMessage *self, SEL, id, id, int);
void __cdecl +[TSMessage showNotificationInViewController:title:subtitle:type:duration:](struct TSMessage *self, SEL, id, id, id, int, double);
void __cdecl +[TSMessage showNotificationInViewController:title:subtitle:type:duration:canBeDismissedByUser:](struct TSMessage *self, SEL, id, id, id, int, double, char);
void __cdecl +[TSMessage showNotificationInViewController:title:subtitle:type:](struct TSMessage *self, SEL, id, id, id, int);
void __cdecl +[TSMessage showNotificationInViewController:title:subtitle:image:type:duration:callback:buttonTitle:buttonCallback:atPosition:canBeDismissedByUser:](struct TSMessage *self, SEL, id, id, id, id, int, double, id, id, id, int, char);
void __cdecl +[TSMessage prepareNotificationToBeShown:](struct TSMessage *self, SEL, id);
id __cdecl -[TSMessage init](struct TSMessage *self, SEL);
void __cdecl -[TSMessage fadeInCurrentNotification](struct TSMessage *self, SEL);
void __fastcall sub_11DE56(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20, int a21, int a22, int a23, int a24, int a25, int a26, int a27, int a28, int a29, int a30, int a31, int a32, int a33, int a34, int a35, int a36, int a37, int a38, int a39, int a40, int a41, int a42, int a43, int a44, int a45, int a46, int a47, int a48, int a49, int a50, int a51, int a52, int a53, int a54, int a55, int a56, int a57, int a58, int a59, int a60, int a61, int a62, int a63);
void *__fastcall sub_11DEEC(int a1);
int __fastcall sub_11DF9C(int a1, int a2);
int __fastcall sub_11DFBC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4);
void *__fastcall sub_11DFD4(int a1);
int __fastcall sub_11E034(int a1, int a2);
void __fastcall sub_11E03C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void *__fastcall sub_11E044(int a1);
int __fastcall sub_11E058(int a1, int a2);
void __fastcall sub_11E060(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void *__fastcall sub_11E068(int a1);
int __fastcall sub_11E0C0(int a1, int a2);
void __fastcall sub_11E0D8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
char __cdecl +[TSMessage isNavigationBarInNavigationControllerHidden:](struct TSMessage *self, SEL, id);
void __cdecl -[TSMessage fadeOutNotification:](struct TSMessage *self, SEL, id);
void __cdecl -[TSMessage fadeOutNotification:animationFinishedBlock:](struct TSMessage *self, SEL, id, id);
void *__fastcall sub_11E420(int a1);
int __fastcall sub_11E478(int a1, int a2);
void __fastcall sub_11E480(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_11E488(int a1);
int __fastcall sub_11E564(int a1, int a2);
void __fastcall sub_11E588(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
char __cdecl +[TSMessage dismissActiveNotification](struct TSMessage_meta *self, SEL);
char __cdecl +[TSMessage dismissActiveNotificationWithCompletion:](struct TSMessage *self, SEL, id);
void __fastcall sub_11E690(struct objc_object *a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_11E7B0(int a1, int a2);
void __fastcall sub_11E7BC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl +[TSMessage setDefaultViewController:](struct TSMessage *self, SEL, id);
void __cdecl +[TSMessage setDelegate:](struct TSMessage *self, SEL, id);
void __cdecl +[TSMessage addCustomDesignFromFileWithName:](struct TSMessage *self, SEL, id);
char __cdecl +[TSMessage isNotificationActive](struct TSMessage_meta *self, SEL);
id __cdecl +[TSMessage queuedMessages](struct TSMessage_meta *self, SEL);
id __cdecl +[TSMessage defaultViewController](struct TSMessage_meta *self, SEL);
char __cdecl +[TSMessage iOS7StyleEnabled](struct TSMessage_meta *self, SEL);
void __fastcall sub_11E970(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[TSMessage delegate](struct TSMessage *self, SEL);
void __cdecl -[TSMessage setDelegate:](struct TSMessage *self, SEL, id);
id __cdecl -[TSMessage messages](struct TSMessage *self, SEL);
void __cdecl -[TSMessage setMessages:](struct TSMessage *self, SEL, id);
void __cdecl -[TSMessage .cxx_destruct](struct TSMessage *self, SEL);
id __cdecl +[TSMessageView notificationDesign](struct TSMessageView_meta *self, SEL);
void __cdecl +[TSMessageView addNotificationDesignFromFile:](struct TSMessageView *self, SEL, id);
float __cdecl -[TSMessageView padding](struct TSMessageView *self, SEL);
id __cdecl -[TSMessageView initWithTitle:subtitle:image:type:duration:inViewController:callback:buttonTitle:buttonCallback:atPosition:canBeDismissedByUser:](struct TSMessageView *self, SEL, id, id, id, int, float, id, id, id, id, int, char);
float __cdecl -[TSMessageView updateHeightOfMessageView](struct TSMessageView *self, SEL);
void __cdecl -[TSMessageView layoutSubviews](struct TSMessageView *self, SEL);
void __cdecl -[TSMessageView fadeMeOut](struct TSMessageView *self, SEL);
void __cdecl -[TSMessageView didMoveToWindow](struct TSMessageView *self, SEL);
void __cdecl -[TSMessageView buttonTapped:](struct TSMessageView *self, SEL, id);
void __cdecl -[TSMessageView handleTap:](struct TSMessageView *self, SEL, id);
char __cdecl -[TSMessageView gestureRecognizer:shouldReceiveTouch:](struct TSMessageView *self, SEL, id, id);
id __cdecl -[TSMessageView title](struct TSMessageView *self, SEL);
void __cdecl -[TSMessageView setTitle:](struct TSMessageView *self, SEL, id);
id __cdecl -[TSMessageView subtitle](struct TSMessageView *self, SEL);
void __cdecl -[TSMessageView setSubtitle:](struct TSMessageView *self, SEL, id);
id __cdecl -[TSMessageView viewController](struct TSMessageView *self, SEL);
void __cdecl -[TSMessageView setViewController:](struct TSMessageView *self, SEL, id);
float __cdecl -[TSMessageView duration](struct TSMessageView *self, SEL);
void __cdecl -[TSMessageView setDuration:](struct TSMessageView *self, SEL, float);
int __cdecl -[TSMessageView messagePosition](struct TSMessageView *self, SEL);
void __cdecl -[TSMessageView setMessagePosition:](struct TSMessageView *self, SEL, int);
char __cdecl -[TSMessageView messageIsFullyDisplayed](struct TSMessageView *self, SEL);
void __cdecl -[TSMessageView setMessageIsFullyDisplayed:](struct TSMessageView *self, SEL, char);
id __cdecl -[TSMessageView buttonTitle](struct TSMessageView *self, SEL);
void __cdecl -[TSMessageView setButtonTitle:](struct TSMessageView *self, SEL, id);
id __cdecl -[TSMessageView titleLabel](struct TSMessageView *self, SEL);
void __cdecl -[TSMessageView setTitleLabel:](struct TSMessageView *self, SEL, id);
id __cdecl -[TSMessageView contentLabel](struct TSMessageView *self, SEL);
void __cdecl -[TSMessageView setContentLabel:](struct TSMessageView *self, SEL, id);
id __cdecl -[TSMessageView iconImageView](struct TSMessageView *self, SEL);
void __cdecl -[TSMessageView setIconImageView:](struct TSMessageView *self, SEL, id);
id __cdecl -[TSMessageView button](struct TSMessageView *self, SEL);
void __cdecl -[TSMessageView setButton:](struct TSMessageView *self, SEL, id);
id __cdecl -[TSMessageView borderView](struct TSMessageView *self, SEL);
void __cdecl -[TSMessageView setBorderView:](struct TSMessageView *self, SEL, id);
id __cdecl -[TSMessageView backgroundImageView](struct TSMessageView *self, SEL);
void __cdecl -[TSMessageView setBackgroundImageView:](struct TSMessageView *self, SEL, id);
id __cdecl -[TSMessageView backgroundBlurView](struct TSMessageView *self, SEL);
void __cdecl -[TSMessageView setBackgroundBlurView:](struct TSMessageView *self, SEL, id);
float __cdecl -[TSMessageView textSpaceLeft](struct TSMessageView *self, SEL);
void __cdecl -[TSMessageView setTextSpaceLeft:](struct TSMessageView *self, SEL, float);
float __cdecl -[TSMessageView textSpaceRight](struct TSMessageView *self, SEL);
void __cdecl -[TSMessageView setTextSpaceRight:](struct TSMessageView *self, SEL, float);
id __cdecl -[TSMessageView callback](struct TSMessageView *self, SEL);
void __cdecl -[TSMessageView setCallback:](struct TSMessageView *self, SEL, id);
id __cdecl -[TSMessageView buttonCallback](struct TSMessageView *self, SEL);
void __cdecl -[TSMessageView setButtonCallback:](struct TSMessageView *self, SEL, id);
void __cdecl -[TSMessageView .cxx_destruct](struct TSMessageView *self, SEL);
void __fastcall sub_121820(int a1, int a2);
void __fastcall sub_121928(int a1);
void __cdecl +[GADGestureUtil reachability:](struct GADGestureUtil *self, SEL, unsigned int *);
void __fastcall sub_121A8C(int a1);
void __fastcall sub_121BD0(int a1);
SEL __fastcall sub_121DC0(int a1, int a2);
int __fastcall sub_1225C8(int a1, int a2);
int __fastcall sub_1225D4(int a1, int a2);
void __fastcall sub_122610(int a1, int a2);
void sub_122650();
void __fastcall sub_122934(int a1, int a2, int a3, int a4);
int __fastcall sub_1229C0(int a1, int a2, int a3, int a4, int a5, int a6);
int __fastcall sub_1229CC(int a1, int a2, int a3, int a4, int a5, int a6);
void sub_122A1C();
void __fastcall sub_122A70(const char *a1);
void __fastcall sub_122AE8(int a1);
void sub_122B8C();
int __fastcall sub_12370C(int a1, int a2, int a3, int a4, int a5, unsigned int a6, int a7, int a8, int a9, int a10, int a11, int a12, char a13, unsigned int a14, unsigned int a15);
int __fastcall sub_123718(int a1, int a2, int a3, int a4, int a5, unsigned int a6, int a7, int a8, int a9, int a10, int a11, int a12, char a13, unsigned int a14, unsigned int a15);
int __fastcall sub_123894(int a1, int a2, int a3, int a4, int a5, unsigned int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, unsigned int a14, unsigned int a15);
signed int __fastcall sub_123A08(int a1, int a2);
void __fastcall sub_123ABC(int a1, int a2);
int __fastcall sub_123AE8(int a1, int a2, int a3, int a4, int a5, int (__fastcall *a6)(_DWORD));
int __fastcall sub_123C58(char a1, int a2, int a3, int a4, int a5, int (__fastcall *a6)(_DWORD));
int sub_123C7C();
int sub_123CAC(void); // weak
void sub_123D90();
void __fastcall sub_1240E4(int a1);
void __fastcall sub_1241BC(int a1);
void sub_124404();
void __fastcall sub_124480(int a1);
int sub_124544();
void sub_12455C();
int __fastcall sub_124614(int a1, int a2, int (__cdecl *a3)(_DWORD, _DWORD, _DWORD));
int __fastcall sub_124620(int a1, int a2, int (__cdecl *a3)(_DWORD, _DWORD, _DWORD));
void __fastcall sub_124724(int a1);
int *__fastcall sub_1247B8(int *result, int a2, int a3);
void sub_124830();
void __fastcall sub_1248B0(int a1, unsigned int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, char *a16, __int16 a17, void *a18, void *a19, size_t a20, char a21, void *a22, void *a23, size_t a24);
void __fastcall sub_124A40(char a1);
int __fastcall sub_124A94(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, char *a16, __int16 a17, void *a18, void *a19, size_t a20, char a21, void *a22, void *a23, size_t a24);
void __fastcall sub_124D14(int a1, int a2, int a3, int a4);
void __fastcall sub_124DA4(int a1, int a2);
int __fastcall sub_124E10(int a1, int a2, int a3);
int __fastcall sub_124FA4(_DWORD); // weak
int __fastcall sub_124FEC(_DWORD); // weak
int __fastcall sub_125094(int a1);
int __fastcall sub_1250C8(_DWORD); // weak
int __fastcall sub_1251B8(_DWORD); // weak
int __fastcall sub_12549C(_DWORD); // weak
int __fastcall sub_125500(_DWORD); // weak
int __fastcall sub_1255FC(_DWORD); // weak
int nullsub_36(void); // weak
void __fastcall sub_12589C(int a1, int a2, int a3, int a4, int a5);
void __fastcall sub_12591C(int a1, int a2, signed int a3, int a4, int a5);
int __fastcall sub_1259A0(int a1, int a2, int a3, int a4, int a5, __CFString *a6);
int __fastcall sub_1259AC(int a1, int a2, int a3, int a4, int a5, __CFString *a6);
int __fastcall sub_125AB0(int a1, int a2, int a3, int a4, int a5, __CFString *a6);
int __fastcall sub_125AE0(int a1, int a2, int a3, int a4, int a5, __CFString *a6);
int __fastcall sub_125BD4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, Dl_info a8);
// int __usercall sub_125BE0@<R0>(int a1@<R0>, int a2@<R1>, int a3@<R2>, Dl_info a4@<R3>, int a5, int a6, int a7, Dl_info a8);
int __fastcall sub_125D34(int a1, char *a2, int a3, int a4, int a5, char *a6);
int __fastcall sub_125D40(int a1, char *a2, int a3, int a4, int a5, char *a6);
void sub_125DEC();
int sub_125F14();
int sub_125F3C(void); // weak
int sub_125F78();
int __fastcall sub_125FA4(char a1);
int __fastcall sub_125FAC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, Dl_info a8);
void __fastcall sub_125FD8(char a1);
int __fastcall sub_125FE0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, char *a16, __int16 a17, void *a18, void *a19, size_t a20, char a21, void *a22, void *a23, size_t a24);
int sub_125FE8();
int __fastcall sub_125FF0(__int16 a1);
int __fastcall sub_12601C(int a1, int a2);
int __fastcall sub_126048(int a1, int a2, int a3, int a4, int a5, unsigned int a6, int a7, int a8, int a9, int a10, int a11, int a12, char a13, unsigned int a14, unsigned int a15);
int __fastcall sub_126050(int a1, int a2, int a3, int a4, int a5, __CFString *a6);
int __fastcall sub_126058(int a1, int a2, int a3, int a4, int a5, __CFString *a6);
int __fastcall sub_126084(__int16 a1);
int __fastcall sub_12608C(int a1, int a2, int a3, int a4, int a5, int a6);
int __fastcall sub_126094(char a1);
int __fastcall sub_1260C0(__int16 a1);
int __fastcall sub_1260C8(char a1);
int __fastcall sub_1260F4(__int16 a1);
int __fastcall sub_1260FC(int a1, char *a2, int a3, int a4, int a5, char *a6);
int __fastcall sub_126104(char a1);
int __fastcall sub_12610C(int a1, int a2, int (__cdecl *a3)(_DWORD, _DWORD, _DWORD));
int sub_126114();
int __fastcall sub_12611C(char a1, int a2, int a3, int a4, int a5, int (__fastcall *a6)(_DWORD));
int __fastcall sub_126124(int a1, int a2, int a3, int a4, int a5, unsigned int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, unsigned int a14, unsigned int a15);
int __fastcall sub_12612C(int a1, int a2, int a3, int a4, int a5, int a6, void *a7);
int __fastcall sub_126138(int a1, int a2, int a3, int a4, int a5, int a6, void *a7);
void __fastcall sub_126190(void **a1);
void __fastcall sub_1261BC(int a1, int a2, int a3);
int __fastcall sub_1261FC(unsigned int a1, int a2, int a3, int a4, int a5, int (*a6)(void));
int __fastcall sub_126354(int a1, char a2, int a3, int a4, int a5, int (*a6)(void));
void __fastcall sub_126398(int a1, unsigned int a2);
int __fastcall sub_126464(signed __int64 a1, int a2, int a3, int a4, int (*a5)(void), int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15);
int __fastcall sub_1266B4(int a1, int a2, int a3, int a4, int a5, int (*a6)(void), int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16);
int __fastcall sub_1266E8(int a1, unsigned int a2, int a3, int a4, int a5, int a6, unsigned int a7);
int __fastcall sub_1266F4(int a1, unsigned int a2, int a3, int a4, int a5, int a6, unsigned int a7);
int __cdecl sub_126744(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD); // weak
int __fastcall sub_12678C(_DWORD, _DWORD, _DWORD); // weak
unsigned int __fastcall sub_1267F0(unsigned int a1, unsigned int a2);
int __fastcall sub_12682C(int a1, int a2, int a3, int a4, int a5, int (*a6)(void), int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16);
int __fastcall sub_126834(int a1, int a2, int a3, int a4, int a5, int a6, void *a7);
int __fastcall sub_126860(int a1, unsigned int a2, int a3, int a4, int a5, int a6, unsigned int a7);
int __fastcall sub_126868(int a1, char a2, int a3, int a4, int a5, int (*a6)(void));
void __fastcall sub_126870(int a1, int a2);
int __fastcall sub_126900(int a1, int a2);
int __fastcall sub_12D7E0(int a1);
int __fastcall sub_134958(int a1);
int __fastcall sub_13BB24(int a1);
int __fastcall sub_142C70(int a1);
int __fastcall sub_149DEC(int a1);
int __fastcall sub_150F94(int a1);
int __fastcall sub_158128(int a1);
int __fastcall sub_15F278(int a1);
int __fastcall sub_166424(int a1);
int __fastcall sub_16D544(int a1);
int __fastcall sub_174604(int a1, int a2, int a3);
int sub_1753BC();
int sub_1753C8(void); // weak
int __fastcall sub_17546C(int result);
void __fastcall sub_1754DC(int a1, int a2, unsigned int a3);
void __fastcall sub_175598(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16);
void __fastcall sub_175654(int a1, int a2, unsigned int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16);
void __fastcall sub_175750(int a1);
void sub_175918();
void __fastcall sub_17594C(char a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, char a20);
int sub_175ABC();
void __fastcall sub_175AE8(char a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, char a20);
void sub_175AF0();
void __fastcall sub_175AF8(int a1, int a2, unsigned int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16);
int sub_175B00();
int sub_175B0C(void); // weak
void __fastcall sub_175BE0(int a1, unsigned int a2, int a3, int a4);
void __fastcall sub_175D1C(int a1, unsigned int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15);
void __fastcall sub_175EE0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15);
void __fastcall sub_175F68(int a1, int a2, unsigned int a3);
void __fastcall sub_176098(int a1, unsigned int a2);
int __fastcall sub_176178(int a1, int a2, int a3, int a4, int a5, int a6, int a7);
int __fastcall sub_176184(int a1, int a2, int a3, int a4, int a5, int a6, int a7);
int __fastcall sub_1762B0(int a1, int a2, int a3, int a4, int a5, int a6, int a7);
void __fastcall sub_1762B8(unsigned __int8 a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15);
int sub_1762C0();
void __fastcall sub_1762EC(int a1, int a2);
void __fastcall sub_1763B8(int a1);
id __cdecl +[GADGestureIdUtil sharedInstance](struct GADGestureIdUtil_meta *self, SEL);
id __cdecl -[GADGestureIdUtil init](struct GADGestureIdUtil *self, SEL);
void __cdecl -[GADGestureIdUtil dealloc](struct GADGestureIdUtil *self, SEL);
void __cdecl +[GADGestureIdUtil getOSMajor:minor:bugFix:](struct GADGestureIdUtil *self, SEL, int *, int *, int *);
char __cdecl +[GADGestureIdUtil isOSAtLeastMajor:minor:bug:](struct GADGestureIdUtil *self, SEL, int32_t, int32_t, int32_t);
id __cdecl -[GADGestureIdUtil osVersion](struct GADGestureIdUtil *self, SEL);
id __cdecl -[GADGestureIdUtil deviceIdentifier](struct GADGestureIdUtil *self, SEL);
id __cdecl -[GADGestureIdUtil deviceIdentifierType](struct GADGestureIdUtil *self, SEL);
char __cdecl -[GADGestureIdUtil deviceOptedOut](struct GADGestureIdUtil *self, SEL);
id __cdecl -[GADGestureIdUtil userDefaults](struct GADGestureIdUtil *self, SEL);
void __cdecl -[GADGestureIdUtil setUserDefaults:](struct GADGestureIdUtil *self, SEL, id);
void __fastcall sub_177338(int a1);
void sub_177460();
id __cdecl -[GADMWebViewRenderedChecker initWithWebView:delegate:](struct GADMWebViewRenderedChecker *self, SEL, id, id);
void __cdecl -[GADMWebViewRenderedChecker checkIsContentRenderedInWebView](struct GADMWebViewRenderedChecker *self, SEL);
float __cdecl -[GADMWebViewRenderedChecker percentOfImage:ofColor:](struct GADMWebViewRenderedChecker *self, SEL, id, id);
id __cdecl -[GADMWebViewRenderedChecker webView](struct GADMWebViewRenderedChecker *self, SEL);
void __cdecl -[GADMWebViewRenderedChecker setWebView:](struct GADMWebViewRenderedChecker *self, SEL, id);
id __cdecl -[GADMWebViewRenderedChecker delegate](struct GADMWebViewRenderedChecker *self, SEL);
void __cdecl -[GADMWebViewRenderedChecker setDelegate:](struct GADMWebViewRenderedChecker *self, SEL, id);
id __cdecl -[GADMAdapterHTML initWithGADMAdNetworkConnector:](struct GADMAdapterHTML *self, SEL, id);
void __cdecl -[GADMAdapterHTML dealloc](struct GADMAdapterHTML *self, SEL);
void __cdecl -[GADMAdapterHTML clearWebView](struct GADMAdapterHTML *self, SEL);
void __cdecl -[GADMAdapterHTML failInterstitialRequest](struct GADMAdapterHTML *self, SEL);
void __cdecl -[GADMAdapterHTML startRenderingTimer](struct GADMAdapterHTML *self, SEL);
void __cdecl -[GADMAdapterHTML stopRenderingTimer](struct GADMAdapterHTML *self, SEL);
id __cdecl -[GADMAdapterHTML errorWithCode:text:](struct GADMAdapterHTML *self, SEL, int, id);
void __cdecl -[GADMAdapterHTML webView:isRendered:](struct GADMAdapterHTML *self, SEL, id, char);
id __cdecl +[GADMAdapterHTML adapterVersion](struct GADMAdapterHTML_meta *self, SEL);
Class __cdecl +[GADMAdapterHTML networkExtrasClass](struct GADMAdapterHTML_meta *self, SEL);
void __cdecl -[GADMAdapterHTML getBannerWithSize:](struct GADMAdapterHTML *self, SEL, struct GADAdSize);
void __cdecl -[GADMAdapterHTML createWebViewWithSize:](struct GADMAdapterHTML *self, SEL, struct GADAdSize);
void __cdecl -[GADMAdapterHTML getInterstitial](struct GADMAdapterHTML *self, SEL);
void __cdecl -[GADMAdapterHTML stopBeingDelegate](struct GADMAdapterHTML *self, SEL);
char __cdecl -[GADMAdapterHTML isBannerAnimationOK:](struct GADMAdapterHTML *self, SEL, int);
void __cdecl -[GADMAdapterHTML presentInterstitialFromRootViewController:](struct GADMAdapterHTML *self, SEL, id);
id __cdecl -[GADMAdapterHTML stripTrailingSlashFromPath:](struct GADMAdapterHTML *self, SEL, id);
char __cdecl -[GADMAdapterHTML isPath:equivalentToPath:](struct GADMAdapterHTML *self, SEL, id, id);
char __cdecl -[GADMAdapterHTML isPassbackRequest:](struct GADMAdapterHTML *self, SEL, id);
char __cdecl -[GADMAdapterHTML webView:shouldStartLoadWithRequest:navigationType:](struct GADMAdapterHTML *self, SEL, id, id, int);
id __cdecl -[GADMAdapterHTML webView](struct GADMAdapterHTML *self, SEL);
void __cdecl -[GADMAdapterHTML setWebView:](struct GADMAdapterHTML *self, SEL, id);
id __cdecl -[GADMAdapterHTML passbackUrl](struct GADMAdapterHTML *self, SEL);
void __cdecl -[GADMAdapterHTML setPassbackUrl:](struct GADMAdapterHTML *self, SEL, id);
id __cdecl -[GADMAdapterHTML connector](struct GADMAdapterHTML *self, SEL);
void __cdecl -[GADMAdapterHTML setConnector:](struct GADMAdapterHTML *self, SEL, id);
int __fastcall nullsub_37(_DWORD); // weak
void __cdecl -[GADClickTrackerCollection trackMediationURLsFromTemplates:defaultTemplate:networkID:allocationID:qData:appKey:refresh:durations:exitCodes:](struct GADClickTrackerCollection *self, SEL, id, id, id, id, id, id, char, id, id);
void __cdecl -[GADMRewardBasedVideoAdNetworkConnector askAdapterToStopBeingDelegate](struct GADMRewardBasedVideoAdNetworkConnector *self, SEL);
void __cdecl -[GADMRewardBasedVideoAdNetworkConnector setAdNetworkConfig:](struct GADMRewardBasedVideoAdNetworkConnector *self, SEL, id);
void __cdecl -[GADMRewardBasedVideoAdNetworkConnector setUpAdapterWithUserID:](struct GADMRewardBasedVideoAdNetworkConnector *self, SEL, id);
void __cdecl -[GADMRewardBasedVideoAdNetworkConnector requestRewardBasedVideoAd](struct GADMRewardBasedVideoAdNetworkConnector *self, SEL);
void __cdecl -[GADMRewardBasedVideoAdNetworkConnector presentRewardBasedVideoAdFromRootViewController:](struct GADMRewardBasedVideoAdNetworkConnector *self, SEL, id);
void __cdecl -[GADMRewardBasedVideoAdNetworkConnector pingURLs:defaultTemplate:](struct GADMRewardBasedVideoAdNetworkConnector *self, SEL, id, id);
void __cdecl -[GADMRewardBasedVideoAdNetworkConnector pingClickURLs](struct GADMRewardBasedVideoAdNetworkConnector *self, SEL);
void __cdecl -[GADMRewardBasedVideoAdNetworkConnector pingImpressionURLs](struct GADMRewardBasedVideoAdNetworkConnector *self, SEL);
void __cdecl -[GADMRewardBasedVideoAdNetworkConnector pingVideoStartPlayingURLs](struct GADMRewardBasedVideoAdNetworkConnector *self, SEL);
void __cdecl -[GADMRewardBasedVideoAdNetworkConnector pingRewardedUserURLs](struct GADMRewardBasedVideoAdNetworkConnector *self, SEL);
void __cdecl -[GADMRewardBasedVideoAdNetworkConnector adapterDidSetUpRewardBasedVideoAd:](struct GADMRewardBasedVideoAdNetworkConnector *self, SEL, id);
void __cdecl -[GADMRewardBasedVideoAdNetworkConnector adapter:didFailToSetUpRewardBasedVideoAdWithError:](struct GADMRewardBasedVideoAdNetworkConnector *self, SEL, id, id);
void __cdecl -[GADMRewardBasedVideoAdNetworkConnector adapterDidReceiveRewardBasedVideoAd:](struct GADMRewardBasedVideoAdNetworkConnector *self, SEL, id);
void __cdecl -[GADMRewardBasedVideoAdNetworkConnector adapter:didFailToLoadRewardBasedVideoAdwithError:](struct GADMRewardBasedVideoAdNetworkConnector *self, SEL, id, id);
void __cdecl -[GADMRewardBasedVideoAdNetworkConnector adapterDidGetAdClick:](struct GADMRewardBasedVideoAdNetworkConnector *self, SEL, id);
void __cdecl -[GADMRewardBasedVideoAdNetworkConnector adapter:didRewardUserWithReward:](struct GADMRewardBasedVideoAdNetworkConnector *self, SEL, id, id);
void __cdecl -[GADMRewardBasedVideoAdNetworkConnector adapterDidOpenRewardBasedVideoAd:](struct GADMRewardBasedVideoAdNetworkConnector *self, SEL, id);
void __cdecl -[GADMRewardBasedVideoAdNetworkConnector adapterDidStartPlayingRewardBasedVideoAd:](struct GADMRewardBasedVideoAdNetworkConnector *self, SEL, id);
void __cdecl -[GADMRewardBasedVideoAdNetworkConnector adapterDidCloseRewardBasedVideoAd:](struct GADMRewardBasedVideoAdNetworkConnector *self, SEL, id);
void __cdecl -[GADMRewardBasedVideoAdNetworkConnector adapterWillLeaveApplication:](struct GADMRewardBasedVideoAdNetworkConnector *self, SEL, id);
id __cdecl -[GADMRewardBasedVideoAdNetworkConnector publisherId](struct GADMRewardBasedVideoAdNetworkConnector *self, SEL);
id __cdecl -[GADMRewardBasedVideoAdNetworkConnector credentials](struct GADMRewardBasedVideoAdNetworkConnector *self, SEL);
char __cdecl -[GADMRewardBasedVideoAdNetworkConnector testMode](struct GADMRewardBasedVideoAdNetworkConnector *self, SEL);
id __cdecl -[GADMRewardBasedVideoAdNetworkConnector networkExtras](struct GADMRewardBasedVideoAdNetworkConnector *self, SEL);
id __cdecl -[GADMRewardBasedVideoAdNetworkConnector childDirectedTreatment](struct GADMRewardBasedVideoAdNetworkConnector *self, SEL);
int __cdecl -[GADMRewardBasedVideoAdNetworkConnector userGender](struct GADMRewardBasedVideoAdNetworkConnector *self, SEL);
id __cdecl -[GADMRewardBasedVideoAdNetworkConnector userBirthday](struct GADMRewardBasedVideoAdNetworkConnector *self, SEL);
char __cdecl -[GADMRewardBasedVideoAdNetworkConnector userHasLocation](struct GADMRewardBasedVideoAdNetworkConnector *self, SEL);
id __cdecl -[GADMRewardBasedVideoAdNetworkConnector userLocation](struct GADMRewardBasedVideoAdNetworkConnector *self, SEL);
float __cdecl -[GADMRewardBasedVideoAdNetworkConnector userLatitude](struct GADMRewardBasedVideoAdNetworkConnector *self, SEL);
float __cdecl -[GADMRewardBasedVideoAdNetworkConnector userLongitude](struct GADMRewardBasedVideoAdNetworkConnector *self, SEL);
float __cdecl -[GADMRewardBasedVideoAdNetworkConnector userLocationAccuracyInMeters](struct GADMRewardBasedVideoAdNetworkConnector *self, SEL);
id __cdecl -[GADMRewardBasedVideoAdNetworkConnector userLocationDescription](struct GADMRewardBasedVideoAdNetworkConnector *self, SEL);
id __cdecl -[GADMRewardBasedVideoAdNetworkConnector userKeywords](struct GADMRewardBasedVideoAdNetworkConnector *self, SEL);
id __cdecl -[GADMRewardBasedVideoAdNetworkConnector mediationConfig](struct GADMRewardBasedVideoAdNetworkConnector *self, SEL);
void __cdecl -[GADMRewardBasedVideoAdNetworkConnector setMediationConfig:](struct GADMRewardBasedVideoAdNetworkConnector *self, SEL, id);
id __cdecl -[GADMRewardBasedVideoAdNetworkConnector adNetworkConfig](struct GADMRewardBasedVideoAdNetworkConnector *self, SEL);
id __cdecl -[GADMRewardBasedVideoAdNetworkConnector rewardBasedVideoAd](struct GADMRewardBasedVideoAdNetworkConnector *self, SEL);
void __cdecl -[GADMRewardBasedVideoAdNetworkConnector setRewardBasedVideoAd:](struct GADMRewardBasedVideoAdNetworkConnector *self, SEL, id);
id __cdecl -[GADMRewardBasedVideoAdNetworkConnector delegate](struct GADMRewardBasedVideoAdNetworkConnector *self, SEL);
void __cdecl -[GADMRewardBasedVideoAdNetworkConnector setDelegate:](struct GADMRewardBasedVideoAdNetworkConnector *self, SEL, id);
id __cdecl -[GADMRewardBasedVideoAdNetworkConnector request](struct GADMRewardBasedVideoAdNetworkConnector *self, SEL);
void __cdecl -[GADMRewardBasedVideoAdNetworkConnector setRequest:](struct GADMRewardBasedVideoAdNetworkConnector *self, SEL, id);
void __cdecl -[GADMRewardBasedVideoAdNetworkConnector .cxx_destruct](struct GADMRewardBasedVideoAdNetworkConnector *self, SEL);
id __cdecl +[GADDefaultInAppPurchaseFlow sharedInstance](struct GADDefaultInAppPurchaseFlow_meta *self, SEL);
void __fastcall sub_179DC8(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[GADDefaultInAppPurchaseFlow init](struct GADDefaultInAppPurchaseFlow *self, SEL);
char __cdecl -[GADDefaultInAppPurchaseFlow isDefaultPurchaseFlowEnabled](struct GADDefaultInAppPurchaseFlow *self, SEL);
void __cdecl -[GADDefaultInAppPurchaseFlow enableDefaultPurchaseFlowWithDelegate:](struct GADDefaultInAppPurchaseFlow *self, SEL, id);
void __cdecl -[GADDefaultInAppPurchaseFlow disableDefaultPurchaseFlow](struct GADDefaultInAppPurchaseFlow *self, SEL);
void __cdecl -[GADDefaultInAppPurchaseFlow enqueueInAppPurchase:](struct GADDefaultInAppPurchaseFlow *self, SEL, id);
id __cdecl -[GADDefaultInAppPurchaseFlow dequeueInAppPurchaseForTransaction:](struct GADDefaultInAppPurchaseFlow *self, SEL, id);
void __cdecl -[GADDefaultInAppPurchaseFlow completeTransaction:](struct GADDefaultInAppPurchaseFlow *self, SEL, id);
void __cdecl -[GADDefaultInAppPurchaseFlow failedTransaction:](struct GADDefaultInAppPurchaseFlow *self, SEL, id);
void __cdecl -[GADDefaultInAppPurchaseFlow purchaseProduct:inAppPurchase:](struct GADDefaultInAppPurchaseFlow *self, SEL, id, id);
void __cdecl -[GADDefaultInAppPurchaseFlow notifyUserOfUnavailableProduct](struct GADDefaultInAppPurchaseFlow *self, SEL);
void __cdecl -[GADDefaultInAppPurchaseFlow didReceiveInAppPurchase:](struct GADDefaultInAppPurchaseFlow *self, SEL, id);
void __fastcall sub_17AAE8(int a1, void *a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_17AD2C(int a1, int a2);
void __fastcall sub_17AD4C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADDefaultInAppPurchaseFlow paymentQueue:updatedTransactions:](struct GADDefaultInAppPurchaseFlow *self, SEL, id, id);
void __cdecl -[GADDefaultInAppPurchaseFlow .cxx_destruct](struct GADDefaultInAppPurchaseFlow *self, SEL);
int __fastcall nullsub_38(_DWORD); // weak
id __cdecl -[GADApplication fingerprintWithServedPenaltyDeduction](struct GADApplication *self, SEL);
void __cdecl -[GADApplication startContentHashing](struct GADApplication *self, SEL);
int __fastcall sub_17B43C(int a1);
int __fastcall sub_17B718(int a1, int a2);
void __fastcall sub_17B72C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_17B734(int a1, int a2, int a3);
void *__fastcall sub_17B944(int a1);
int __fastcall sub_17B960(int a1, int a2);
void __fastcall sub_17B980(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_17B9A0(int a1, int a2);
void __fastcall sub_17B9C8(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_17B9EC(int a1, char a2);
void __fastcall sub_17BAB0(int a1);
int __fastcall sub_17BB40(int a1, int a2);
void __fastcall sub_17BB60(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_17BB80(int a1, int a2);
void __fastcall sub_17BBB8(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_17BBE4(int a1, int a2);
int __fastcall sub_17BC14(int a1, void *a2, struct objc_object *a3, struct objc_object *a4);
void __cdecl -[GADApplication stopContentHashing](struct GADApplication *self, SEL);
id __cdecl +[GAD_GTMStringEncoding binaryStringEncoding](struct GAD_GTMStringEncoding_meta *self, SEL);
id __cdecl +[GAD_GTMStringEncoding hexStringEncoding](struct GAD_GTMStringEncoding_meta *self, SEL);
id __cdecl +[GAD_GTMStringEncoding rfc4648Base32StringEncoding](struct GAD_GTMStringEncoding_meta *self, SEL);
id __cdecl +[GAD_GTMStringEncoding rfc4648Base32HexStringEncoding](struct GAD_GTMStringEncoding_meta *self, SEL);
id __cdecl +[GAD_GTMStringEncoding crockfordBase32StringEncoding](struct GAD_GTMStringEncoding_meta *self, SEL);
id __cdecl +[GAD_GTMStringEncoding rfc4648Base64StringEncoding](struct GAD_GTMStringEncoding_meta *self, SEL);
id __cdecl +[GAD_GTMStringEncoding rfc4648Base64WebsafeStringEncoding](struct GAD_GTMStringEncoding_meta *self, SEL);
id __cdecl +[GAD_GTMStringEncoding stringEncodingWithString:](struct GAD_GTMStringEncoding *self, SEL, id);
id __cdecl -[GAD_GTMStringEncoding initWithString:](struct GAD_GTMStringEncoding *self, SEL, id);
id __cdecl -[GAD_GTMStringEncoding description](struct GAD_GTMStringEncoding *self, SEL);
void __cdecl -[GAD_GTMStringEncoding addDecodeSynonyms:](struct GAD_GTMStringEncoding *self, SEL, id);
void __cdecl -[GAD_GTMStringEncoding ignoreCharacters:](struct GAD_GTMStringEncoding *self, SEL, id);
char __cdecl -[GAD_GTMStringEncoding doPad](struct GAD_GTMStringEncoding *self, SEL);
void __cdecl -[GAD_GTMStringEncoding setDoPad:](struct GAD_GTMStringEncoding *self, SEL, char);
void __cdecl -[GAD_GTMStringEncoding setPaddingChar:](struct GAD_GTMStringEncoding *self, SEL, char);
id __cdecl -[GAD_GTMStringEncoding encode:](struct GAD_GTMStringEncoding *self, SEL, id);
id __cdecl -[GAD_GTMStringEncoding encodeString:](struct GAD_GTMStringEncoding *self, SEL, id);
id __cdecl -[GAD_GTMStringEncoding decode:](struct GAD_GTMStringEncoding *self, SEL, id);
id __cdecl -[GAD_GTMStringEncoding stringByDecoding:](struct GAD_GTMStringEncoding *self, SEL, id);
void __cdecl -[GAD_GTMStringEncoding .cxx_destruct](struct GAD_GTMStringEncoding *self, SEL);
id __cdecl +[GADSKStoreProductViewControllerDelegate sharedInstance](struct GADSKStoreProductViewControllerDelegate_meta *self, SEL);
void __fastcall sub_17C944(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[GADSKStoreProductViewControllerDelegate productViewControllerDidFinish:](struct GADSKStoreProductViewControllerDelegate *self, SEL, id);
id __cdecl -[GADActiveViewMonitor initWithView:](struct GADActiveViewMonitor *self, SEL, id);
id __cdecl -[GADActiveViewMonitor init](struct GADActiveViewMonitor *self, SEL);
void __cdecl -[GADActiveViewMonitor dealloc](struct GADActiveViewMonitor *self, SEL);
void __cdecl -[GADActiveViewMonitor startMonitoring](struct GADActiveViewMonitor *self, SEL);
int __fastcall sub_17CC30(int a1);
int __fastcall sub_17CE84(int a1, int a2);
void __fastcall sub_17D038(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_17D068(int a1, int a2);
int __fastcall sub_17D074(int a1);
int __fastcall sub_17D07C(int a1, int a2);
int __fastcall sub_17D0A4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4);
int __fastcall sub_17D0C4(int a1, int a2);
void __fastcall sub_17D0CC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADActiveViewMonitor sample](struct GADActiveViewMonitor *self, SEL);
void *__fastcall sub_17D140(int a1);
int __fastcall sub_17D154(int a1, int a2);
void __fastcall sub_17D15C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADActiveViewMonitor stopMonitoring](struct GADActiveViewMonitor *self, SEL);
void __fastcall sub_17D1E4(int a1, int a2);
void *__fastcall sub_17D284(int a1);
int __fastcall sub_17D298(int a1, int a2);
void __fastcall sub_17D2A0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_17D2A8(int a1, int a2);
void __fastcall sub_17D2B0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADActiveViewMonitor updateViewBounds](struct GADActiveViewMonitor *self, SEL);
int __fastcall sub_17D42C(int a1);
int __fastcall sub_17D468(int a1, int a2);
void __fastcall sub_17D470(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADActiveViewMonitor setDelegate:](struct GADActiveViewMonitor *self, SEL, id);
int __fastcall sub_17D52C(int a1);
int __fastcall sub_17D54C(int a1, int a2);
void __fastcall sub_17D56C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[GADActiveViewMonitor delegate](struct GADActiveViewMonitor *self, SEL);
int __fastcall sub_17D670(int a1, int a2);
void __fastcall sub_17D684(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_17D68C(int a1);
int __fastcall sub_17D6B0(int a1, int a2);
void __fastcall sub_17D6D8(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[GADActiveViewMonitor setMonitoredViewVisibleBounds:](struct GADActiveViewMonitor *self, SEL, struct CGRect);
int __fastcall sub_17D79C(int a1);
int __fastcall sub_17D7C0(int a1, int a2);
void __fastcall sub_17D7C8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
struct CGRect *__cdecl -[GADActiveViewMonitor monitoredViewVisibleBounds](struct CGRect *__return_ptr __struct_ptr retstr, struct GADActiveViewMonitor *self, SEL);
int __fastcall sub_17D8BC(int a1);
int __fastcall sub_17D8E8(int a1, int a2);
void __fastcall sub_17D910(int a1, int a2, int a3, int a4, struct objc_object *a5);
char __cdecl -[GADActiveViewMonitor monitoredViewVisible](struct GADActiveViewMonitor *self, SEL);
int __fastcall sub_17D9F0(int a1);
int __fastcall sub_17DA14(int a1, int a2);
void __fastcall sub_17DA3C(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[GADActiveViewMonitor monitoredView](struct GADActiveViewMonitor *self, SEL);
void __cdecl -[GADActiveViewMonitor .cxx_destruct](struct GADActiveViewMonitor *self, SEL);
int __fastcall nullsub_39(_DWORD); // weak
void __cdecl -[GADRewardBasedVideoAd processMediationAd:](struct GADRewardBasedVideoAd *self, SEL, id);
void __cdecl -[GADRewardBasedVideoAd makeNextAdRequest](struct GADRewardBasedVideoAd *self, SEL);
void __fastcall sub_17E158(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_17E200(int a1, int a2);
void __fastcall sub_17E220(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADRewardBasedVideoAd presentMediatedRewardBasedVideoAdFromViewController:](struct GADRewardBasedVideoAd *self, SEL, id);
void __cdecl -[GADRewardBasedVideoAd setUpAdapters](struct GADRewardBasedVideoAd *self, SEL);
void __fastcall sub_17E3FC(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_17E6D8(int a1, int a2);
void __fastcall sub_17E6E0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADRewardBasedVideoAd buildPendingAdRequestConnectorsList](struct GADRewardBasedVideoAd *self, SEL);
void __fastcall sub_17E7EC(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_17E940(int a1, int a2);
void __fastcall sub_17E948(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADRewardBasedVideoAd removeStaleConnectors](struct GADRewardBasedVideoAd *self, SEL);
void __fastcall sub_17EBD0(int a1, int a2, void *a3, int a4, struct objc_object *a5);
int __fastcall sub_17ECB8(int a1, int a2);
void __fastcall sub_17ECD8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_17ECF8(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[GADRewardBasedVideoAd requestAdFromConnector:](struct GADRewardBasedVideoAd *self, SEL, id);
id __cdecl -[GADRewardBasedVideoAd parseJSONResponseFromAd:error:](struct GADRewardBasedVideoAd *self, SEL, id, id *);
void __cdecl -[GADRewardBasedVideoAd pingNoFillURLs](struct GADRewardBasedVideoAd *self, SEL);
void __cdecl -[GADRewardBasedVideoAd pingClickURLs](struct GADRewardBasedVideoAd *self, SEL);
void __cdecl -[GADRewardBasedVideoAd pingImpressionURLs](struct GADRewardBasedVideoAd *self, SEL);
void __cdecl -[GADRewardBasedVideoAd connectorDidSetUpRewardBasedVideoAd:](struct GADRewardBasedVideoAd *self, SEL, id);
void __cdecl -[GADRewardBasedVideoAd connector:didFailToSetUpRewardBasedVideoAdWithError:](struct GADRewardBasedVideoAd *self, SEL, id, id);
void __cdecl -[GADRewardBasedVideoAd connectorDidReceiveRewardBasedVideoAd:](struct GADRewardBasedVideoAd *self, SEL, id);
void __cdecl -[GADRewardBasedVideoAd connectorDidReceiveClick:](struct GADRewardBasedVideoAd *self, SEL, id);
void __cdecl -[GADRewardBasedVideoAd connector:didFailToReceiveRewardBasedVideoAdWithError:](struct GADRewardBasedVideoAd *self, SEL, id, id);
void __cdecl -[GADRewardBasedVideoAd connector:didRewardUserWithReward:](struct GADRewardBasedVideoAd *self, SEL, id, id);
void __cdecl -[GADMAdNetworkConnectorNativeAd getAdFromAdapterWithType:](struct GADMAdNetworkConnectorNativeAd *self, SEL, id);
void __cdecl -[GADMAdNetworkConnectorNativeAd adapter:didReceiveMediatedNativeAd:](struct GADMAdNetworkConnectorNativeAd *self, SEL, id, id);
void __cdecl -[GADMAdNetworkConnectorNativeAd adapter:didFailAd:](struct GADMAdNetworkConnectorNativeAd *self, SEL, id, id);
id __cdecl -[GADMAdNetworkConnectorNativeAd adLoaderConfiguration](struct GADMAdNetworkConnectorNativeAd *self, SEL);
void __cdecl -[GADMAdNetworkConnectorNativeAd setAdLoaderConfiguration:](struct GADMAdNetworkConnectorNativeAd *self, SEL, id);
void __cdecl -[GADMAdNetworkConnectorNativeAd .cxx_destruct](struct GADMAdNetworkConnectorNativeAd *self, SEL);
int __fastcall nullsub_40(_DWORD); // weak
id __cdecl -[NSString(GADURLEncoding) gad_stringByEscapingAsURLParameter](struct NSString *self, SEL);
id __cdecl -[GADAdLoaderConfiguration initWithAdTypes:options:](struct GADAdLoaderConfiguration *self, SEL, id, id);
id __cdecl -[GADAdLoaderConfiguration adTypeClasses](struct GADAdLoaderConfiguration *self, SEL);
id __cdecl -[GADAdLoaderConfiguration adTypes](struct GADAdLoaderConfiguration *self, SEL);
id __cdecl -[GADAdLoaderConfiguration options](struct GADAdLoaderConfiguration *self, SEL);
void __cdecl -[GADAdLoaderConfiguration .cxx_destruct](struct GADAdLoaderConfiguration *self, SEL);
id __cdecl +[GADActiveViewGMSGHandler actionBlockDictionary](struct GADActiveViewGMSGHandler_meta *self, SEL);
int sub_1807C8();
void __fastcall sub_1808CC(int a1, void *a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_18090C(int a1, void *a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[GADActiveViewGMSGHandler didReceiveActiveViewVisibilityChangedNotification:](struct GADActiveViewGMSGHandler *self, SEL, id);
void __cdecl -[GADActiveViewGMSGHandler didReceiveActiveViewUntrackActiveViewNotification:](struct GADActiveViewGMSGHandler *self, SEL, id);
id __cdecl -[GADActiveViewGMSGHandler delegate](struct GADActiveViewGMSGHandler *self, SEL);
void __cdecl -[GADActiveViewGMSGHandler setDelegate:](struct GADActiveViewGMSGHandler *self, SEL, id);
void __cdecl -[GADActiveViewGMSGHandler .cxx_destruct](struct GADActiveViewGMSGHandler *self, SEL);
id __fastcall sub_180C94(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_180E50(int a1, int a2, int a3, int a4, int a5);
void __fastcall sub_180FC4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10);
id __cdecl +[GADCachedFile formatterForHTTPDate](struct GADCachedFile_meta *self, SEL);
void __fastcall sub_18123C(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[GADCachedFile initWithURL:](struct GADCachedFile *self, SEL, id);
id __cdecl -[GADCachedFile init](struct GADCachedFile *self, SEL);
void __cdecl -[GADCachedFile dealloc](struct GADCachedFile *self, SEL);
id __cdecl -[GADCachedFile description](struct GADCachedFile *self, SEL);
id __cdecl -[GADCachedFile filePath](struct GADCachedFile *self, SEL);
char __cdecl -[GADCachedFile fileExists](struct GADCachedFile *self, SEL);
id __cdecl -[GADCachedFile fileModificationRFC1123DateString](struct GADCachedFile *self, SEL);
void __cdecl -[GADCachedFile beginFetchWithCacheBuster:](struct GADCachedFile *self, SEL, char);
id __cdecl -[GADCachedFile contentAsString](struct GADCachedFile *self, SEL);
void __cdecl -[GADCachedFile validate](struct GADCachedFile *self, SEL);
void __cdecl -[GADCachedFile validateWithCacheBuster](struct GADCachedFile *self, SEL);
void __cdecl -[GADCachedFile cancel](struct GADCachedFile *self, SEL);
void __cdecl -[GADCachedFile invalidate](struct GADCachedFile *self, SEL);
void __cdecl -[GADCachedFile connection:didReceiveResponse:](struct GADCachedFile *self, SEL, id, id);
void __cdecl -[GADCachedFile connection:didReceiveData:](struct GADCachedFile *self, SEL, id, id);
void __cdecl -[GADCachedFile connectionDidFinishLoading:](struct GADCachedFile *self, SEL, id);
id __cdecl -[GADCachedFile connection:willSendRequest:redirectResponse:](struct GADCachedFile *self, SEL, id, id, id);
void __cdecl -[GADCachedFile connection:didFailWithError:](struct GADCachedFile *self, SEL, id, id);
void __cdecl -[GADCachedFile processResponse:](struct GADCachedFile *self, SEL, id);
void __cdecl -[GADCachedFile saveDataToFile](struct GADCachedFile *self, SEL);
void __cdecl -[GADCachedFile cleanUpConnection](struct GADCachedFile *self, SEL);
void __cdecl -[GADCachedFile saveHeadersFromResponse:](struct GADCachedFile *self, SEL, id);
id __cdecl +[GADCachedFile headersForResponse:](struct GADCachedFile *self, SEL, id);
id __cdecl -[GADCachedFile delegate](struct GADCachedFile *self, SEL);
void __cdecl -[GADCachedFile setDelegate:](struct GADCachedFile *self, SEL, id);
id __cdecl -[GADCachedFile sourceURL](struct GADCachedFile *self, SEL);
void __cdecl -[GADCachedFile setSourceURL:](struct GADCachedFile *self, SEL, id);
unsigned int __cdecl -[GADCachedFile cachePolicy](struct GADCachedFile *self, SEL);
void __cdecl -[GADCachedFile setCachePolicy:](struct GADCachedFile *self, SEL, unsigned int);
id __cdecl -[GADCachedFile HTTPDestinationURL](struct GADCachedFile *self, SEL);
void __cdecl -[GADCachedFile setHTTPDestinationURL:](struct GADCachedFile *self, SEL, id);
int __cdecl -[GADCachedFile HTTPStatusCode](struct GADCachedFile *self, SEL);
id __cdecl -[GADCachedFile HTTPHeaders](struct GADCachedFile *self, SEL);
id __cdecl -[GADCachedFile connection](struct GADCachedFile *self, SEL);
void __cdecl -[GADCachedFile setConnection:](struct GADCachedFile *self, SEL, id);
id __cdecl -[GADCachedFile receivedModificationDate](struct GADCachedFile *self, SEL);
void __cdecl -[GADCachedFile setReceivedModificationDate:](struct GADCachedFile *self, SEL, id);
void __cdecl -[GADCachedFile .cxx_destruct](struct GADCachedFile *self, SEL);
int __fastcall nullsub_41(_DWORD); // weak
id __cdecl +[NSURLRequest(GADNSURLRequestUtilities) gad_requestForURL:data:headers:type:](struct NSURLRequest *self, SEL, id, id, id, id);
id __cdecl +[GADMAdNetworkAdapter availableAdapterNamesInSet:](struct GADMAdNetworkAdapter *self, SEL, id);
signed int __fastcall sub_182DF4(int a1, int a2);
char __cdecl +[GADMAdNetworkAdapter classIsAdapterClass:](struct GADMAdNetworkAdapter *self, SEL, Class);
char __cdecl +[GADMAdNetworkAdapter classImplementsCurrentAdapterAPI:](struct GADMAdNetworkAdapter *self, SEL, Class);
int __fastcall nullsub_42(_DWORD); // weak
char __cdecl -[GADSlot viewHasMadeImpression](struct GADSlot *self, SEL);
void __cdecl -[GADSlot setViewHasMadeImpression:](struct GADSlot *self, SEL, char);
void __cdecl -[GADSlot adViewDidChangeActiveViewVisibility:](struct GADSlot *self, SEL, char);
void __cdecl -[GADSlot adViewDidStopActiveViewMonitoring](struct GADSlot *self, SEL);
char __cdecl -[GADSlot monitoredViewIsSubviewOfDeviceScreen](struct GADSlot *self, SEL);
void __cdecl -[GADSlot createActiveViewMonitor](struct GADSlot *self, SEL);
void __cdecl -[GADSlot startActiveViewReportingIfEnabled](struct GADSlot *self, SEL);
void __cdecl -[GADSlot finishActiveViewReporting](struct GADSlot *self, SEL);
void __cdecl -[GADSlot activeViewMonitorWillUnload](struct GADSlot *self, SEL);
void __cdecl -[GADSlot activeViewMonitorDidRefresh:](struct GADSlot *self, SEL, id);
id __cdecl -[GADSlot activeViewJSCommandWithParams:](struct GADSlot *self, SEL, id);
id __cdecl -[GADSlot activeViewParameters:activeViewUnloaded:](struct GADSlot *self, SEL, id, char);
id __cdecl -[GADSlot adFormat](struct GADSlot *self, SEL);
id __cdecl -[GADSlot dictionaryForBounds:](struct GADSlot *self, SEL, struct CGRect);
char __cdecl -[GADSlot canEnableActiveViewMonitoring](struct GADSlot *self, SEL);
id __cdecl -[GADTiming initWithCategory:](struct GADTiming *self, SEL, id);
id __cdecl -[GADTiming initWithDictionaryRepresentation:](struct GADTiming *self, SEL, id);
id __cdecl -[GADTiming init](struct GADTiming *self, SEL);
id __cdecl -[GADTiming description](struct GADTiming *self, SEL);
id __cdecl -[GADTiming copyWithZone:](struct GADTiming *self, SEL, struct _NSZone *);
id __cdecl -[GADTiming dictionaryRepresentation](struct GADTiming *self, SEL);
int __fastcall sub_184AB8(int a1, int a2);
void __fastcall sub_184ACC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_184AD4(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_184CA4(int a1, int a2);
void __fastcall sub_184CCC(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[GADTiming start](struct GADTiming *self, SEL);
int __fastcall sub_184D98(int a1);
int __fastcall sub_184DD8(int a1, int a2);
void __fastcall sub_184DE0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADTiming end](struct GADTiming *self, SEL);
int __fastcall sub_184E90(int result);
int __fastcall sub_184ED4(int a1, int a2);
void __fastcall sub_184EDC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADTiming reset](struct GADTiming *self, SEL);
int __fastcall sub_184F64(int a1);
int __fastcall sub_184F9C(int a1, int a2);
void __fastcall sub_184FA4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
uint64_t __cdecl -[GADTiming startTimestamp](struct GADTiming *self, SEL);
int __fastcall sub_185074(int a1);
int __fastcall sub_1850A4(int a1, int a2);
void __fastcall sub_1850CC(int a1, int a2, int a3, int a4, struct objc_object *a5);
uint64_t __cdecl -[GADTiming endTimestamp](struct GADTiming *self, SEL);
int __fastcall sub_1851B8(int a1);
int __fastcall sub_1851E8(int a1, int a2);
void __fastcall sub_185210(int a1, int a2, int a3, int a4, struct objc_object *a5);
unsigned int __cdecl -[GADTiming elapsedMilliseconds](struct GADTiming *self, SEL);
int __fastcall sub_1852F0(int a1);
int __fastcall sub_1853B8(int a1, int a2);
int __fastcall sub_1853E4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4);
id __cdecl -[GADTiming elapsedMillisecondsString](struct GADTiming *self, SEL);
char __cdecl -[GADTiming isActive](struct GADTiming *self, SEL);
int __fastcall sub_185510(int a1);
int __fastcall sub_185568(int a1, int a2);
void __fastcall sub_185590(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[GADTiming setValue:forKey:](struct GADTiming *self, SEL, id, id);
void *__fastcall sub_1856A4(int a1);
int __fastcall sub_1856D0(int a1, int a2);
void __fastcall sub_1856F8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[GADTiming valueForKey:](struct GADTiming *self, SEL, id);
void __fastcall sub_185840(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_185898(int a1, int a2);
void __fastcall sub_1858C8(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[GADTiming removeValueForKey:](struct GADTiming *self, SEL, id);
void *__fastcall sub_1859A8(int a1);
int __fastcall sub_1859D4(int a1, int a2);
void __fastcall sub_1859F4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[GADTiming category](struct GADTiming *self, SEL);
void __cdecl -[GADTiming setCategory:](struct GADTiming *self, SEL, id);
char __cdecl -[GADTiming explicitEnd](struct GADTiming *self, SEL);
void __cdecl -[GADTiming setExplicitEnd:](struct GADTiming *self, SEL, char);
void __cdecl -[GADTiming setStartTimestamp:](struct GADTiming *self, SEL, uint64_t);
void __cdecl -[GADTiming setEndTimestamp:](struct GADTiming *self, SEL, uint64_t);
void __cdecl -[GADTiming .cxx_destruct](struct GADTiming *self, SEL);
id __cdecl -[GADPushTransitionView initWithFrame:](struct GADPushTransitionView *self, SEL, struct CGRect);
id __cdecl -[GADPushTransitionView initWithCoder:](struct GADPushTransitionView *self, SEL, id);
void __cdecl -[GADPushTransitionView commonInit](struct GADPushTransitionView *self, SEL);
void __cdecl -[GADPushTransitionView setViews:](struct GADPushTransitionView *self, SEL, id);
void __cdecl -[GADPushTransitionView setAnimationDuration:](struct GADPushTransitionView *self, SEL, double);
void __cdecl -[GADPushTransitionView setPresentationDuration:](struct GADPushTransitionView *self, SEL, double);
void __cdecl -[GADPushTransitionView setCurrentView:](struct GADPushTransitionView *self, SEL, id);
void __cdecl -[GADPushTransitionView dispatchAnimation](struct GADPushTransitionView *self, SEL);
void __fastcall sub_186270(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1862C4(int a1, int a2);
int __fastcall sub_1862D0(int a1);
void __cdecl -[GADPushTransitionView animate](struct GADPushTransitionView *self, SEL);
int __cdecl -[GADPushTransitionView animationGroupIdentifier](struct GADPushTransitionView *self, SEL);
void __cdecl -[GADPushTransitionView .cxx_destruct](struct GADPushTransitionView *self, SEL);
id __cdecl -[GADTimingManager init](struct GADTimingManager *self, SEL);
void __cdecl -[GADTimingManager dealloc](struct GADTimingManager *self, SEL);
id __cdecl -[GADTimingManager timings](struct GADTimingManager *self, SEL);
id __cdecl -[GADTimingManager categories](struct GADTimingManager *self, SEL);
void __cdecl -[GADTimingManager applicationWillTerminate:](struct GADTimingManager *self, SEL, id);
void __cdecl -[GADTimingManager loadPersistentTimings](struct GADTimingManager *self, SEL);
void __cdecl -[GADTimingManager savePersistentTimings](struct GADTimingManager *self, SEL);
void __fastcall sub_186AD4(int a1);
void __fastcall sub_186BF4(int a1, int a2, void *a3, int a4, struct objc_object *a5);
int __fastcall sub_186C70(int a1, int a2);
void __fastcall sub_186C78(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_186C80(int a1, int a2);
void __fastcall sub_186CA0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADTimingManager setIdentifier:](struct GADTimingManager *self, SEL, id);
void __cdecl -[GADTimingManager addTiming:](struct GADTimingManager *self, SEL, id);
id __cdecl -[GADTimingManager addTimingWithCategory:](struct GADTimingManager *self, SEL, id);
id __cdecl -[GADTimingManager timingForCategory:](struct GADTimingManager *self, SEL, id);
void __cdecl -[GADTimingManager removeTiming:](struct GADTimingManager *self, SEL, id);
void __cdecl -[GADTimingManager removeTimingForCategory:](struct GADTimingManager *self, SEL, id);
void __cdecl -[GADTimingManager removeTimingsForCategories:](struct GADTimingManager *self, SEL, id);
void __cdecl -[GADTimingManager removeAllTimings](struct GADTimingManager *self, SEL);
void __cdecl -[GADTimingManager .cxx_destruct](struct GADTimingManager *self, SEL);
id __cdecl -[GADRequestError initWithCode:request:HTTPStatusCode:customMessage:underlyingError:](struct GADRequestError *self, SEL, int, id, int, id, id);
id __cdecl -[GADRequestError initWithDomain:code:userInfo:](struct GADRequestError *self, SEL, id, int, id);
id __cdecl +[GADRequestError errorWithCode:request:HTTPStatusCode:customMessage:underlyingError:](struct GADRequestError *self, SEL, int, id, int, id, id);
id __cdecl +[GADRequestError errorWithCode:request:HTTPStatusCode:customMessage:](struct GADRequestError *self, SEL, int, id, int, id);
id __cdecl +[GADRequestError errorWithCode:request:HTTPStatusCode:](struct GADRequestError *self, SEL, int, id, int);
id __cdecl +[GADRequestError errorWithCode:request:](struct GADRequestError *self, SEL, int, id);
id __cdecl +[GADRequestError errorWithCode:](struct GADRequestError *self, SEL, int);
id __cdecl +[GADRequestError errorWithCode:customMessage:](struct GADRequestError *self, SEL, int, id);
id __cdecl +[GADRequestError errorWithCode:underlyingError:](struct GADRequestError *self, SEL, int, id);
id __cdecl -[GADRequestError error](struct GADRequestError *self, SEL);
void __fastcall sub_187968(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl +[GADProductsRequest requestProductsWithProductIdentifiers:queue:completionHandler:](struct GADProductsRequest *self, SEL, id, id, id);
int __fastcall sub_187C10(int a1);
int __fastcall sub_187C28(int a1, int a2);
void __fastcall sub_187C50(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void *__fastcall sub_187C70(int a1, int a2, int a3);
int __fastcall sub_187CE4(int a1, int a2);
void __fastcall sub_187D0C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[GADProductsRequest initWithProductIdentifiers:](struct GADProductsRequest *self, SEL, id);
void __cdecl -[GADProductsRequest requestWithQueue:completionHandler:](struct GADProductsRequest *self, SEL, id, id);
void __cdecl -[GADProductsRequest productsRequest:didReceiveResponse:](struct GADProductsRequest *self, SEL, id, id);
void __fastcall sub_1880E0(int a1, void *a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_188158(int a1, int a2);
void __fastcall sub_188160(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_188168(int a1);
int __fastcall sub_188190(int a1, int a2);
void __fastcall sub_1881B8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADProductsRequest request:didFailWithError:](struct GADProductsRequest *self, SEL, id, id);
int __fastcall sub_1882B0(int a1);
int __fastcall sub_1882D8(int a1, int a2);
void __fastcall sub_1882F8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADProductsRequest .cxx_destruct](struct GADProductsRequest *self, SEL);
int __fastcall nullsub_45(_DWORD); // weak
id __cdecl +[NSError(GADInternalErrorAdditions) gad_errorWithDomain:code:description:](struct NSError *self, SEL, id, int, id);
id __cdecl +[NSError(GADInternalErrorAdditions) gad_errorWithCode:description:](struct NSError *self, SEL, int, id);
id __cdecl +[NSError(GADInternalErrorAdditions) gad_localizedDescriptionForErrorCode:](struct NSError *self, SEL, int);
int __fastcall nullsub_46(_DWORD); // weak
char __cdecl -[NSString(GADPathValidation) gad_isEquivalentToURLString:](struct NSString *self, SEL, id);
id __cdecl -[GADAdPreprocessor initWithAdUnitID:](struct GADAdPreprocessor *self, SEL, id);
id __cdecl -[GADAdPreprocessor init](struct GADAdPreprocessor *self, SEL);
void __cdecl -[GADAdPreprocessor dealloc](struct GADAdPreprocessor *self, SEL);
void __cdecl -[GADAdPreprocessor preprocessNativeAdJSON:completionHandler:](struct GADAdPreprocessor *self, SEL, id, id);
int __fastcall sub_188BE4(int a1);
int __fastcall sub_188BFC(int a1, int a2);
void __fastcall sub_188C24(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_188C44(int a1, int a2, int a3, int a4);
int __fastcall sub_188D60(int a1);
int __fastcall sub_188DA4(int a1, int a2);
void __fastcall sub_188DF0(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_188E2C(int a1, int a2);
void __fastcall sub_188E60(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[GADAdPreprocessor handlePreprocessorNotification:](struct GADAdPreprocessor *self, SEL, id);
id __cdecl -[GADAdPreprocessor environmentJSONString](struct GADAdPreprocessor *self, SEL);
void __cdecl -[GADAdPreprocessor slot:didFailToLoadAdContentWithError:](struct GADAdPreprocessor *self, SEL, id, id);
void __cdecl -[GADAdPreprocessor slotFinishedLoadingAdContent:](struct GADAdPreprocessor *self, SEL, id);
void __fastcall sub_18937C(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_189424(int a1, int a2);
int __fastcall sub_189430(int a1);
void __cdecl -[GADAdPreprocessor .cxx_destruct](struct GADAdPreprocessor *self, SEL);
id __cdecl -[GADContentQueue initWithQueueSize:](struct GADContentQueue *self, SEL, unsigned int);
id __cdecl -[GADContentQueue init](struct GADContentQueue *self, SEL);
id __cdecl -[GADContentQueue contentWithHighestScore](struct GADContentQueue *self, SEL);
int __fastcall sub_1897A0(int a1, int a2);
void __fastcall sub_1897B4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_1897BC(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_189844(int a1, int a2);
int __fastcall sub_189878(int a1);
id __cdecl -[GADContentQueue contentWithSequenceNumber:](struct GADContentQueue *self, SEL, unsigned int);
void __cdecl -[GADContentQueue deduplicate:](struct GADContentQueue *self, SEL, id);
void __fastcall sub_189A78(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_189BE8(int a1, int a2);
void __fastcall sub_189C08(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADContentQueue enqueueContent:](struct GADContentQueue *self, SEL, id);
void __cdecl -[GADContentQueue .cxx_destruct](struct GADContentQueue *self, SEL);
id __cdecl -[GADNativeAdImageAdLoaderOptions copyWithZone:](struct GADNativeAdImageAdLoaderOptions *self, SEL, struct _NSZone *);
id __cdecl -[GADNativeAdImageAdLoaderOptions requestParameters](struct GADNativeAdImageAdLoaderOptions *self, SEL);
char __cdecl -[GADNativeAdImageAdLoaderOptions disableImageLoading](struct GADNativeAdImageAdLoaderOptions *self, SEL);
void __cdecl -[GADNativeAdImageAdLoaderOptions setDisableImageLoading:](struct GADNativeAdImageAdLoaderOptions *self, SEL, char);
char __cdecl -[GADNativeAdImageAdLoaderOptions shouldRequestMultipleImages](struct GADNativeAdImageAdLoaderOptions *self, SEL);
void __cdecl -[GADNativeAdImageAdLoaderOptions setShouldRequestMultipleImages:](struct GADNativeAdImageAdLoaderOptions *self, SEL, char);
int __cdecl -[GADNativeAdImageAdLoaderOptions preferredImageOrientation](struct GADNativeAdImageAdLoaderOptions *self, SEL);
void __cdecl -[GADNativeAdImageAdLoaderOptions setPreferredImageOrientation:](struct GADNativeAdImageAdLoaderOptions *self, SEL, int);
id __cdecl +[GADSDKCoreController sharedInstance](struct GADSDKCoreController_meta *self, SEL);
void __fastcall sub_18A02C(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[GADSDKCoreController init](struct GADSDKCoreController *self, SEL);
void __cdecl -[GADSDKCoreController dealloc](struct GADSDKCoreController *self, SEL);
id __cdecl -[GADSDKCoreController SDKCoreWebViewForActiveViewProcessing](struct GADSDKCoreController *self, SEL);
int __fastcall sub_18A488(int a1, int a2);
void __fastcall sub_18A49C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void *__fastcall sub_18A4A4(int a1);
int __fastcall sub_18A60C(int a1, int a2);
int __fastcall sub_18A638(int a1, void *a2, struct objc_object *a3, struct objc_object *a4);
void __cdecl -[GADSDKCoreController finishedUsingSDKCoreWebViewForActiveViewProcessing:](struct GADSDKCoreController *self, SEL, id);
void __cdecl -[GADSDKCoreController buildAdURL:](struct GADSDKCoreController *self, SEL, id);
void *__fastcall sub_18A860(int a1);
int __fastcall sub_18A88C(int a1, int a2);
void __fastcall sub_18A8AC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADSDKCoreController attemptToRefreshActiveWebViewSDKCore](struct GADSDKCoreController *self, SEL);
__int64 __fastcall sub_18AAF0(int a1);
int __fastcall sub_18AB9C(int a1, int a2);
void __fastcall sub_18ABC4(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[GADSDKCoreController refreshActiveWebViewSDKCore](struct GADSDKCoreController *self, SEL);
signed int __fastcall sub_18ACA8(int a1);
int __fastcall sub_18AD38(int a1, int a2);
void __fastcall sub_18AD40(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[GADSDKCoreController adRequestParameterJSONFromParameters:](struct GADSDKCoreController *self, SEL, id);
void __cdecl -[GADSDKCoreController asynchronouslyRequestURLForDelegate:](struct GADSDKCoreController *self, SEL, id);
void __fastcall sub_18AEB4(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_18B0F8(int a1, int a2);
void __fastcall sub_18B118(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADSDKCoreController didFinishLoadingSDKCoreInSDKCoreWebView:](struct GADSDKCoreController *self, SEL, id);
int __fastcall sub_18B2F0(int a1);
void __fastcall sub_18B844(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_18B874(int a1, int a2);
int __fastcall sub_18B880(int a1);
int __fastcall sub_18B888(int a1, int a2);
int __fastcall sub_18B8B4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4);
void __cdecl -[GADSDKCoreController observeSDKCoreWebViewForSDKCoreLoadRequestCompleted](struct GADSDKCoreController *self, SEL);
double __cdecl -[GADSDKCoreController activeViewSamplingInterval](struct GADSDKCoreController *self, SEL);
int __fastcall sub_18B9EC(int a1);
int __fastcall sub_18BA14(int a1, int a2);
void __fastcall sub_18BA3C(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[GADSDKCoreController setActiveViewSamplingInterval:](struct GADSDKCoreController *self, SEL, double);
int __fastcall sub_18BAF4(int _R0);
int __fastcall sub_18BB14(int a1, int a2);
void __fastcall sub_18BB1C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
double __cdecl -[GADSDKCoreController swipeToViewSamplingInterval](struct GADSDKCoreController *self, SEL);
int __fastcall sub_18BBF0(int a1);
int __fastcall sub_18BC18(int a1, int a2);
void __fastcall sub_18BC40(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[GADSDKCoreController setSwipeToViewSamplingInterval:](struct GADSDKCoreController *self, SEL, double);
int __fastcall sub_18BCF8(int _R0);
int __fastcall sub_18BD18(int a1, int a2);
void __fastcall sub_18BD20(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADSDKCoreController SDKCoreGMSGHandler:didLoadSDKConstants:](struct GADSDKCoreController *self, SEL, id, id);
int __fastcall sub_18CCE0(int a1);
int __fastcall sub_18CCFC(int a1, int a2);
void __fastcall sub_18CD04(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_18CD0C(int a1);
int __fastcall sub_18CD28(int a1, int a2);
void __fastcall sub_18CD30(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_18CD38(int a1);
int __fastcall sub_18CD54(int a1, int a2);
void __fastcall sub_18CD5C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_18CD64(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_18CE34(int a1, int a2);
void __fastcall sub_18CE3C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_18CE44(void *a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_18CF2C(int a1);
int __fastcall sub_18CF48(int a1, int a2);
void __fastcall sub_18CF50(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADSDKCoreController SDKCoreGMSGHandler:loadAdURLWithRequestID:parameters:](struct GADSDKCoreController *self, SEL, id, id, id);
void __fastcall sub_18D128(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_18D2C8(int a1, int a2);
void __fastcall sub_18D2F8(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_18D324(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_18D44C(int a1, int a2);
void __fastcall sub_18D470(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[GADSDKCoreController SDKCoreGMSGHandler:loadAdWithRequestID:parameters:](struct GADSDKCoreController *self, SEL, id, id, id);
void __fastcall sub_18D660(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_18D708(int a1, int a2);
void __fastcall sub_18D738(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_18D764(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_18D9F8(int a1, int a2);
void __fastcall sub_18DA1C(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[GADSDKCoreController SDKCoreGMSGHandler:didReceiveInvalidAdWithRequestID:parameters:](struct GADSDKCoreController *self, SEL, id, id, id);
void __fastcall sub_18DC80(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_18DE20(int a1, int a2);
void __fastcall sub_18DE50(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_18DE7C(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_18DEAC(int a1, int a2);
int __fastcall sub_18DEB8(int a1);
void __cdecl -[GADSDKCoreController SDKCoreGMSGHandlerDidReceiveSDKCoreUpdateNotification:](struct GADSDKCoreController *self, SEL, id);
int __fastcall sub_18DF40(int a1);
int __fastcall sub_18DF5C(int a1, int a2);
void __fastcall sub_18DF64(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[GADSDKCoreController activeViewMonitorRefreshIntervals](struct GADSDKCoreController *self, SEL);
void __cdecl -[GADSDKCoreController setActiveViewMonitorRefreshIntervals:](struct GADSDKCoreController *self, SEL, id);
id __cdecl -[GADSDKCoreController activeSDKCoreWebView](struct GADSDKCoreController *self, SEL);
void __cdecl -[GADSDKCoreController setActiveSDKCoreWebView:](struct GADSDKCoreController *self, SEL, id);
id __cdecl -[GADSDKCoreController pendingBuildAdURLDelegates](struct GADSDKCoreController *self, SEL);
void __cdecl -[GADSDKCoreController setPendingBuildAdURLDelegates:](struct GADSDKCoreController *self, SEL, id);
void __cdecl -[GADSDKCoreController .cxx_destruct](struct GADSDKCoreController *self, SEL);
id __cdecl -[GADClickTracker init](struct GADClickTracker *self, SEL);
void __cdecl -[GADClickTracker dealloc](struct GADClickTracker *self, SEL);
void __cdecl -[GADClickTracker reset](struct GADClickTracker *self, SEL);
void __cdecl -[GADClickTracker trackURL:](struct GADClickTracker *self, SEL, id);
id __cdecl -[GADClickTracker cachedFile:shouldRedirectToURL:](struct GADClickTracker *self, SEL, id, id);
void __cdecl -[GADClickTracker cachedFileDownloadDidEnd:](struct GADClickTracker *self, SEL, id);
void __cdecl -[GADClickTracker cachedFile:downloadDidFail:](struct GADClickTracker *self, SEL, id, id);
void __cdecl -[GADClickTracker beginBackgroundTask](struct GADClickTracker *self, SEL);
void *__fastcall sub_18E6E8(int a1);
int __fastcall sub_18E6FC(int a1, int a2);
void __fastcall sub_18E704(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADClickTracker endBackgroundTask](struct GADClickTracker *self, SEL);
id __cdecl -[GADClickTracker delegate](struct GADClickTracker *self, SEL);
void __cdecl -[GADClickTracker setDelegate:](struct GADClickTracker *self, SEL, id);
char __cdecl -[GADClickTracker hasTracked](struct GADClickTracker *self, SEL);
id __cdecl -[GADClickTracker trackingURL](struct GADClickTracker *self, SEL);
char __cdecl -[GADClickTracker isCacheEnabled](struct GADClickTracker *self, SEL);
void __cdecl -[GADClickTracker setCacheEnabled:](struct GADClickTracker *self, SEL, char);
void __cdecl -[GADClickTracker .cxx_destruct](struct GADClickTracker *self, SEL);
id __cdecl -[GADViewHierarchyTraverser init](struct GADViewHierarchyTraverser *self, SEL);
void __cdecl -[GADViewHierarchyTraverser traverseView:traversalBlock:completionBlock:](struct GADViewHierarchyTraverser *self, SEL, id, id, id);
int __fastcall sub_18ED88(int a1);
int __fastcall sub_18ED98(int a1, int a2);
void __fastcall sub_18EDA8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_18EDB0(int a1);
void __fastcall sub_18EE74(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_18EEB4(int a1, int a2);
void __fastcall sub_18EEE4(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_18EF04(int a1, int a2);
void __fastcall sub_18EF34(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_18EF54(int a1);
void *__fastcall sub_18EFEC(int a1);
int __fastcall sub_18F024(int a1, int a2);
void __fastcall sub_18F04C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_18F06C(int a1, int a2);
void __fastcall sub_18F094(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADViewHierarchyTraverser setTraversing:](struct GADViewHierarchyTraverser *self, SEL, char);
void __cdecl -[GADViewHierarchyTraverser .cxx_destruct](struct GADViewHierarchyTraverser *self, SEL);
id __cdecl -[GADViewController init](struct GADViewController *self, SEL);
id __cdecl -[GADViewController initWithCoder:](struct GADViewController *self, SEL, id);
id __cdecl -[GADViewController initWithNibName:bundle:](struct GADViewController *self, SEL, id, id);
void __cdecl -[GADViewController commonInit](struct GADViewController *self, SEL);
void __cdecl -[GADViewController dealloc](struct GADViewController *self, SEL);
void __cdecl -[GADViewController setSupportedOrientations:](struct GADViewController *self, SEL, unsigned int);
void __cdecl -[GADViewController setPresenter:](struct GADViewController *self, SEL, id);
void __cdecl -[GADViewController presentViewController:animated:completion:](struct GADViewController *self, SEL, id, char, id);
void __cdecl -[GADViewController dismissViewControllerAnimated:completion:](struct GADViewController *self, SEL, char, id);
void __cdecl -[GADViewController addToCurrentIntermission](struct GADViewController *self, SEL);
void __cdecl -[GADViewController viewDidLoad](struct GADViewController *self, SEL);
void __cdecl -[GADViewController viewWillAppear:](struct GADViewController *self, SEL, char);
void __cdecl -[GADViewController viewWillDisappear:](struct GADViewController *self, SEL, char);
void __cdecl -[GADViewController finishAppearing](struct GADViewController *self, SEL);
void __cdecl -[GADViewController finishDismissal](struct GADViewController *self, SEL);
void __cdecl -[GADViewController viewDidDisappear:](struct GADViewController *self, SEL, char);
char __cdecl -[GADViewController prefersStatusBarHidden](struct GADViewController *self, SEL);
char __cdecl -[GADViewController shouldAutorotate](struct GADViewController *self, SEL);
char __cdecl -[GADViewController shouldDismissOnApplicationEnteringForeground](struct GADViewController *self, SEL);
void __cdecl -[GADViewController presentFromViewController:completion:](struct GADViewController *self, SEL, id, id);
int __fastcall sub_18FC8C(int a1);
int __fastcall sub_18FCC4(int a1, int a2);
void __fastcall sub_18FCF0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADViewController relinquishScreenWithCompletion:](struct GADViewController *self, SEL, id);
int __fastcall sub_18FEC8(int a1);
int __fastcall sub_18FF00(int a1, int a2);
void __fastcall sub_18FF2C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADViewController recordDismissal](struct GADViewController *self, SEL);
id __cdecl -[GADViewController intermission](struct GADViewController *self, SEL);
unsigned int __cdecl -[GADViewController supportedInterfaceOrientations](struct GADViewController *self, SEL);
void __cdecl -[GADViewController setSupportedInterfaceOrientations:](struct GADViewController *self, SEL, unsigned int);
id __cdecl -[GADViewController slot](struct GADViewController *self, SEL);
void __cdecl -[GADViewController setSlot:](struct GADViewController *self, SEL, id);
id __cdecl -[GADViewController retainCycle](struct GADViewController *self, SEL);
void __cdecl -[GADViewController setRetainCycle:](struct GADViewController *self, SEL, id);
id __cdecl -[GADViewController presenter](struct GADViewController *self, SEL);
id __cdecl -[GADViewController dismissalCompletion](struct GADViewController *self, SEL);
void __cdecl -[GADViewController setDismissalCompletion:](struct GADViewController *self, SEL, id);
char __cdecl -[GADViewController viewDidAppear](struct GADViewController *self, SEL);
void __cdecl -[GADViewController setViewDidAppear:](struct GADViewController *self, SEL, char);
void __cdecl -[GADViewController .cxx_destruct](struct GADViewController *self, SEL);
id __cdecl -[GADNativeAppInstallAd initWithDictionary:options:](struct GADNativeAppInstallAd *self, SEL, id, id);
id __cdecl -[GADNativeAppInstallAd initWithMediatedNativeAd:options:](struct GADNativeAppInstallAd *self, SEL, id, id);
void __cdecl -[GADNativeAppInstallAd setSlot:](struct GADNativeAppInstallAd *self, SEL, id);
id __cdecl -[GADNativeAppInstallAd clickActionTemplateID](struct GADNativeAppInstallAd *self, SEL);
id __cdecl -[GADNativeAppInstallAd requiredAssets](struct GADNativeAppInstallAd *self, SEL);
id __cdecl -[GADNativeAppInstallAd headline](struct GADNativeAppInstallAd *self, SEL);
id __cdecl -[GADNativeAppInstallAd callToAction](struct GADNativeAppInstallAd *self, SEL);
id __cdecl -[GADNativeAppInstallAd icon](struct GADNativeAppInstallAd *self, SEL);
id __cdecl -[GADNativeAppInstallAd images](struct GADNativeAppInstallAd *self, SEL);
void __cdecl -[GADNativeAppInstallAd loadAssetsWithCompletionHandler:](struct GADNativeAppInstallAd *self, SEL, id);
void *__fastcall sub_19163C(int a1, int a2);
int __fastcall sub_191670(int a1, int a2);
void __fastcall sub_191690(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void *__fastcall sub_1916B0(int a1, int a2);
int __fastcall sub_191724(int a1, int a2);
void __fastcall sub_19174C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void *__fastcall sub_191774(int a1, int a2);
int __fastcall sub_1917A8(int a1, int a2);
void __fastcall sub_1917C8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl +[GADNativeAppInstallAd requiredDelegateProtocol](struct GADNativeAppInstallAd_meta *self, SEL);
id __cdecl +[GADNativeAppInstallAd requestParametersForAdLoader:](struct GADNativeAppInstallAd *self, SEL, id);
void __cdecl -[GADNativeAppInstallAd adLoaderDidReceiveAd:](struct GADNativeAppInstallAd *self, SEL, id);
void __cdecl -[GADNativeAppInstallAd nativeAdViewPolicy:didStartedTrackingView:](struct GADNativeAppInstallAd *self, SEL, id, id);
void __cdecl -[GADNativeAppInstallAd performClickOnView:assetName:environment:](struct GADNativeAppInstallAd *self, SEL, id, id, id);
void __cdecl -[GADNativeAppInstallAd recordImpression](struct GADNativeAppInstallAd *self, SEL);
id __cdecl -[GADNativeAppInstallAd overlayView](struct GADNativeAppInstallAd *self, SEL);
id __cdecl -[GADNativeAppInstallAd body](struct GADNativeAppInstallAd *self, SEL);
id __cdecl -[GADNativeAppInstallAd store](struct GADNativeAppInstallAd *self, SEL);
id __cdecl -[GADNativeAppInstallAd price](struct GADNativeAppInstallAd *self, SEL);
id __cdecl -[GADNativeAppInstallAd starRating](struct GADNativeAppInstallAd *self, SEL);
id __cdecl -[GADNativeAppInstallAd attribution](struct GADNativeAppInstallAd *self, SEL);
void __cdecl -[GADNativeAppInstallAd setAttribution:](struct GADNativeAppInstallAd *self, SEL, id);
void __cdecl -[GADNativeAppInstallAd .cxx_destruct](struct GADNativeAppInstallAd *self, SEL);
void __fastcall sub_191CB0(int a1, int a2, int a3, int a4);
void __fastcall sub_191DBC(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_191DF8(int a1);
int __fastcall sub_191E18(int a1, int a2);
void __fastcall sub_191E20(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl +[GADLogger sharedInstance](struct GADLogger_meta *self, SEL);
void __fastcall sub_191E6C(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[GADLogger logPublicMessage:](struct GADLogger *self, SEL, id);
int __fastcall nullsub_47(_DWORD); // weak
void __cdecl -[GADNativeAd observeNotificationsFromMediatedNativeAd](struct GADNativeAd *self, SEL);
void __cdecl -[GADNativeAd mediatedNativeAdWillPresentScreen:](struct GADNativeAd *self, SEL, id);
void __cdecl -[GADNativeAd mediatedNativeAdWillDismissScreen:](struct GADNativeAd *self, SEL, id);
void __cdecl -[GADNativeAd mediatedNativeAdDidDismissScreen:](struct GADNativeAd *self, SEL, id);
void __cdecl -[GADNativeAd mediatedNativeAdWillLeaveApplication:](struct GADNativeAd *self, SEL, id);
void __cdecl -[GADBrowserViewController dealloc](struct GADBrowserViewController *self, SEL);
void __cdecl -[GADBrowserViewController viewDidLoad](struct GADBrowserViewController *self, SEL);
void __cdecl -[GADBrowserViewController viewWillAppear:](struct GADBrowserViewController *self, SEL, char);
void __cdecl -[GADBrowserViewController didRotateFromInterfaceOrientation:](struct GADBrowserViewController *self, SEL, int);
id __cdecl -[GADBrowserViewController buttonWithImage:name:width:enabled:action:](struct GADBrowserViewController *self, SEL, id, id, int, char, SEL);
void __cdecl -[GADBrowserViewController createToolbarButtons](struct GADBrowserViewController *self, SEL);
void __cdecl -[GADBrowserViewController refreshToolbar](struct GADBrowserViewController *self, SEL);
void __cdecl -[GADBrowserViewController doneButtonPressed:](struct GADBrowserViewController *self, SEL, id);
void __cdecl -[GADBrowserViewController load:referringURL:](struct GADBrowserViewController *self, SEL, id, id);
void __cdecl -[GADBrowserViewController back](struct GADBrowserViewController *self, SEL);
void __cdecl -[GADBrowserViewController forward](struct GADBrowserViewController *self, SEL);
void __cdecl -[GADBrowserViewController stop](struct GADBrowserViewController *self, SEL);
void __cdecl -[GADBrowserViewController reload](struct GADBrowserViewController *self, SEL);
void __cdecl -[GADBrowserViewController openInSafari](struct GADBrowserViewController *self, SEL);
id __cdecl -[GADBrowserViewController URLToLoad](struct GADBrowserViewController *self, SEL);
void __cdecl -[GADBrowserViewController setURLToLoad:](struct GADBrowserViewController *self, SEL, id);
id __cdecl -[GADBrowserViewController referringURLToLoad](struct GADBrowserViewController *self, SEL);
void __cdecl -[GADBrowserViewController setReferringURLToLoad:](struct GADBrowserViewController *self, SEL, id);
id __cdecl -[GADBrowserViewController adViewDelegate](struct GADBrowserViewController *self, SEL);
void __cdecl -[GADBrowserViewController setAdViewDelegate:](struct GADBrowserViewController *self, SEL, id);
id __cdecl -[GADBrowserViewController adView](struct GADBrowserViewController *self, SEL);
void __cdecl -[GADBrowserViewController setAdView:](struct GADBrowserViewController *self, SEL, id);
id __cdecl -[GADBrowserViewController toolbar](struct GADBrowserViewController *self, SEL);
void __cdecl -[GADBrowserViewController setToolbar:](struct GADBrowserViewController *self, SEL, id);
id __cdecl -[GADBrowserViewController flexibleSpaceButton](struct GADBrowserViewController *self, SEL);
void __cdecl -[GADBrowserViewController setFlexibleSpaceButton:](struct GADBrowserViewController *self, SEL, id);
id __cdecl -[GADBrowserViewController backButton](struct GADBrowserViewController *self, SEL);
void __cdecl -[GADBrowserViewController setBackButton:](struct GADBrowserViewController *self, SEL, id);
id __cdecl -[GADBrowserViewController forwardButton](struct GADBrowserViewController *self, SEL);
void __cdecl -[GADBrowserViewController setForwardButton:](struct GADBrowserViewController *self, SEL, id);
id __cdecl -[GADBrowserViewController reloadButton](struct GADBrowserViewController *self, SEL);
void __cdecl -[GADBrowserViewController setReloadButton:](struct GADBrowserViewController *self, SEL, id);
id __cdecl -[GADBrowserViewController safariButton](struct GADBrowserViewController *self, SEL);
void __cdecl -[GADBrowserViewController setSafariButton:](struct GADBrowserViewController *self, SEL, id);
id __cdecl -[GADBrowserViewController doneButton](struct GADBrowserViewController *self, SEL);
void __cdecl -[GADBrowserViewController setDoneButton:](struct GADBrowserViewController *self, SEL, id);
id __cdecl -[GADBrowserViewController spinnerContainingButton](struct GADBrowserViewController *self, SEL);
void __cdecl -[GADBrowserViewController setSpinnerContainingButton:](struct GADBrowserViewController *self, SEL, id);
id __cdecl -[GADBrowserViewController spinner](struct GADBrowserViewController *self, SEL);
void __cdecl -[GADBrowserViewController setSpinner:](struct GADBrowserViewController *self, SEL, id);
void __cdecl -[GADBrowserViewController .cxx_destruct](struct GADBrowserViewController *self, SEL);
id __cdecl -[GADCSITimeRecorder initWithAction:](struct GADCSITimeRecorder *self, SEL, id);
id __cdecl -[GADCSITimeRecorder init](struct GADCSITimeRecorder *self, SEL);
void __cdecl -[GADCSITimeRecorder startTimeRecorder](struct GADCSITimeRecorder *self, SEL);
void __cdecl -[GADCSITimeRecorder startTimingVariableWithName:](struct GADCSITimeRecorder *self, SEL, id);
void __cdecl -[GADCSITimeRecorder endTimingVariableWithName:](struct GADCSITimeRecorder *self, SEL, id);
void __cdecl -[GADCSITimeRecorder cancelTimingVariableWithName:](struct GADCSITimeRecorder *self, SEL, id);
void __cdecl -[GADCSITimeRecorder startTimingVariableWithName:key:](struct GADCSITimeRecorder *self, SEL, id, id);
void *__fastcall sub_194700(int a1);
int __fastcall sub_19472C(int a1, int a2);
void __fastcall sub_194754(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADCSITimeRecorder endTimingVariableWithName:key:](struct GADCSITimeRecorder *self, SEL, id, id);
void __fastcall sub_19483C(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_194A08(int a1, int a2);
void __fastcall sub_194A28(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADCSITimeRecorder cancelTimingVariableWithName:key:](struct GADCSITimeRecorder *self, SEL, id, id);
void *__fastcall sub_194B00(int a1);
int __fastcall sub_194B2C(int a1, int a2);
void __fastcall sub_194B4C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[GADCSITimeRecorder ongoingVariables](struct GADCSITimeRecorder *self, SEL);
int __fastcall sub_194C50(int a1, int a2);
void __fastcall sub_194C64(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_194C6C(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_194CB8(int a1, int a2);
void __fastcall sub_194CE0(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[GADCSITimeRecorder completedVariables](struct GADCSITimeRecorder *self, SEL);
void __fastcall sub_194DE8(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_194E34(int a1, int a2);
void __fastcall sub_194E5C(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[GADCSITimeRecorder addCompletedVariable:](struct GADCSITimeRecorder *self, SEL, id);
void __cdecl -[GADCSITimeRecorder addCompletedVariable:forKey:](struct GADCSITimeRecorder *self, SEL, id, id);
void *__fastcall sub_195000(int a1);
int __fastcall sub_19502C(int a1, int a2);
void __fastcall sub_195054(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADCSITimeRecorder removeCompletedVariableForKey:](struct GADCSITimeRecorder *self, SEL, id);
void *__fastcall sub_195134(int a1);
int __fastcall sub_195160(int a1, int a2);
void __fastcall sub_195180(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADCSITimeRecorder addExperimentID:](struct GADCSITimeRecorder *self, SEL, id);
void __cdecl -[GADCSITimeRecorder removeExperimentID:](struct GADCSITimeRecorder *self, SEL, id);
void __cdecl -[GADCSITimeRecorder setCustomizedParameterValue:forKey:](struct GADCSITimeRecorder *self, SEL, id, id);
id __cdecl -[GADCSITimeRecorder customizedParameters](struct GADCSITimeRecorder *self, SEL);
id __cdecl -[GADCSITimeRecorder experimentIDs](struct GADCSITimeRecorder *self, SEL);
id __cdecl -[GADCSITimeRecorder action](struct GADCSITimeRecorder *self, SEL);
void __cdecl -[GADCSITimeRecorder setAction:](struct GADCSITimeRecorder *self, SEL, id);
char __cdecl -[GADCSITimeRecorder reportIRT](struct GADCSITimeRecorder *self, SEL);
void __cdecl -[GADCSITimeRecorder setReportIRT:](struct GADCSITimeRecorder *self, SEL, char);
double __cdecl -[GADCSITimeRecorder startTime](struct GADCSITimeRecorder *self, SEL);
void __cdecl -[GADCSITimeRecorder .cxx_destruct](struct GADCSITimeRecorder *self, SEL);
id __cdecl +[GADCharacterSets sharedInstance](struct GADCharacterSets_meta *self, SEL);
void __fastcall sub_1953F8(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[GADCharacterSets init](struct GADCharacterSets *self, SEL);
id __cdecl -[GADCharacterSets characterDelimitedSet](struct GADCharacterSets *self, SEL);
int __fastcall sub_1955C0(int a1, int a2);
void __fastcall sub_1955D4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_1955DC(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_195628(int a1, int a2);
void __fastcall sub_195650(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[GADCharacterSets spaceDelimitedSet](struct GADCharacterSets *self, SEL);
void __fastcall sub_195758(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1957A4(int a1, int a2);
void __fastcall sub_1957CC(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[GADCharacterSets updateCharacterSets](struct GADCharacterSets *self, SEL);
void __fastcall sub_195944(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __fastcall sub_195B14(int a1, int a2);
int __fastcall sub_195DA4(int a1, int a2);
void __fastcall sub_195DCC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADCharacterSets .cxx_destruct](struct GADCharacterSets *self, SEL);
void *sub_195E4C();
void __fastcall sub_196098(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_19628C(int a1, int a2);
int __fastcall sub_19629C(int a1);
int __fastcall nullsub_48(_DWORD); // weak
id __cdecl -[GADSlot inAppPurchaseDelegate](struct GADSlot *self, SEL);
void __cdecl -[GADSlot didReceiveInAppPurchase:](struct GADSlot *self, SEL, id);
void *__fastcall sub_1964E4(int a1);
int __fastcall sub_196538(int a1, int a2);
void __fastcall sub_196558(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl +[GADRewardBasedVideoAd sharedInstance](struct GADRewardBasedVideoAd_meta *self, SEL);
void __fastcall sub_1965CC(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[GADRewardBasedVideoAd init](struct GADRewardBasedVideoAd *self, SEL);
void __cdecl -[GADRewardBasedVideoAd loadRequest:withAdUnitID:userID:](struct GADRewardBasedVideoAd *self, SEL, id, id, id);
void __cdecl -[GADRewardBasedVideoAd presentFromRootViewController:](struct GADRewardBasedVideoAd *self, SEL, id);
void __cdecl -[GADRewardBasedVideoAd loadAd:](struct GADRewardBasedVideoAd *self, SEL, id);
void __cdecl -[GADRewardBasedVideoAd adLoadedSuccessfully](struct GADRewardBasedVideoAd *self, SEL);
void __cdecl -[GADRewardBasedVideoAd failedToLoadAdWithError:](struct GADRewardBasedVideoAd *self, SEL, id);
id __cdecl -[GADRewardBasedVideoAd delegate](struct GADRewardBasedVideoAd *self, SEL);
void __cdecl -[GADRewardBasedVideoAd setDelegate:](struct GADRewardBasedVideoAd *self, SEL, id);
char __cdecl -[GADRewardBasedVideoAd isReady](struct GADRewardBasedVideoAd *self, SEL);
id __cdecl -[GADRewardBasedVideoAd request](struct GADRewardBasedVideoAd *self, SEL);
void __cdecl -[GADRewardBasedVideoAd setRequest:](struct GADRewardBasedVideoAd *self, SEL, id);
id __cdecl -[GADRewardBasedVideoAd adUnitID](struct GADRewardBasedVideoAd *self, SEL);
void __cdecl -[GADRewardBasedVideoAd setAdUnitID:](struct GADRewardBasedVideoAd *self, SEL, id);
id __cdecl -[GADRewardBasedVideoAd userID](struct GADRewardBasedVideoAd *self, SEL);
void __cdecl -[GADRewardBasedVideoAd setUserID:](struct GADRewardBasedVideoAd *self, SEL, id);
id __cdecl -[GADRewardBasedVideoAd requestID](struct GADRewardBasedVideoAd *self, SEL);
void __cdecl -[GADRewardBasedVideoAd setRequestID:](struct GADRewardBasedVideoAd *self, SEL, id);
id __cdecl -[GADRewardBasedVideoAd adFetcher](struct GADRewardBasedVideoAd *self, SEL);
void __cdecl -[GADRewardBasedVideoAd setAdFetcher:](struct GADRewardBasedVideoAd *self, SEL, id);
char __cdecl -[GADRewardBasedVideoAd requestInProgress](struct GADRewardBasedVideoAd *self, SEL);
void __cdecl -[GADRewardBasedVideoAd setRequestInProgress:](struct GADRewardBasedVideoAd *self, SEL, char);
id __cdecl -[GADRewardBasedVideoAd mediationConfig](struct GADRewardBasedVideoAd *self, SEL);
void __cdecl -[GADRewardBasedVideoAd setMediationConfig:](struct GADRewardBasedVideoAd *self, SEL, id);
id __cdecl -[GADRewardBasedVideoAd pendingAdRequestConnectors](struct GADRewardBasedVideoAd *self, SEL);
void __cdecl -[GADRewardBasedVideoAd setPendingAdRequestConnectors:](struct GADRewardBasedVideoAd *self, SEL, id);
id __cdecl -[GADRewardBasedVideoAd requestingConnector](struct GADRewardBasedVideoAd *self, SEL);
void __cdecl -[GADRewardBasedVideoAd setRequestingConnector:](struct GADRewardBasedVideoAd *self, SEL, id);
id __cdecl -[GADRewardBasedVideoAd receivedConnector](struct GADRewardBasedVideoAd *self, SEL);
void __cdecl -[GADRewardBasedVideoAd setReceivedConnector:](struct GADRewardBasedVideoAd *self, SEL, id);
id __cdecl -[GADRewardBasedVideoAd pendingSetUpConnectorsTimestamp](struct GADRewardBasedVideoAd *self, SEL);
void __cdecl -[GADRewardBasedVideoAd setPendingSetUpConnectorsTimestamp:](struct GADRewardBasedVideoAd *self, SEL, id);
id __cdecl -[GADRewardBasedVideoAd connectors](struct GADRewardBasedVideoAd *self, SEL);
void __cdecl -[GADRewardBasedVideoAd setConnectors:](struct GADRewardBasedVideoAd *self, SEL, id);
void __cdecl -[GADRewardBasedVideoAd .cxx_destruct](struct GADRewardBasedVideoAd *self, SEL);
int __fastcall nullsub_49(_DWORD); // weak
id __cdecl +[GADIntrinsicImages sharedInstance](struct GADIntrinsicImages_meta *self, SEL);
void __fastcall sub_196EF4(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[GADIntrinsicImages imageWithBase64EncodedString:](struct GADIntrinsicImages *self, SEL, id);
id __cdecl -[GADIntrinsicImages chooseImage:orDoubleDensityImage:](struct GADIntrinsicImages *self, SEL, id, id);
id __cdecl -[GADIntrinsicImages browserBackButton](struct GADIntrinsicImages *self, SEL);
void __fastcall sub_1971A0(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_19722C(int a1, int a2);
void __fastcall sub_197234(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[GADIntrinsicImages browserForwardButton](struct GADIntrinsicImages *self, SEL);
void __fastcall sub_1972E0(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_19736C(int a1, int a2);
void __fastcall sub_197374(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[GADIntrinsicImages closeButton](struct GADIntrinsicImages *self, SEL);
void __fastcall sub_197420(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1974AC(int a1, int a2);
void __fastcall sub_1974B4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[GADIntrinsicImages transparentImage](struct GADIntrinsicImages *self, SEL);
int sub_197500();
id __cdecl -[GADAdAppViewController init](struct GADAdAppViewController *self, SEL);
id __cdecl -[GADAdAppViewController initWithCoder:](struct GADAdAppViewController *self, SEL, id);
id __cdecl -[GADAdAppViewController initWithNibName:bundle:](struct GADAdAppViewController *self, SEL, id, id);
id __cdecl -[GADAdAppViewController initWithAdView:](struct GADAdAppViewController *self, SEL, id);
void __cdecl -[GADAdAppViewController dealloc](struct GADAdAppViewController *self, SEL);
void __cdecl -[GADAdAppViewController setUseCustomClose:](struct GADAdAppViewController *self, SEL, char);
void __cdecl -[GADAdAppViewController updateCloseButtonVisibilityAndImage](struct GADAdAppViewController *self, SEL);
char __cdecl -[GADAdAppViewController isLoaded](struct GADAdAppViewController *self, SEL);
void __cdecl -[GADAdAppViewController setCustomClosePosition:](struct GADAdAppViewController *self, SEL, int);
void __cdecl -[GADAdAppViewController closeButtonPressed:](struct GADAdAppViewController *self, SEL, id);
char __cdecl -[GADAdAppViewController shouldDismissOnApplicationEnteringForeground](struct GADAdAppViewController *self, SEL);
void __cdecl -[GADAdAppViewController viewWillAppear:](struct GADAdAppViewController *self, SEL, char);
void __cdecl -[GADAdAppViewController viewWillDisappear:](struct GADAdAppViewController *self, SEL, char);
void __cdecl -[GADAdAppViewController viewDidAppear:](struct GADAdAppViewController *self, SEL, char);
void __cdecl -[GADAdAppViewController viewWillLayoutSubviews](struct GADAdAppViewController *self, SEL);
void __cdecl -[GADAdAppViewController positionMRAIDCloseButton](struct GADAdAppViewController *self, SEL);
void __cdecl -[GADAdAppViewController configureView](struct GADAdAppViewController *self, SEL);
void __cdecl -[GADAdAppViewController didRotateFromInterfaceOrientation:](struct GADAdAppViewController *self, SEL, int);
void __cdecl -[GADAdAppViewController viewChangedToOrientation:](struct GADAdAppViewController *self, SEL, int);
void __cdecl -[GADAdAppViewController load:](struct GADAdAppViewController *self, SEL, id);
void __cdecl -[GADAdAppViewController loadHTML:baseURL:](struct GADAdAppViewController *self, SEL, id, id);
char __cdecl -[GADAdAppViewController useCustomClose](struct GADAdAppViewController *self, SEL);
int __cdecl -[GADAdAppViewController customClosePosition](struct GADAdAppViewController *self, SEL);
id __cdecl -[GADAdAppViewController adView](struct GADAdAppViewController *self, SEL);
void __cdecl -[GADAdAppViewController setAdView:](struct GADAdAppViewController *self, SEL, id);
id __cdecl -[GADAdAppViewController hostViewController](struct GADAdAppViewController *self, SEL);
id __cdecl -[GADAdAppViewController adViewDelegate](struct GADAdAppViewController *self, SEL);
void __cdecl -[GADAdAppViewController setAdViewDelegate:](struct GADAdAppViewController *self, SEL, id);
id __cdecl -[GADAdAppViewController closeButton](struct GADAdAppViewController *self, SEL);
void __cdecl -[GADAdAppViewController setCloseButton:](struct GADAdAppViewController *self, SEL, id);
void __cdecl -[GADAdAppViewController .cxx_destruct](struct GADAdAppViewController *self, SEL);
id __cdecl +[GADOverlayProxy overlayProxyForViewController:](struct GADOverlayProxy *self, SEL, id);
id __cdecl -[GADOverlayProxy initWithViewController:](struct GADOverlayProxy *self, SEL, id);
id __cdecl -[GADOverlayProxy init](struct GADOverlayProxy *self, SEL);
void __cdecl -[GADOverlayProxy presentFromViewController:completion:](struct GADOverlayProxy *self, SEL, id, id);
char __cdecl -[GADOverlayProxy shouldDismissOnApplicationEnteringForeground](struct GADOverlayProxy *self, SEL);
void __cdecl -[GADOverlayProxy relinquishScreenWithCompletion:](struct GADOverlayProxy *self, SEL, id);
void __fastcall sub_198D88(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_198DE4(int a1, int a2);
void __fastcall sub_198E0C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[GADOverlayProxy intermission](struct GADOverlayProxy *self, SEL);
id __cdecl -[GADOverlayProxy viewController](struct GADOverlayProxy *self, SEL);
id __cdecl -[GADOverlayProxy slot](struct GADOverlayProxy *self, SEL);
void __cdecl -[GADOverlayProxy setSlot:](struct GADOverlayProxy *self, SEL, id);
id __cdecl -[GADOverlayProxy opener](struct GADOverlayProxy *self, SEL);
void __cdecl -[GADOverlayProxy setOpener:](struct GADOverlayProxy *self, SEL, id);
void __cdecl -[GADOverlayProxy .cxx_destruct](struct GADOverlayProxy *self, SEL);
void __cdecl +[GADMediatedNativeAdNotificationSource mediatedNativeAdWillPresentScreen:](struct GADMediatedNativeAdNotificationSource *self, SEL, id);
void __cdecl +[GADMediatedNativeAdNotificationSource mediatedNativeAdWillDismissScreen:](struct GADMediatedNativeAdNotificationSource *self, SEL, id);
void __cdecl +[GADMediatedNativeAdNotificationSource mediatedNativeAdDidDismissScreen:](struct GADMediatedNativeAdNotificationSource *self, SEL, id);
void __cdecl +[GADMediatedNativeAdNotificationSource mediatedNativeAdWillLeaveApplication:](struct GADMediatedNativeAdNotificationSource *self, SEL, id);
id __cdecl -[GADOpener init](struct GADOpener *self, SEL);
char __cdecl -[GADOpener canOpenContent:](struct GADOpener *self, SEL, id);
void __cdecl -[GADOpener disableAutoCollapseForResize](struct GADOpener *self, SEL);
void __cdecl -[GADOpener didOpenExternalApp](struct GADOpener *self, SEL);
void __cdecl -[GADOpener didOpenInApp](struct GADOpener *self, SEL);
void __cdecl -[GADOpener didOpen](struct GADOpener *self, SEL);
char __cdecl -[GADOpener shouldPerformOpenActionWithOrientations:](struct GADOpener *self, SEL, unsigned int);
char __cdecl -[GADOpener shouldPerformOpenAction](struct GADOpener *self, SEL);
id __cdecl -[GADOpener confirmationMessageForURL:](struct GADOpener *self, SEL, id);
void __cdecl -[GADOpener confirmClickToURL:message:](struct GADOpener *self, SEL, id, id);
void __cdecl -[GADOpener openInAppStore:fallbackURL:](struct GADOpener *self, SEL, id, id);
void __fastcall sub_199CBC(int a1, char a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_199D98(int a1, int a2);
void __fastcall sub_199DC8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADOpener openInAppStoreWithProductID:fallbackURL:shouldWaitForFetch:](struct GADOpener *self, SEL, id, id, char);
void __fastcall sub_19A654(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_19A684(int a1, int a2);
int __fastcall sub_19A690(int a1);
int __fastcall sub_19A698(int a1, int a2, int a3);
void __fastcall sub_19A948(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_19A978(int a1, int a2);
int __fastcall sub_19A984(int a1);
int __fastcall sub_19A98C(int a1, int a2);
void __fastcall sub_19A9CC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_19AA04(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_19AA34(int a1, int a2);
int __fastcall sub_19AA40(int a1);
void __cdecl -[GADOpener fetchInAppStoreForProductID:](struct GADOpener *self, SEL, id);
void __fastcall sub_19AC48(int a1, char a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_19AC9C(int a1, int a2);
void __fastcall sub_19ACC4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADOpener openInAppPurchase:quantity:reportingURLStringFormats:](struct GADOpener *self, SEL, id, int, id);
void __cdecl -[GADOpener openBrowserToURL:supportedOrientations:](struct GADOpener *self, SEL, id, unsigned int);
void __cdecl -[GADOpener configureOverlay:orientations:usingCustomClose:](struct GADOpener *self, SEL, id, unsigned int, char);
id __cdecl -[GADOpener overlayWithOrientations:useCustomClose:](struct GADOpener *self, SEL, unsigned int, char);
void __cdecl -[GADOpener openWebApp:supportedOrientations:usingCustomClose:](struct GADOpener *self, SEL, id, unsigned int, char);
void __cdecl -[GADOpener openWebAppWithHTML:supportedOrientations:usingCustomClose:](struct GADOpener *self, SEL, id, unsigned int, char);
void __cdecl -[GADOpener expandToWebAppWithSupportedOrientations:usingCustomClose:](struct GADOpener *self, SEL, unsigned int, char);
void __fastcall sub_19BA90(int a1);
int __fastcall sub_19BB44(int a1, int a2);
int __fastcall sub_19BB50(int a1);
void __fastcall sub_19BB58(int a1);
int __fastcall sub_19BBEC(int a1, int a2);
int __fastcall sub_19BBF8(int a1);
void __cdecl -[GADOpener openWebAppWithResizeProperties:](struct GADOpener *self, SEL, id);
int __fastcall sub_19C474(int a1, int a2);
int __fastcall sub_19C694(int a1, int a2);
void __fastcall sub_19C69C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_19C6A4(int a1);
int __fastcall sub_19C768(int a1, int a2);
int __fastcall sub_19C794(int a1);
void __fastcall sub_19C7B4(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_19C7E8(int a1, int a2);
int __fastcall sub_19C818(int a1, void *a2, struct objc_object *a3, struct objc_object *a4);
void __cdecl -[GADOpener openApp:](struct GADOpener *self, SEL, id);
void __fastcall sub_19CA14(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_19CA68(int a1, int a2);
void __fastcall sub_19CA70(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADOpener presentComposerController:](struct GADOpener *self, SEL, id);
void *__fastcall sub_19CD20(int a1);
int __fastcall sub_19CD3C(int a1, int a2);
void __fastcall sub_19CD5C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADOpener openEmailComposer:](struct GADOpener *self, SEL, id);
void __cdecl -[GADOpener openSmsComposer:](struct GADOpener *self, SEL, id);
void __cdecl -[GADOpener openCalendarWithDictionary:](struct GADOpener *self, SEL, id);
void __fastcall sub_19DEC4(int a1, char a2, int a3, int a4, struct objc_object *a5);
void *__fastcall sub_19DFB8(int a1);
int __fastcall sub_19E028(int a1, int a2);
void __fastcall sub_19E050(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_19E078(int a1, int a2);
int __fastcall sub_19E0B8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4);
void __cdecl -[GADOpener mailComposeController:didFinishWithResult:error:](struct GADOpener *self, SEL, id, int, id);
void __fastcall sub_19E17C(int a1);
void __fastcall sub_19E294(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_19E318(int a1, int a2);
void __fastcall sub_19E320(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_19E328(int a1, int a2);
void __fastcall sub_19E330(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADOpener messageComposeViewController:didFinishWithResult:](struct GADOpener *self, SEL, id, int);
void __fastcall sub_19E3C4(int a1);
void __fastcall sub_19E4DC(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_19E578(int a1, int a2);
void __fastcall sub_19E580(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_19E588(int a1, int a2);
void __fastcall sub_19E590(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADOpener eventEditViewController:didCompleteWithAction:](struct GADOpener *self, SEL, id, int);
void __cdecl -[GADOpener alertView:clickedButtonAtIndex:](struct GADOpener *self, SEL, id, int);
id __cdecl -[GADOpener viewController](struct GADOpener *self, SEL);
void __cdecl -[GADOpener setViewController:](struct GADOpener *self, SEL, id);
id __cdecl -[GADOpener referringURL](struct GADOpener *self, SEL);
void __cdecl -[GADOpener setReferringURL:](struct GADOpener *self, SEL, id);
id __cdecl -[GADOpener adView](struct GADOpener *self, SEL);
void __cdecl -[GADOpener setAdView:](struct GADOpener *self, SEL, id);
id __cdecl -[GADOpener slot](struct GADOpener *self, SEL);
void __cdecl -[GADOpener setSlot:](struct GADOpener *self, SEL, id);
char __cdecl -[GADOpener didOpenAnotherApplication](struct GADOpener *self, SEL);
void __cdecl -[GADOpener setDidOpenAnotherApplication:](struct GADOpener *self, SEL, char);
id __cdecl -[GADOpener delegate](struct GADOpener *self, SEL);
void __cdecl -[GADOpener setDelegate:](struct GADOpener *self, SEL, id);
id __cdecl -[GADOpener navigationURL](struct GADOpener *self, SEL);
void __cdecl -[GADOpener setNavigationURL:](struct GADOpener *self, SEL, id);
char __cdecl -[GADOpener isAutoClickProtected](struct GADOpener *self, SEL);
void __cdecl -[GADOpener setAutoClickProtected:](struct GADOpener *self, SEL, char);
id __cdecl -[GADOpener cachedStoreProductViewController](struct GADOpener *self, SEL);
void __cdecl -[GADOpener setCachedStoreProductViewController:](struct GADOpener *self, SEL, id);
void __cdecl -[GADOpener .cxx_destruct](struct GADOpener *self, SEL);
id __cdecl -[GADNativeCustomTemplateAd initWithDictionary:options:](struct GADNativeCustomTemplateAd *self, SEL, id, id);
void __cdecl -[GADNativeCustomTemplateAd dealloc](struct GADNativeCustomTemplateAd *self, SEL);
id __cdecl -[GADNativeCustomTemplateAd description](struct GADNativeCustomTemplateAd *self, SEL);
void __cdecl -[GADNativeCustomTemplateAd removeCustomClickObserver](struct GADNativeCustomTemplateAd *self, SEL);
void __cdecl -[GADNativeCustomTemplateAd setSlot:](struct GADNativeCustomTemplateAd *self, SEL, id);
char __cdecl -[GADNativeCustomTemplateAd hasValidConfigurationForRequestParameters:](struct GADNativeCustomTemplateAd *self, SEL, id);
id __cdecl -[GADNativeCustomTemplateAd clickActionTemplateID](struct GADNativeCustomTemplateAd *self, SEL);
void __cdecl -[GADNativeCustomTemplateAd performClickOnAssetWithKey:customClickHandler:](struct GADNativeCustomTemplateAd *self, SEL, id, id);
void __fastcall sub_19F854(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_19F9D8(int a1, int a2);
void __fastcall sub_19FA0C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADNativeCustomTemplateAd recordImpression](struct GADNativeCustomTemplateAd *self, SEL);
id __cdecl -[GADNativeCustomTemplateAd requiredAssets](struct GADNativeCustomTemplateAd *self, SEL);
id __cdecl -[GADNativeCustomTemplateAd availableAssetKeys](struct GADNativeCustomTemplateAd *self, SEL);
id __cdecl -[GADNativeCustomTemplateAd imageForKey:](struct GADNativeCustomTemplateAd *self, SEL, id);
id __cdecl -[GADNativeCustomTemplateAd stringForKey:](struct GADNativeCustomTemplateAd *self, SEL, id);
void __cdecl -[GADNativeCustomTemplateAd handleNativeAdCustomClick:](struct GADNativeCustomTemplateAd *self, SEL, id);
void __fastcall sub_19FC88(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_19FCEC(int a1, int a2);
void __fastcall sub_19FCF4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADNativeCustomTemplateAd setImage:forKey:](struct GADNativeCustomTemplateAd *self, SEL, id, id);
void __cdecl -[GADNativeCustomTemplateAd loadImageAssetsWithImageDictionary:](struct GADNativeCustomTemplateAd *self, SEL, id);
int __fastcall sub_19FF40(int a1, int a2, int a3);
void __fastcall sub_1A0130(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1A01C0(int a1, int a2);
void __fastcall sub_1A01F8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_1A0228(int a1, int a2);
int __fastcall sub_1A0250(int a1, void *a2, struct objc_object *a3, struct objc_object *a4);
void __cdecl -[GADNativeCustomTemplateAd loadAssetsWithCompletionHandler:](struct GADNativeCustomTemplateAd *self, SEL, id);
void __fastcall sub_1A03E4(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1A0428(int a1, int a2);
void __fastcall sub_1A0430(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl +[GADNativeCustomTemplateAd requiredDelegateProtocol](struct GADNativeCustomTemplateAd_meta *self, SEL);
id __cdecl +[GADNativeCustomTemplateAd requestParametersForAdLoader:](struct GADNativeCustomTemplateAd *self, SEL, id);
void __cdecl -[GADNativeCustomTemplateAd adLoaderDidReceiveAd:](struct GADNativeCustomTemplateAd *self, SEL, id);
id __cdecl -[GADNativeCustomTemplateAd templateID](struct GADNativeCustomTemplateAd *self, SEL);
void __cdecl -[GADNativeCustomTemplateAd .cxx_destruct](struct GADNativeCustomTemplateAd *self, SEL);
char __cdecl -[GADBrowserAdViewDelegate adView:shouldStartLoadWithRequest:navigationType:](struct GADBrowserAdViewDelegate *self, SEL, id, id, int);
void __cdecl -[GADBrowserAdViewDelegate adViewDidStartLoad:](struct GADBrowserAdViewDelegate *self, SEL, id);
void __cdecl -[GADBrowserAdViewDelegate adViewDidFinishLoad:](struct GADBrowserAdViewDelegate *self, SEL, id);
void __cdecl -[GADBrowserAdViewDelegate adView:didFailLoadWithError:](struct GADBrowserAdViewDelegate *self, SEL, id, id);
id __cdecl -[GADBrowserAdViewDelegate browserControllerForAdView:](struct GADBrowserAdViewDelegate *self, SEL, id);
int __fastcall nullsub_50(_DWORD); // weak
int __fastcall nullsub_51(_DWORD); // weak
Class __cdecl -[GADAdLoader connectorClassForAd:](struct GADAdLoader *self, SEL, id);
id __cdecl -[GADAdLoader adLoaderConfigurationForAd:](struct GADAdLoader *self, SEL, id);
void __cdecl -[GADAdLoader ad:processMediatedAd:withCompletionHandler:](struct GADAdLoader *self, SEL, id, id, id);
id __cdecl -[GADAdAppAdViewDelegate initWithAdAppViewController:](struct GADAdAppAdViewDelegate *self, SEL, id);
char __cdecl -[GADAdAppAdViewDelegate adView:shouldStartLoadWithRequest:navigationType:](struct GADAdAppAdViewDelegate *self, SEL, id, id, int);
void *__fastcall sub_1A1730(int a1);
int __fastcall sub_1A1744(int a1, int a2);
void __fastcall sub_1A174C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADAdAppAdViewDelegate adViewDidStartLoad:](struct GADAdAppAdViewDelegate *self, SEL, id);
void __cdecl -[GADAdAppAdViewDelegate adViewDidFinishLoad:](struct GADAdAppAdViewDelegate *self, SEL, id);
void __cdecl -[GADAdAppAdViewDelegate adView:didFailLoadWithError:](struct GADAdAppAdViewDelegate *self, SEL, id, id);
id __cdecl -[GADAdAppAdViewDelegate webAppViewController](struct GADAdAppAdViewDelegate *self, SEL);
void __cdecl -[GADAdAppAdViewDelegate setWebAppViewController:](struct GADAdAppAdViewDelegate *self, SEL, id);
void __cdecl -[GADAdAppAdViewDelegate .cxx_destruct](struct GADAdAppAdViewDelegate *self, SEL);
id __cdecl -[GADBannerAdViewDelegate initWithSlot:](struct GADBannerAdViewDelegate *self, SEL, id);
id __cdecl -[GADBannerAdViewDelegate init](struct GADBannerAdViewDelegate *self, SEL);
char __cdecl -[GADBannerAdViewDelegate isClick:](struct GADBannerAdViewDelegate *self, SEL, int);
char __cdecl -[GADBannerAdViewDelegate adView:shouldStartLoadWithRequest:navigationType:](struct GADBannerAdViewDelegate *self, SEL, id, id, int);
void __cdecl -[GADBannerAdViewDelegate adViewDidFinishLoad:](struct GADBannerAdViewDelegate *self, SEL, id);
void __cdecl -[GADBannerAdViewDelegate adView:didFailLoadWithError:](struct GADBannerAdViewDelegate *self, SEL, id, id);
void __cdecl -[GADBannerAdViewDelegate adView:contentSizeDidChange:](struct GADBannerAdViewDelegate *self, SEL, id, struct CGSize);
void __cdecl -[GADBannerAdViewDelegate loadHandlerDidChangeDelay:from:to:](struct GADBannerAdViewDelegate *self, SEL, id, int, int);
void __cdecl -[GADBannerAdViewDelegate loadHandlerDidCancel:](struct GADBannerAdViewDelegate *self, SEL, id);
id __cdecl -[GADBannerAdViewDelegate slot](struct GADBannerAdViewDelegate *self, SEL);
char __cdecl -[GADBannerAdViewDelegate isLoadDelayed](struct GADBannerAdViewDelegate *self, SEL);
char __cdecl -[GADBannerAdViewDelegate isLoadFinished](struct GADBannerAdViewDelegate *self, SEL);
void __cdecl -[GADBannerAdViewDelegate .cxx_destruct](struct GADBannerAdViewDelegate *self, SEL);
void __fastcall sub_1A2858(int a1, int a2);
id __cdecl -[GADShingleHashTuple initWithShingle:hashValue:](struct GADShingleHashTuple *self, SEL, id, uint64_t);
id __cdecl -[GADShingleHashTuple init](struct GADShingleHashTuple *self, SEL);
id __cdecl -[GADShingleHashTuple shingle](struct GADShingleHashTuple *self, SEL);
uint64_t __cdecl -[GADShingleHashTuple hashValue](struct GADShingleHashTuple *self, SEL);
void __cdecl -[GADShingleHashTuple .cxx_destruct](struct GADShingleHashTuple *self, SEL);
id __cdecl -[GADNativeAdAttribution init](struct GADNativeAdAttribution *self, SEL);
id __cdecl -[GADNativeAdAttribution initWithDictionary:](struct GADNativeAdAttribution *self, SEL, id);
id __fastcall sub_1A31F8(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[GADNativeAdAttribution finishedLoadingNativeAdImage:](struct GADNativeAdAttribution *self, SEL, id);
int __fastcall sub_1A3558(int a1);
int __fastcall sub_1A3568(int a1, int a2);
void __fastcall sub_1A3578(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADNativeAdAttribution failedLoadingNativeAdImageWithError:](struct GADNativeAdAttribution *self, SEL, id);
int __fastcall sub_1A3664(int a1);
int __fastcall sub_1A3670(int a1, int a2);
void __fastcall sub_1A3698(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADNativeAdAttribution loadAssetsWithCompletionHandler:](struct GADNativeAdAttribution *self, SEL, id);
int __fastcall sub_1A3974(int a1);
int __fastcall sub_1A3984(int a1, int a2);
void __fastcall sub_1A3994(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void *__fastcall sub_1A399C(int a1, int a2);
int __fastcall sub_1A39D4(int a1, int a2);
void __fastcall sub_1A39F4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[GADNativeAdAttribution icons](struct GADNativeAdAttribution *self, SEL);
double __cdecl -[GADNativeAdAttribution iconPresentationDuration](struct GADNativeAdAttribution *self, SEL);
double __cdecl -[GADNativeAdAttribution iconAnimationDuration](struct GADNativeAdAttribution *self, SEL);
id __cdecl -[GADNativeAdAttribution text](struct GADNativeAdAttribution *self, SEL);
id __cdecl -[GADNativeAdAttribution font](struct GADNativeAdAttribution *self, SEL);
id __cdecl -[GADNativeAdAttribution textColor](struct GADNativeAdAttribution *self, SEL);
id __cdecl -[GADNativeAdAttribution backgroundColor](struct GADNativeAdAttribution *self, SEL);
void __cdecl -[GADNativeAdAttribution .cxx_destruct](struct GADNativeAdAttribution *self, SEL);
id __cdecl -[GADContent init](struct GADContent *self, SEL);
id __cdecl -[GADContent initWithSequenceNumber:](struct GADContent *self, SEL, unsigned int);
signed int __fastcall sub_1A3ED0(int a1, int a2);
void __cdecl -[GADContent deductServedPenalty](struct GADContent *self, SEL);
void __cdecl -[GADContent updateContentWithText:](struct GADContent *self, SEL, id);
void __cdecl -[GADContent selectShinglesFromTokens:](struct GADContent *self, SEL, id);
unsigned int __fastcall sub_1A4B3C(void *a1);
unsigned __int64 __fastcall sub_1A4BB8(int a1, void *a2);
int __fastcall sub_1A4C5C(int a1, int a2);
int __fastcall sub_1A4C6C(int a1);
void __cdecl -[GADContent applyRollingHashToTokens:baseHash:](struct GADContent *self, SEL, id, uint64_t);
signed __int64 __fastcall sub_1A4F24(signed __int64 a1, signed int a2);
void __fastcall sub_1A4FD0(int a1, void *a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1A516C(int a1, int a2);
int __fastcall sub_1A51A0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4);
void __cdecl -[GADContent updateHeapWithHash:shingle:](struct GADContent *self, SEL, uint64_t, id);
id __cdecl -[GADContent shingleHash](struct GADContent *self, SEL);
id __cdecl -[GADContent fingerprint](struct GADContent *self, SEL);
int __cdecl -[GADContent score](struct GADContent *self, SEL);
unsigned int __cdecl -[GADContent sequenceNumber](struct GADContent *self, SEL);
void __cdecl -[GADContent .cxx_destruct](struct GADContent *self, SEL);
char __cdecl +[GADNotification isNotificationURL:](struct GADNotification *self, SEL, id);
id __cdecl -[GADNotification init](struct GADNotification *self, SEL);
id __cdecl -[GADNotification initWithName:parameters:](struct GADNotification *self, SEL, id, id);
id __cdecl -[GADNotification initWithNotificationURL:](struct GADNotification *self, SEL, id);
id __cdecl -[GADNotification description](struct GADNotification *self, SEL);
id __cdecl -[GADNotification name](struct GADNotification *self, SEL);
id __cdecl -[GADNotification parameters](struct GADNotification *self, SEL);
void __cdecl -[GADNotification .cxx_destruct](struct GADNotification *self, SEL);
int __fastcall nullsub_53(_DWORD); // weak
id __cdecl -[NSDictionary(GADObjectValidation) gad_objectForKey:ifIsKindOfClass:](struct NSDictionary *self, SEL, id, Class);
int __fastcall nullsub_54(_DWORD); // weak
id __cdecl -[GADApplication availableAdapterNames](struct GADApplication *self, SEL);
int __fastcall sub_1A5DA8(int a1, int a2);
void __fastcall sub_1A5DBC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_1A5DC4(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1A5E04(int a1, int a2);
void __fastcall sub_1A5E2C(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[GADApplication setAvailableAdapterNames:](struct GADApplication *self, SEL, id);
void __fastcall sub_1A5F08(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1A5F60(int a1, int a2);
void __fastcall sub_1A5F80(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADApplication updateAvailableAdapterNamesWithPotentialAdapterNames:](struct GADApplication *self, SEL, id);
void __cdecl +[GADMobileAds disableAutomatedInAppPurchaseReporting](struct GADMobileAds_meta *self, SEL);
void __cdecl +[GADMobileAds disableSDKCrashReporting](struct GADMobileAds_meta *self, SEL);
int __fastcall nullsub_55(_DWORD, _DWORD); // weak
void __cdecl -[DFPBannerView recordClick](struct DFPBannerView *self, SEL);
void __cdecl -[DFPBannerView recordCustomAdImpression](struct DFPBannerView *self, SEL);
void __cdecl -[DFPBannerView finishedRenderingAdView:](struct DFPBannerView *self, SEL, id);
id __cdecl -[GADCacheSet init](struct GADCacheSet *self, SEL);
id __cdecl -[GADCacheSet initWithMaxCapacity:](struct GADCacheSet *self, SEL, unsigned int);
void __fastcall sub_1A65F4(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1A6624(int a1, int a2);
int __fastcall sub_1A6630(int a1);
void __cdecl -[GADCacheSet dealloc](struct GADCacheSet *self, SEL);
id __cdecl -[GADCacheSet anyObject](struct GADCacheSet *self, SEL);
int __fastcall sub_1A67B0(int a1, int a2);
void __fastcall sub_1A67C4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void *__fastcall sub_1A67CC(int a1);
int __fastcall sub_1A684C(int a1, int a2);
void __fastcall sub_1A6874(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[GADCacheSet addObject:](struct GADCacheSet *self, SEL, id);
void *__fastcall sub_1A694C(int a1);
int __fastcall sub_1A69B4(int a1, int a2);
void __fastcall sub_1A69D4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADCacheSet removeAllObjects](struct GADCacheSet *self, SEL);
void *__fastcall sub_1A6A74(int a1);
int __fastcall sub_1A6A98(int a1, int a2);
void __fastcall sub_1A6AA0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
unsigned int __cdecl -[GADCacheSet maxCapacity](struct GADCacheSet *self, SEL);
void __cdecl -[GADCacheSet .cxx_destruct](struct GADCacheSet *self, SEL);
id __cdecl -[GADStatisticsCore init](struct GADStatisticsCore *self, SEL);
void __cdecl -[GADStatisticsCore dealloc](struct GADStatisticsCore *self, SEL);
void __cdecl -[GADStatisticsCore applicationWillTerminate:](struct GADStatisticsCore *self, SEL, id);
void __cdecl -[GADStatisticsCore savePersistentStatistics](struct GADStatisticsCore *self, SEL);
void __cdecl -[GADStatisticsCore setIdentifier:](struct GADStatisticsCore *self, SEL, id);
void __fastcall sub_1A6E90(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1A6FB0(int a1, int a2);
void __fastcall sub_1A6FD0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[GADStatisticsCore arrayForKey:](struct GADStatisticsCore *self, SEL, id);
int __fastcall sub_1A7110(int a1, int a2);
void __fastcall sub_1A7124(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_1A712C(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1A71A0(int a1, int a2);
void __fastcall sub_1A71D0(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[GADStatisticsCore appendString:toArrayForKey:](struct GADStatisticsCore *self, SEL, id, id);
void __fastcall sub_1A7334(int a1);
int __fastcall sub_1A746C(int a1, int a2);
void __fastcall sub_1A7494(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADStatisticsCore removeObjectForKey:](struct GADStatisticsCore *self, SEL, id);
void *__fastcall sub_1A7570(int a1);
int __fastcall sub_1A75BC(int a1, int a2);
void __fastcall sub_1A75DC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADStatisticsCore .cxx_destruct](struct GADStatisticsCore *self, SEL);
id __cdecl +[GADNativeAdImage nativeAdImagesFromImageConfigurationArray:options:](struct GADNativeAdImage *self, SEL, id, id);
id __cdecl -[GADNativeAdImage initWithDictionary:](struct GADNativeAdImage *self, SEL, id);
id __cdecl -[GADNativeAdImage init](struct GADNativeAdImage *self, SEL);
id __cdecl -[GADNativeAdImage description](struct GADNativeAdImage *self, SEL);
void __cdecl -[GADNativeAdImage loadImageWithCompletionHandler:](struct GADNativeAdImage *self, SEL, id);
int __fastcall sub_1A7F10(int a1);
int __fastcall sub_1A7F20(int a1, int a2);
void __fastcall sub_1A7F30(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_1A7F38(int a1);
int __fastcall sub_1A7F44(int a1, int a2);
void __fastcall sub_1A7F6C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_1A7F8C(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1A8140(int a1, int a2);
void __fastcall sub_1A8168(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[GADNativeAdImage image](struct GADNativeAdImage *self, SEL);
void __cdecl -[GADNativeAdImage setImage:](struct GADNativeAdImage *self, SEL, id);
id __cdecl -[GADNativeAdImage imageURL](struct GADNativeAdImage *self, SEL);
void __cdecl -[GADNativeAdImage setImageURL:](struct GADNativeAdImage *self, SEL, id);
float __cdecl -[GADNativeAdImage scale](struct GADNativeAdImage *self, SEL);
void __cdecl -[GADNativeAdImage setScale:](struct GADNativeAdImage *self, SEL, float);
char __cdecl -[GADNativeAdImage required](struct GADNativeAdImage *self, SEL);
void __cdecl -[GADNativeAdImage setRequired:](struct GADNativeAdImage *self, SEL, char);
void __cdecl -[GADNativeAdImage .cxx_destruct](struct GADNativeAdImage *self, SEL);
id __cdecl -[GADInterstitial initWithAdUnitID:](struct GADInterstitial *self, SEL, id);
void __cdecl -[GADInterstitial dealloc](struct GADInterstitial *self, SEL);
void __cdecl -[GADInterstitial cancel](struct GADInterstitial *self, SEL);
void __cdecl -[GADInterstitial sendInterstitialError:](struct GADInterstitial *self, SEL, id);
id __cdecl -[GADInterstitial adUnitID](struct GADInterstitial *self, SEL);
char __cdecl -[GADInterstitial slotShouldReloadCurrentRequest:](struct GADInterstitial *self, SEL, id);
char __cdecl -[GADInterstitial slot:shouldLoadRequest:](struct GADInterstitial *self, SEL, id, id);
void __cdecl -[GADInterstitial slotDidReceiveAdClick:](struct GADInterstitial *self, SEL, id);
id __cdecl -[GADInterstitial coordinatesOfContentInScreen:](struct GADInterstitial *self, SEL, id);
void __cdecl -[GADInterstitial slotFinishedLoadingAdContent:](struct GADInterstitial *self, SEL, id);
void __fastcall sub_1A8970(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1A89E0(int a1, int a2);
void __fastcall sub_1A89E8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADInterstitial slot:didFailToLoadAdContentWithError:](struct GADInterstitial *self, SEL, id, id);
void __fastcall sub_1A8A90(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1A8B00(int a1, int a2);
void __fastcall sub_1A8B20(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADInterstitial slotWillPresentScreen:](struct GADInterstitial *self, SEL, id);
void __fastcall sub_1A8BAC(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1A8C1C(int a1, int a2);
void __fastcall sub_1A8C24(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADInterstitial slotWillDismissScreen:](struct GADInterstitial *self, SEL, id);
void __fastcall sub_1A8C98(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1A8D08(int a1, int a2);
void __fastcall sub_1A8D10(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADInterstitial slotDidDismissScreen:](struct GADInterstitial *self, SEL, id);
void __fastcall sub_1A8D84(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1A8E7C(int a1, int a2);
void __fastcall sub_1A8E84(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADInterstitial slotWillLeaveApplication:](struct GADInterstitial *self, SEL, id);
void __fastcall sub_1A8EF8(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1A8F68(int a1, int a2);
void __fastcall sub_1A8F70(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADInterstitial loadRequest:](struct GADInterstitial *self, SEL, id);
id __cdecl -[GADInterstitial adNetworkClassName](struct GADInterstitial *self, SEL);
char __cdecl -[GADInterstitial isReady](struct GADInterstitial *self, SEL);
void __cdecl -[GADInterstitial presentFromRootViewController:](struct GADInterstitial *self, SEL, id);
char __cdecl -[GADInterstitial canPresentFullScreen](struct GADInterstitial *self, SEL);
char __cdecl -[GADInterstitial slot:shouldProcessAdResponse:error:](struct GADInterstitial *self, SEL, id, id, id *);
char __cdecl -[GADInterstitial slot:shouldProcessMediatedAdResponse:error:](struct GADInterstitial *self, SEL, id, id, id *);
Class __cdecl -[GADInterstitial connectorClassForAd:](struct GADInterstitial *self, SEL, id);
id __cdecl -[GADInterstitial init](struct GADInterstitial *self, SEL);
void __cdecl -[GADInterstitial setAdUnitID:](struct GADInterstitial *self, SEL, id);
id __cdecl -[GADInterstitial delegate](struct GADInterstitial *self, SEL);
void __cdecl -[GADInterstitial setDelegate:](struct GADInterstitial *self, SEL, id);
id __cdecl -[GADInterstitial inAppPurchaseDelegate](struct GADInterstitial *self, SEL);
void __cdecl -[GADInterstitial setInAppPurchaseDelegate:](struct GADInterstitial *self, SEL, id);
char __cdecl -[GADInterstitial hasBeenUsed](struct GADInterstitial *self, SEL);
void __cdecl -[GADInterstitial setHasBeenUsed:](struct GADInterstitial *self, SEL, char);
id __cdecl -[GADInterstitial viewController](struct GADInterstitial *self, SEL);
void __cdecl -[GADInterstitial setViewController:](struct GADInterstitial *self, SEL, id);
id __cdecl -[GADInterstitial slot](struct GADInterstitial *self, SEL);
void __cdecl -[GADInterstitial setSlot:](struct GADInterstitial *self, SEL, id);
void __cdecl -[GADInterstitial .cxx_destruct](struct GADInterstitial *self, SEL);
void __cdecl -[GADBannerView commonInitWithAdSize:](struct GADBannerView *self, SEL, struct GADAdSize);
id __cdecl -[GADBannerView initWithFrame:adSize:](struct GADBannerView *self, SEL, struct CGRect, struct GADAdSize);
id __cdecl -[GADBannerView initWithCoder:](struct GADBannerView *self, SEL, id);
id __cdecl -[GADBannerView initWithFrame:](struct GADBannerView *self, SEL, struct CGRect);
id __cdecl -[GADBannerView init](struct GADBannerView *self, SEL);
id __cdecl -[GADBannerView initWithAdSize:](struct GADBannerView *self, SEL, struct GADAdSize);
id __cdecl -[GADBannerView initWithAdSize:origin:](struct GADBannerView *self, SEL, struct GADAdSize, struct CGPoint);
void __cdecl -[GADBannerView dealloc](struct GADBannerView *self, SEL);
void __cdecl -[GADBannerView setAdSize:andReload:](struct GADBannerView *self, SEL, struct GADAdSize, char);
void __cdecl -[GADBannerView setFrame:](struct GADBannerView *self, SEL, struct CGRect);
void __cdecl -[GADBannerView setBounds:](struct GADBannerView *self, SEL, struct CGRect);
struct CGSize __cdecl -[GADBannerView intrinsicContentSize](struct GADBannerView *self, SEL);
void __cdecl -[GADBannerView setAdUnitID:](struct GADBannerView *self, SEL, id);
id __cdecl -[GADBannerView adUnitID](struct GADBannerView *self, SEL);
void __cdecl -[GADBannerView setRootViewController:](struct GADBannerView *self, SEL, id);
struct GADAdSize *__cdecl -[GADBannerView adSize](struct GADAdSize *__return_ptr __struct_ptr retstr, struct GADBannerView *self, SEL);
void __cdecl -[GADBannerView setAdSizeFromExternalCGSize:](struct GADBannerView *self, SEL, struct CGSize);
void __cdecl -[GADBannerView setAdSize:](struct GADBannerView *self, SEL, struct GADAdSize);
id __cdecl -[GADBannerView adView](struct GADBannerView *self, SEL);
char __cdecl -[GADBannerView hasAutoRefreshed](struct GADBannerView *self, SEL);
id __cdecl -[GADBannerView mediatedAdView](struct GADBannerView *self, SEL);
id __cdecl -[GADBannerView adNetworkClassName](struct GADBannerView *self, SEL);
void __cdecl -[GADBannerView setAlpha:](struct GADBannerView *self, SEL, float);
void __cdecl -[GADBannerView setRootAdView:](struct GADBannerView *self, SEL, id);
void __cdecl -[GADBannerView setAutoloadEnabled:](struct GADBannerView *self, SEL, char);
void __fastcall sub_1AB0D8(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1AB10C(int a1, int a2);
int __fastcall sub_1AB118(int a1);
char __cdecl -[GADBannerView slotShouldReloadCurrentRequest:](struct GADBannerView *self, SEL, id);
void __cdecl -[GADBannerView slot:didReceiveAdView:](struct GADBannerView *self, SEL, id, id);
struct CGRect *__cdecl -[GADBannerView frameInInterface](struct CGRect *__return_ptr __struct_ptr retstr, struct GADBannerView *self, SEL);
id __cdecl -[GADBannerView coordinatesOfContentInScreen:](struct GADBannerView *self, SEL, id);
void __cdecl -[GADBannerView slot:contentSizeDidChange:](struct GADBannerView *self, SEL, id, struct CGSize);
char __cdecl -[GADBannerView slot:shouldLoadRequest:](struct GADBannerView *self, SEL, id, id);
void __cdecl -[GADBannerView slotFinishedLoadingAdContent:](struct GADBannerView *self, SEL, id);
void __fastcall sub_1AB67C(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1AB704(int a1, int a2);
void __fastcall sub_1AB70C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADBannerView slot:didFailToLoadAdContentWithError:](struct GADBannerView *self, SEL, id, id);
void __fastcall sub_1AB7B4(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1AB85C(int a1, int a2);
void __fastcall sub_1AB87C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADBannerView slotWillPresentScreen:](struct GADBannerView *self, SEL, id);
void __fastcall sub_1AB908(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1AB978(int a1, int a2);
void __fastcall sub_1AB980(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADBannerView slotWillDismissScreen:](struct GADBannerView *self, SEL, id);
void __fastcall sub_1AB9F4(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1ABA64(int a1, int a2);
void __fastcall sub_1ABA6C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADBannerView slotDidDismissScreen:](struct GADBannerView *self, SEL, id);
void __fastcall sub_1ABAE0(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1ABB50(int a1, int a2);
void __fastcall sub_1ABB58(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADBannerView slotWillLeaveApplication:](struct GADBannerView *self, SEL, id);
void __fastcall sub_1ABBCC(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1ABC3C(int a1, int a2);
void __fastcall sub_1ABC44(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADBannerView cacheViewHierarchyInformationForSlot:](struct GADBannerView *self, SEL, id);
int __fastcall sub_1AC070(int a1);
int __fastcall sub_1AC154(int a1, int a2);
void __fastcall sub_1AC174(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[GADBannerView viewHierarchyInformationForSlot:](struct GADBannerView *self, SEL, id);
int __fastcall sub_1AC278(int a1, int a2);
void __fastcall sub_1AC28C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_1AC294(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1AC2D0(int a1, int a2);
void __fastcall sub_1AC2F8(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[GADBannerView loadRequest:](struct GADBannerView *self, SEL, id);
void __cdecl -[GADBannerView didMoveToWindow](struct GADBannerView *self, SEL);
char __cdecl -[GADBannerView slot:shouldProcessAdResponse:error:](struct GADBannerView *self, SEL, id, id, id *);
char __cdecl -[GADBannerView slot:shouldProcessMediatedAdResponse:error:](struct GADBannerView *self, SEL, id, id, id *);
Class __cdecl -[GADBannerView connectorClassForAd:](struct GADBannerView *self, SEL, id);
id __cdecl -[GADBannerView rootViewController](struct GADBannerView *self, SEL);
id __cdecl -[GADBannerView delegate](struct GADBannerView *self, SEL);
void __cdecl -[GADBannerView setDelegate:](struct GADBannerView *self, SEL, id);
id __cdecl -[GADBannerView inAppPurchaseDelegate](struct GADBannerView *self, SEL);
void __cdecl -[GADBannerView setInAppPurchaseDelegate:](struct GADBannerView *self, SEL, id);
char __cdecl -[GADBannerView isAutoloadEnabled](struct GADBannerView *self, SEL);
id __cdecl -[GADBannerView rootAdView](struct GADBannerView *self, SEL);
id __cdecl -[GADBannerView slot](struct GADBannerView *self, SEL);
void __cdecl -[GADBannerView setSlot:](struct GADBannerView *self, SEL, id);
void __cdecl -[GADBannerView .cxx_destruct](struct GADBannerView *self, SEL);
int __fastcall nullsub_57(_DWORD); // weak
id __cdecl -[NSURL(GADNSURLUtilities) gad_appendQueryValue:forKey:](struct NSURL *self, SEL, id, id);
id __cdecl -[NSURL(GADNSURLUtilities) gad_appendQueryParameters:](struct NSURL *self, SEL, id);
id __cdecl -[NSURL(GADNSURLUtilities) gad_parameterValueForKey:](struct NSURL *self, SEL, id);
id __cdecl -[NSURL(GADNSURLUtilities) gad_parameterValuesForKey:](struct NSURL *self, SEL, id);
id __cdecl -[NSURL(GADNSURLUtilities) gad_dictionaryFromQueryParametersAndConvertKeysToLowercase:](struct NSURL *self, SEL, char);
void __fastcall sub_1AD090(int a1, void *a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1AD1F8(int a1, int a2);
void __fastcall sub_1AD200(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[NSURL(GADNSURLUtilities) gad_impressionTicket](struct NSURL *self, SEL);
id __cdecl -[NSURL(GADNSURLUtilities) gad_absoluteStringWithoutFragmentComponent](struct NSURL *self, SEL);
char __cdecl -[NSURL(GADNSURLUtilities) gad_isHostEqualToString:caseSensitive:](struct NSURL *self, SEL, id, char);
char __cdecl -[NSURL(GADNSURLUtilities) gad_isSchemeEqualToString:caseSensitive:](struct NSURL *self, SEL, id, char);
void __cdecl -[GADSlot setAdUnitID:](struct GADSlot *self, SEL, id);
void __cdecl -[GADSlot setAdType:andReloadRequest:](struct GADSlot *self, SEL, id, char);
void __cdecl +[GADSlot initialize](struct GADSlot_meta *self, SEL);
void __fastcall sub_1AD850(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[GADSlot setReloadInterval:](struct GADSlot *self, SEL, double);
void __cdecl -[GADSlot reloadCurrentRequest](struct GADSlot *self, SEL);
void __cdecl -[GADSlot deactivateReloadTimer](struct GADSlot *self, SEL);
void __cdecl -[GADSlot scheduleAdReloadTimer](struct GADSlot *self, SEL);
void __fastcall sub_1ADBD0(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1ADC00(int a1, int a2);
int __fastcall sub_1ADC0C(int a1);
void __cdecl -[GADSlot appWillBecomeInactive:](struct GADSlot *self, SEL, id);
void __cdecl -[GADSlot appDidBecomeActive:](struct GADSlot *self, SEL, id);
void __cdecl -[GADSlot adWillPresentFullScreen:](struct GADSlot *self, SEL, id);
void __cdecl -[GADSlot adDidRelinquishFullScreen:](struct GADSlot *self, SEL, id);
char __cdecl -[GADSlot isMakingRequest](struct GADSlot *self, SEL);
char __cdecl -[GADSlot shouldMakeRequest:](struct GADSlot *self, SEL, id);
void __cdecl -[GADSlot loadRequest:](struct GADSlot *self, SEL, id);
void __cdecl -[GADSlot loadNextRequestWithAutoRefresh:](struct GADSlot *self, SEL, char);
void __fastcall sub_1AE770(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1AE87C(int a1, int a2);
void __fastcall sub_1AE884(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADSlot logRequestTestAdInstructions](struct GADSlot *self, SEL);
void __cdecl -[GADSlot mediatedAdNetworkAutoRefreshed](struct GADSlot *self, SEL);
void __cdecl -[GADSlot bannerDidMoveToWindow:](struct GADSlot *self, SEL, id);
void __cdecl -[GADSlot interstitialViewWillAppear](struct GADSlot *self, SEL);
void __cdecl -[GADSlot interstitialViewWillDisappear](struct GADSlot *self, SEL);
void __cdecl -[GADSlot resetRequestState](struct GADSlot *self, SEL);
void __cdecl -[GADSlot loadAd:headers:](struct GADSlot *self, SEL, id, id);
id __cdecl -[GADSlot initWithFrame:](struct GADSlot *self, SEL, struct CGRect);
id __cdecl -[GADSlot init](struct GADSlot *self, SEL);
void __cdecl -[GADSlot dealloc](struct GADSlot *self, SEL);
id __cdecl -[GADSlot description](struct GADSlot *self, SEL);
void __cdecl -[GADSlot invalidate](struct GADSlot *self, SEL);
void __cdecl -[GADSlot cancelLoad](struct GADSlot *self, SEL);
void __cdecl -[GADSlot cancelPendingActions](struct GADSlot *self, SEL);
void __cdecl -[GADSlot cancelPendingAndFutureActions](struct GADSlot *self, SEL);
char __cdecl -[GADSlot isGoogleAdURL:](struct GADSlot *self, SEL, id);
id __cdecl -[GADSlot gestureClickURLWithURL:](struct GADSlot *self, SEL, id);
void __cdecl -[GADSlot finishedLoadingAdResponse:](struct GADSlot *self, SEL, id);
void __cdecl -[GADSlot processStandardAdResponse:](struct GADSlot *self, SEL, id);
void __cdecl -[GADSlot pingClickURLs](struct GADSlot *self, SEL);
void __cdecl -[GADSlot pingImpressionURLs](struct GADSlot *self, SEL);
void __cdecl -[GADSlot pingManualTrackingURLs](struct GADSlot *self, SEL);
char __cdecl -[GADSlot isMRAIDEnabled](struct GADSlot *self, SEL);
void __cdecl -[GADSlot processCustomRenderingAdResponse:](struct GADSlot *self, SEL, id);
char __cdecl -[GADSlot validateAdResponseWithAdSize:andValidAdSizes:](struct GADSlot *self, SEL, struct GADAdSize, id);
void __cdecl -[GADSlot setViewForAdUsingView:](struct GADSlot *self, SEL, id);
void __cdecl -[GADSlot adFetcher:didFetchAd:](struct GADSlot *self, SEL, id, id);
void __cdecl -[GADSlot adFetcher:didFailToFetchAd:withError:responseCode:](struct GADSlot *self, SEL, id, id, id, unsigned int);
id __cdecl -[GADSlot slotDelegate](struct GADSlot *self, SEL);
void __cdecl -[GADSlot setSlotDelegate:](struct GADSlot *self, SEL, id);
id __cdecl -[GADSlot adLoadDelegate](struct GADSlot *self, SEL);
void __cdecl -[GADSlot setAdLoadDelegate:](struct GADSlot *self, SEL, id);
id __cdecl -[GADSlot adEventDelegate](struct GADSlot *self, SEL);
void __cdecl -[GADSlot setAdEventDelegate:](struct GADSlot *self, SEL, id);
id __cdecl -[GADSlot adResponseDelegate](struct GADSlot *self, SEL);
void __cdecl -[GADSlot setAdResponseDelegate:](struct GADSlot *self, SEL, id);
id __cdecl -[GADSlot adKeyDelegate](struct GADSlot *self, SEL);
void __cdecl -[GADSlot setAdKeyDelegate:](struct GADSlot *self, SEL, id);
id __cdecl -[GADSlot adUnitID](struct GADSlot *self, SEL);
char __cdecl -[GADSlot hasAutoRefreshed](struct GADSlot *self, SEL);
void __cdecl -[GADSlot setHasAutoRefreshed:](struct GADSlot *self, SEL, char);
char __cdecl -[GADSlot reloadable](struct GADSlot *self, SEL);
void __cdecl -[GADSlot setReloadable:](struct GADSlot *self, SEL, char);
char __cdecl -[GADSlot manualImpressionsEnabled](struct GADSlot *self, SEL);
void __cdecl -[GADSlot setManualImpressionsEnabled:](struct GADSlot *self, SEL, char);
id __cdecl -[GADSlot ad](struct GADSlot *self, SEL);
void __cdecl -[GADSlot setAd:](struct GADSlot *self, SEL, id);
id __cdecl -[GADSlot adType](struct GADSlot *self, SEL);
void __cdecl -[GADSlot setAdType:](struct GADSlot *self, SEL, id);
id __cdecl -[GADSlot request](struct GADSlot *self, SEL);
void __cdecl -[GADSlot setRequest:](struct GADSlot *self, SEL, id);
id __cdecl -[GADSlot correlator](struct GADSlot *self, SEL);
void __cdecl -[GADSlot setCorrelator:](struct GADSlot *self, SEL, id);
id __cdecl -[GADSlot timeLastLoaded](struct GADSlot *self, SEL);
void __cdecl -[GADSlot setTimeLastLoaded:](struct GADSlot *self, SEL, id);
id __cdecl -[GADSlot adView](struct GADSlot *self, SEL);
id __cdecl -[GADSlot slotStats](struct GADSlot *self, SEL);
void __cdecl -[GADSlot setSlotStats:](struct GADSlot *self, SEL, id);
char __cdecl -[GADSlot calledLoadAndDisplayRequest](struct GADSlot *self, SEL);
void __cdecl -[GADSlot setCalledLoadAndDisplayRequest:](struct GADSlot *self, SEL, char);
id __cdecl -[GADSlot intermission](struct GADSlot *self, SEL);
void __cdecl -[GADSlot setIntermission:](struct GADSlot *self, SEL, id);
id __cdecl -[GADSlot interstitial](struct GADSlot *self, SEL);
void __cdecl -[GADSlot setInterstitial:](struct GADSlot *self, SEL, id);
id __cdecl -[GADSlot adViewDelegate](struct GADSlot *self, SEL);
void __cdecl -[GADSlot setAdViewDelegate:](struct GADSlot *self, SEL, id);
id __cdecl -[GADSlot loadingAd](struct GADSlot *self, SEL);
void __cdecl -[GADSlot setLoadingAd:](struct GADSlot *self, SEL, id);
id __cdecl -[GADSlot adFetcher](struct GADSlot *self, SEL);
void __cdecl -[GADSlot setAdFetcher:](struct GADSlot *self, SEL, id);
id __cdecl -[GADSlot applicationStatistics](struct GADSlot *self, SEL);
void __cdecl -[GADSlot setApplicationStatistics:](struct GADSlot *self, SEL, id);
id __cdecl -[GADSlot pendingAdStatistics](struct GADSlot *self, SEL);
void __cdecl -[GADSlot setPendingAdStatistics:](struct GADSlot *self, SEL, id);
id __cdecl -[GADSlot reloadTimer](struct GADSlot *self, SEL);
void __cdecl -[GADSlot setReloadTimer:](struct GADSlot *self, SEL, id);
double __cdecl -[GADSlot reloadInterval](struct GADSlot *self, SEL);
id __cdecl -[GADSlot requestID](struct GADSlot *self, SEL);
void __cdecl -[GADSlot setRequestID:](struct GADSlot *self, SEL, id);
id __cdecl -[GADSlot nextRequest](struct GADSlot *self, SEL);
void __cdecl -[GADSlot setNextRequest:](struct GADSlot *self, SEL, id);
struct CGSize __cdecl -[GADSlot newAdSize](struct GADSlot *self, SEL);
void __cdecl -[GADSlot setNewAdSize:](struct GADSlot *self, SEL, struct CGSize);
id __cdecl -[GADSlot activeViewMonitor](struct GADSlot *self, SEL);
void __cdecl -[GADSlot setActiveViewMonitor:](struct GADSlot *self, SEL, id);
id __cdecl -[GADSlot SDKCoreWebView](struct GADSlot *self, SEL);
void __cdecl -[GADSlot setSDKCoreWebView:](struct GADSlot *self, SEL, id);
id __cdecl -[GADSlot activeViewMonitoredView](struct GADSlot *self, SEL);
void __cdecl -[GADSlot setActiveViewMonitoredView:](struct GADSlot *self, SEL, id);
id __cdecl -[GADSlot savedParamsForCheckingSwipeToViewController](struct GADSlot *self, SEL);
void __cdecl -[GADSlot setSavedParamsForCheckingSwipeToViewController:](struct GADSlot *self, SEL, id);
char __cdecl -[GADSlot swipeToViewControllerEnabled](struct GADSlot *self, SEL);
void __cdecl -[GADSlot setSwipeToViewControllerEnabled:](struct GADSlot *self, SEL, char);
char __cdecl -[GADSlot swipeToViewControllerAnimationControllerInitialized](struct GADSlot *self, SEL);
void __cdecl -[GADSlot setSwipeToViewControllerAnimationControllerInitialized:](struct GADSlot *self, SEL, char);
id __cdecl -[GADSlot animationController](struct GADSlot *self, SEL);
void __cdecl -[GADSlot setAnimationController:](struct GADSlot *self, SEL, id);
id __cdecl -[GADSlot animation](struct GADSlot *self, SEL);
void __cdecl -[GADSlot setAnimation:](struct GADSlot *self, SEL, id);
id __cdecl -[GADSlot swipeableStoreProductViewController](struct GADSlot *self, SEL);
void __cdecl -[GADSlot setSwipeableStoreProductViewController:](struct GADSlot *self, SEL, id);
id __cdecl -[GADSlot swipeGestureRecognizer](struct GADSlot *self, SEL);
void __cdecl -[GADSlot setSwipeGestureRecognizer:](struct GADSlot *self, SEL, id);
id __cdecl -[GADSlot strongSlotForSwipeToViewController](struct GADSlot *self, SEL);
void __cdecl -[GADSlot setStrongSlotForSwipeToViewController:](struct GADSlot *self, SEL, id);
char __cdecl -[GADSlot isAdCustomRendered](struct GADSlot *self, SEL);
void __cdecl -[GADSlot setAdCustomRendered:](struct GADSlot *self, SEL, char);
id __cdecl -[GADSlot swipeToViewControllerChecker](struct GADSlot *self, SEL);
void __cdecl -[GADSlot setSwipeToViewControllerChecker:](struct GADSlot *self, SEL, id);
void __cdecl -[GADSlot .cxx_destruct](struct GADSlot *self, SEL);
id __fastcall sub_1B1C04(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl +[GADApplication load](struct GADApplication_meta *self, SEL);
void __fastcall sub_1B1E28(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl +[GADApplication sharedInstance](struct GADApplication_meta *self, SEL);
void __fastcall sub_1B1EFC(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[GADApplication init](struct GADApplication *self, SEL);
void __fastcall sub_1B25EC(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1B261C(int a1, int a2);
int __fastcall sub_1B2628(int a1);
void __cdecl -[GADApplication dealloc](struct GADApplication *self, SEL);
void __cdecl -[GADApplication runEarlyActivities](struct GADApplication *self, SEL);
id __cdecl -[GADApplication version](struct GADApplication *self, SEL);
id __cdecl -[GADApplication mainBundleIdentifier](struct GADApplication *self, SEL);
char __cdecl -[GADApplication isAppActive](struct GADApplication *self, SEL);
id __cdecl -[GADApplication iTunesMetadataPath](struct GADApplication *self, SEL);
id __cdecl -[GADApplication iTunesMetadata](struct GADApplication *self, SEL);
void __fastcall sub_1B2C90(int a1);
int __fastcall sub_1B2D68(int a1, int a2);
void __fastcall sub_1B2D70(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[GADApplication pendingAdStatistics](struct GADApplication *self, SEL);
int __fastcall sub_1B2F64(int a1, int a2);
void __fastcall sub_1B2F78(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_1B2F80(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1B3018(int a1, int a2);
void __fastcall sub_1B3040(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[GADApplication notificationQueue](struct GADApplication *self, SEL);
void __cdecl -[GADApplication didUpdateStatisticDictionary:](struct GADApplication *self, SEL, id);
void __cdecl -[GADApplication GADLinkCategories](struct GADApplication *self, SEL);
unsigned int __cdecl -[GADApplication nextActiveViewID](struct GADApplication *self, SEL);
int __fastcall sub_1B31BC(int a1);
int __fastcall sub_1B31F0(int a1, int a2);
int __fastcall sub_1B321C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4);
id __cdecl -[GADApplication currentSession](struct GADApplication *self, SEL);
id __cdecl -[GADApplication statistics](struct GADApplication *self, SEL);
id __cdecl -[GADApplication notificationSerialQueue](struct GADApplication *self, SEL);
void __cdecl -[GADApplication setNotificationSerialQueue:](struct GADApplication *self, SEL, id);
id __cdecl -[GADApplication statisticsSerialQueue](struct GADApplication *self, SEL);
void __cdecl -[GADApplication setStatisticsSerialQueue:](struct GADApplication *self, SEL, id);
char __cdecl -[GADApplication appFinishedLaunching](struct GADApplication *self, SEL);
void __cdecl -[GADApplication setAppFinishedLaunching:](struct GADApplication *self, SEL, char);
uint64_t __cdecl -[GADApplication sequenceNumber](struct GADApplication *self, SEL);
void __cdecl -[GADApplication setSequenceNumber:](struct GADApplication *self, SEL, uint64_t);
id __cdecl -[GADApplication adStatistics](struct GADApplication *self, SEL);
id __cdecl -[GADApplication slotStatistics](struct GADApplication *self, SEL);
void __cdecl -[GADApplication .cxx_destruct](struct GADApplication *self, SEL);
id __cdecl +[GADCSIGMSGHandler actionBlockDictionary](struct GADCSIGMSGHandler_meta *self, SEL);
void sub_1B3544();
void __fastcall sub_1B35EC(int a1, void *a2, int a3, int a4, struct objc_object *a5);
id __cdecl +[GADCSIGMSGHandler subActionBlockDictionary](struct GADCSIGMSGHandler_meta *self, SEL);
int sub_1B3670();
void __fastcall sub_1B37B4(int a1, void *a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_1B37F4(int a1, void *a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_1B3834(int a1, void *a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[GADCSIGMSGHandler didReceiveCSINotification:](struct GADCSIGMSGHandler *self, SEL, id);
void __cdecl -[GADCSIGMSGHandler didReceiveTickAction:](struct GADCSIGMSGHandler *self, SEL, id);
void __cdecl -[GADCSIGMSGHandler didReceiveExperimentAction:](struct GADCSIGMSGHandler *self, SEL, id);
void __cdecl -[GADCSIGMSGHandler didReceiveExtraAction:](struct GADCSIGMSGHandler *self, SEL, id);
id __cdecl -[GADLocation initWithLatitude:longitude:accuracy:](struct GADLocation *self, SEL, float, float, float);
id __cdecl -[GADLocation initWithLocationDescription:](struct GADLocation *self, SEL, id);
id __cdecl -[GADLocation locationDescription](struct GADLocation *self, SEL);
char __cdecl -[GADLocation isEqual:](struct GADLocation *self, SEL, id);
unsigned int __cdecl -[GADLocation hash](struct GADLocation *self, SEL);
id __cdecl -[GADLocation copyWithZone:](struct GADLocation *self, SEL, struct _NSZone *);
char __cdecl -[GADLocation isPreciseLocation](struct GADLocation *self, SEL);
id __cdecl -[GADLocation dictionaryRepresentation](struct GADLocation *self, SEL);
float __cdecl -[GADLocation latitude](struct GADLocation *self, SEL);
float __cdecl -[GADLocation longitude](struct GADLocation *self, SEL);
float __cdecl -[GADLocation accuracy](struct GADLocation *self, SEL);
void __cdecl -[GADLocation setLocationDescription:](struct GADLocation *self, SEL, id);
void __cdecl -[GADLocation setDictionaryRepresentation:](struct GADLocation *self, SEL, id);
double __cdecl -[GADLocation timestamp](struct GADLocation *self, SEL);
void __cdecl -[GADLocation setTimestamp:](struct GADLocation *self, SEL, double);
void __cdecl -[GADLocation .cxx_destruct](struct GADLocation *self, SEL);
id __cdecl +[GADCSI sharedInstance](struct GADCSI_meta *self, SEL);
void __fastcall sub_1B4AB4(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[GADCSI init](struct GADCSI *self, SEL);
void __cdecl -[GADCSI sendReport](struct GADCSI *self, SEL);
void __fastcall sub_1B4DA0(int a1);
void __fastcall sub_1B4E58(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1B4EFC(int a1, int a2);
void __fastcall sub_1B4F04(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_1B4F0C(int a1, int a2);
void __fastcall sub_1B4F14(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[GADCSI timeRecorderForAction:](struct GADCSI *self, SEL, id);
int __fastcall sub_1B52FC(int a1, int a2);
void __fastcall sub_1B5310(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void *__fastcall sub_1B5318(int a1);
int __fastcall sub_1B53B4(int a1, int a2);
void __fastcall sub_1B53E4(int a1, int a2, int a3, int a4, struct objc_object *a5);
void *__fastcall sub_1B5410(int a1);
int __fastcall sub_1B5444(int a1, int a2);
int __fastcall sub_1B5478(int a1, void *a2, struct objc_object *a3, struct objc_object *a4);
void __cdecl -[GADCSI recordTimestampForLabel:](struct GADCSI *self, SEL, id);
void __fastcall sub_1B55E8(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1B565C(int a1, int a2);
void __fastcall sub_1B567C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADCSI setTimestamp:forLabel:](struct GADCSI *self, SEL, int64_t, id);
void __fastcall sub_1B5770(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1B57E4(int a1, int a2);
void __fastcall sub_1B5804(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int64_t __cdecl -[GADCSI timestampForLabel:](struct GADCSI *self, SEL, id);
void __fastcall sub_1B5930(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1B5998(int a1, int a2);
void __fastcall sub_1B59C8(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[GADCSI GWSQueryID](struct GADCSI *self, SEL);
void __cdecl -[GADCSI setGWSQueryID:](struct GADCSI *self, SEL, id);
void __cdecl -[GADCSI .cxx_destruct](struct GADCSI *self, SEL);
id __cdecl -[GADPercentDrivenUserInteractionAnimationController initWithAnimation:](struct GADPercentDrivenUserInteractionAnimationController *self, SEL, id);
void __cdecl -[GADPercentDrivenUserInteractionAnimationController handlePanGesture:](struct GADPercentDrivenUserInteractionAnimationController *self, SEL, id);
char __cdecl -[GADPercentDrivenUserInteractionAnimationController isAnimatingTopToBottom](struct GADPercentDrivenUserInteractionAnimationController *self, SEL);
char __cdecl -[GADPercentDrivenUserInteractionAnimationController isAnimatingBottomToTop](struct GADPercentDrivenUserInteractionAnimationController *self, SEL);
id __cdecl -[GADPercentDrivenUserInteractionAnimationController animationControllerForPresentedController:presentingController:sourceController:](struct GADPercentDrivenUserInteractionAnimationController *self, SEL, id, id, id);
id __cdecl -[GADPercentDrivenUserInteractionAnimationController animationControllerForDismissedController:](struct GADPercentDrivenUserInteractionAnimationController *self, SEL, id);
id __cdecl -[GADPercentDrivenUserInteractionAnimationController delegate](struct GADPercentDrivenUserInteractionAnimationController *self, SEL);
void __cdecl -[GADPercentDrivenUserInteractionAnimationController setDelegate:](struct GADPercentDrivenUserInteractionAnimationController *self, SEL, id);
id __cdecl -[GADPercentDrivenUserInteractionAnimationController transitionAnimation](struct GADPercentDrivenUserInteractionAnimationController *self, SEL);
void __cdecl -[GADPercentDrivenUserInteractionAnimationController setTransitionAnimation:](struct GADPercentDrivenUserInteractionAnimationController *self, SEL, id);
void __cdecl -[GADPercentDrivenUserInteractionAnimationController .cxx_destruct](struct GADPercentDrivenUserInteractionAnimationController *self, SEL);
int __fastcall nullsub_59(_DWORD); // weak
void __cdecl -[GADSlot animationControllerDidFinishAnimationTransition:](struct GADSlot *self, SEL, id);
void __cdecl -[GADSlot animationControllerDidCancelAnimationTransition:](struct GADSlot *self, SEL, id);
int __fastcall nullsub_60(_DWORD); // weak
id __cdecl -[GADSlot adNetworkClassName](struct GADSlot *self, SEL);
char __cdecl -[GADSlot changeAdTypeTo:](struct GADSlot *self, SEL, id);
char __cdecl -[GADSlot isMediating](struct GADSlot *self, SEL);
void __cdecl -[GADSlot presentMediatedInterstitialFromRootViewController:](struct GADSlot *self, SEL, id);
void __cdecl -[GADSlot processMediationAdResponse:](struct GADSlot *self, SEL, id);
void __cdecl -[GADSlot requestAdWithType:mediationConfig:](struct GADSlot *self, SEL, id, id);
char __cdecl -[GADSlot hasConsistentMediationConfigForAdType:](struct GADSlot *self, SEL, id);
id __cdecl -[GADSlot viewControllerForPresentingModalView](struct GADSlot *self, SEL);
void __cdecl -[GADMAdManager dealloc](struct GADMAdManager *self, SEL);
void __cdecl -[GADMAdManager cancel](struct GADMAdManager *self, SEL);
void *__fastcall sub_1B74C4(int a1);
int __fastcall sub_1B74D8(int a1, int a2);
void __fastcall sub_1B74E0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void *__fastcall sub_1B74E8(int a1);
int __fastcall sub_1B74FC(int a1, int a2);
void __fastcall sub_1B7504(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADMAdManager cancelPendingActions](struct GADMAdManager *self, SEL);
void __cdecl -[GADMAdManager makeAdRequest](struct GADMAdManager *self, SEL);
void *__fastcall sub_1B7C04(int a1);
int __fastcall sub_1B7C34(int a1, int a2);
void __fastcall sub_1B7C3C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void *__fastcall sub_1B7C44(int a1);
int __fastcall sub_1B7C5C(int a1, int a2);
void __fastcall sub_1B7C64(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[GADMAdManager dequeueAdNetworkConfig](struct GADMAdManager *self, SEL);
void __cdecl -[GADMAdManager reportNoFill](struct GADMAdManager *self, SEL);
void __cdecl -[GADMAdManager notifyDelegateOfFailureToReceiveWithError:](struct GADMAdManager *self, SEL, id);
void __cdecl -[GADMAdManager resetRequestingState](struct GADMAdManager *self, SEL);
void __cdecl -[GADMAdManager adNetworkTimeoutHandler:](struct GADMAdManager *self, SEL, id);
char __cdecl -[GADMAdManager shouldProcessResponseFromConnector:](struct GADMAdManager *self, SEL, id);
void __cdecl -[GADMAdManager mediateForAdType:config:](struct GADMAdManager *self, SEL, id, id);
char __cdecl -[GADMAdManager changeAdTypeTo:](struct GADMAdManager *self, SEL, id);
void __cdecl -[GADMAdManager presentInterstitialFromRootViewController:](struct GADMAdManager *self, SEL, id);
void __cdecl -[GADMAdManager adRequestReturnsFromConnector:withView:](struct GADMAdManager *self, SEL, id, id);
void __cdecl -[GADMAdManager adRequestReturnsFromConnector:withInterstitial:](struct GADMAdManager *self, SEL, id, id);
void __cdecl -[GADMAdManager adRequestReturnsFromConnector:withMediatedAd:](struct GADMAdManager *self, SEL, id, id);
void *__fastcall sub_1B8F48(int a1);
int __fastcall sub_1B8F5C(int a1, int a2);
void __fastcall sub_1B8F64(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void *__fastcall sub_1B8F6C(int a1);
int __fastcall sub_1B8F80(int a1, int a2);
void __fastcall sub_1B8F88(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_1B8F90(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1B905C(int a1, int a2);
void __fastcall sub_1B9080(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[GADMAdManager updateAdapterTimingsForError:](struct GADMAdManager *self, SEL, id);
void __cdecl -[GADMAdManager adRequestFailedFromConnector:withError:](struct GADMAdManager *self, SEL, id, id);
id __cdecl -[GADMAdManager config](struct GADMAdManager *self, SEL);
void __cdecl -[GADMAdManager setConfig:](struct GADMAdManager *self, SEL, id);
id __cdecl -[GADMAdManager adType](struct GADMAdManager *self, SEL);
void __cdecl -[GADMAdManager setAdType:](struct GADMAdManager *self, SEL, id);
id __cdecl -[GADMAdManager requestingConnector](struct GADMAdManager *self, SEL);
void __cdecl -[GADMAdManager setRequestingConnector:](struct GADMAdManager *self, SEL, id);
id __cdecl -[GADMAdManager receivedConnector](struct GADMAdManager *self, SEL);
void __cdecl -[GADMAdManager setReceivedConnector:](struct GADMAdManager *self, SEL, id);
id __cdecl -[GADMAdManager slot](struct GADMAdManager *self, SEL);
void __cdecl -[GADMAdManager setSlot:](struct GADMAdManager *self, SEL, id);
char __cdecl -[GADMAdManager requestInProgress](struct GADMAdManager *self, SEL);
void __cdecl -[GADMAdManager setRequestInProgress:](struct GADMAdManager *self, SEL, char);
id __cdecl -[GADMAdManager adNetworkTimeoutTimer](struct GADMAdManager *self, SEL);
void __cdecl -[GADMAdManager setAdNetworkTimeoutTimer:](struct GADMAdManager *self, SEL, id);
void __cdecl -[GADMAdManager .cxx_destruct](struct GADMAdManager *self, SEL);
void __cdecl -[GADModalOverlayPresenter dealloc](struct GADModalOverlayPresenter *self, SEL);
id __cdecl -[GADModalOverlayPresenter presentationViewController](struct GADModalOverlayPresenter *self, SEL);
char __cdecl -[GADModalOverlayPresenter isReadyToPresent](struct GADModalOverlayPresenter *self, SEL);
void __cdecl -[GADModalOverlayPresenter presentFromViewController:completion:](struct GADModalOverlayPresenter *self, SEL, id, id);
void __fastcall sub_1B9AF4(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1B9B40(int a1, int a2);
int __fastcall sub_1B9B4C(int a1);
void __cdecl -[GADModalOverlayPresenter dismissWithCompletionHandler:](struct GADModalOverlayPresenter *self, SEL, id);
void __cdecl -[GADModalOverlayPresenter appDidEnterForeground:](struct GADModalOverlayPresenter *self, SEL, id);
void __cdecl -[GADModalOverlayPresenter hideStatusBar](struct GADModalOverlayPresenter *self, SEL);
id __cdecl -[GADModalOverlayPresenter presentedViewController](struct GADModalOverlayPresenter *self, SEL);
void __cdecl -[GADModalOverlayPresenter setPresentedViewController:](struct GADModalOverlayPresenter *self, SEL, id);
void __cdecl -[GADModalOverlayPresenter .cxx_destruct](struct GADModalOverlayPresenter *self, SEL);
id __cdecl -[GADMAdNetworkConfig initWithDictionary:error:](struct GADMAdNetworkConfig *self, SEL, id, id *);
id __cdecl -[GADMAdNetworkConfig publisherID](struct GADMAdNetworkConfig *self, SEL);
id __cdecl -[GADMAdNetworkConfig description](struct GADMAdNetworkConfig *self, SEL);
id __cdecl -[GADMAdNetworkConfig networkID](struct GADMAdNetworkConfig *self, SEL);
id __cdecl -[GADMAdNetworkConfig credentials](struct GADMAdNetworkConfig *self, SEL);
id __cdecl -[GADMAdNetworkConfig extras](struct GADMAdNetworkConfig *self, SEL);
id __cdecl -[GADMAdNetworkConfig ad](struct GADMAdNetworkConfig *self, SEL);
id __cdecl -[GADMAdNetworkConfig adapterList](struct GADMAdNetworkConfig *self, SEL);
Class __cdecl -[GADMAdNetworkConfig adapterClass](struct GADMAdNetworkConfig *self, SEL);
id __cdecl -[GADMAdNetworkConfig allocationID](struct GADMAdNetworkConfig *self, SEL);
id __cdecl -[GADMAdNetworkConfig impressionURLs](struct GADMAdNetworkConfig *self, SEL);
id __cdecl -[GADMAdNetworkConfig clickURLs](struct GADMAdNetworkConfig *self, SEL);
id __cdecl -[GADMAdNetworkConfig videoStartURLs](struct GADMAdNetworkConfig *self, SEL);
id __cdecl -[GADMAdNetworkConfig rewardedUserURLs](struct GADMAdNetworkConfig *self, SEL);
void __cdecl -[GADMAdNetworkConfig .cxx_destruct](struct GADMAdNetworkConfig *self, SEL);
char __cdecl +[GADStubsForGID supportsCurrentUserKVO](struct GADStubsForGID_meta *self, SEL);
id __cdecl -[GADStubsForGID clientID](struct GADStubsForGID *self, SEL);
void __cdecl -[GADStubsForGID setClientID:](struct GADStubsForGID *self, SEL, id);
id __cdecl -[GADStubsForGID currentUser](struct GADStubsForGID *self, SEL);
void __cdecl -[GADStubsForGID setCurrentUser:](struct GADStubsForGID *self, SEL, id);
id __cdecl -[GADStubsForGID authentication](struct GADStubsForGID *self, SEL);
void __cdecl -[GADStubsForGID setAuthentication:](struct GADStubsForGID *self, SEL, id);
id __cdecl -[GADStubsForGID idToken](struct GADStubsForGID *self, SEL);
void __cdecl -[GADStubsForGID setIdToken:](struct GADStubsForGID *self, SEL, id);
id __cdecl -[GADStubsForGID refreshToken](struct GADStubsForGID *self, SEL);
void __cdecl -[GADStubsForGID setRefreshToken:](struct GADStubsForGID *self, SEL, id);
void __cdecl -[GADStubsForGID .cxx_destruct](struct GADStubsForGID *self, SEL);
void *__fastcall sub_1BAF6C(int a1, int a2, int a3);
id __cdecl -[GADSignedInUser initWithIssuer:userID:applicationID:refreshToken:](struct GADSignedInUser *self, SEL, id, id, id, id);
id __cdecl -[GADSignedInUser init](struct GADSignedInUser *self, SEL);
id __cdecl -[GADSignedInUser initWithCoder:](struct GADSignedInUser *self, SEL, id);
id __cdecl -[GADSignedInUser copyWithZone:](struct GADSignedInUser *self, SEL, struct _NSZone *);
char __cdecl -[GADSignedInUser isEqual:](struct GADSignedInUser *self, SEL, id);
unsigned int __cdecl -[GADSignedInUser hash](struct GADSignedInUser *self, SEL);
void __cdecl -[GADSignedInUser encodeWithCoder:](struct GADSignedInUser *self, SEL, id);
id __cdecl -[GADSignedInUser issuer](struct GADSignedInUser *self, SEL);
id __cdecl -[GADSignedInUser userID](struct GADSignedInUser *self, SEL);
id __cdecl -[GADSignedInUser refreshToken](struct GADSignedInUser *self, SEL);
id __cdecl -[GADSignedInUser applicationID](struct GADSignedInUser *self, SEL);
void __cdecl -[GADSignedInUser .cxx_destruct](struct GADSignedInUser *self, SEL);
id __cdecl +[GADRequest request](struct GADRequest_meta *self, SEL);
void __cdecl +[GADRequest initialize](struct GADRequest_meta *self, SEL);
void __fastcall sub_1BBC94(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __cdecl +[GADRequest requestTypeFromString:](struct GADRequest *self, SEL, id);
id __cdecl -[GADRequest init](struct GADRequest *self, SEL);
id __cdecl -[GADRequest copyWithZone:](struct GADRequest *self, SEL, struct _NSZone *);
id __cdecl -[GADRequest description](struct GADRequest *self, SEL);
void __cdecl -[GADRequest registerAdNetworkExtras:](struct GADRequest *self, SEL, id);
id __cdecl -[GADRequest adNetworkExtrasFor:](struct GADRequest *self, SEL, Class);
void __cdecl -[GADRequest removeAdNetworkExtrasFor:](struct GADRequest *self, SEL, Class);
id __cdecl -[GADRequest networkExtrasAdditionalParameters](struct GADRequest *self, SEL);
id __cdecl -[GADRequest genderString](struct GADRequest *self, SEL);
id __cdecl -[GADRequest birthdayString](struct GADRequest *self, SEL);
id __cdecl -[GADRequest contentURLString](struct GADRequest *self, SEL);
void __cdecl -[GADRequest setLocationWithLatitude:longitude:accuracy:](struct GADRequest *self, SEL, float, float, float);
void __cdecl -[GADRequest tagForChildDirectedTreatment:](struct GADRequest *self, SEL, char);
void __cdecl -[GADRequest addAdditionalParametersFromDictionary:](struct GADRequest *self, SEL, id);
char __cdecl -[GADRequest isATestDevice](struct GADRequest *self, SEL);
id __cdecl -[GADRequest parameters](struct GADRequest *self, SEL);
int __fastcall sub_1BDAE8(int a1, int a2);
void __fastcall sub_1BDAFC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __fastcall sub_1BDB04(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_1BDCD0(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1BDD04(int a1, int a2);
int __fastcall sub_1BDD14(int a1);
id __cdecl +[GADRequest sdkVersion](struct GADRequest_meta *self, SEL);
void __fastcall sub_1BDD64(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[GADRequest setBirthdayWithMonth:day:year:](struct GADRequest *self, SEL, int, int, int);
void __cdecl -[GADRequest setLocationWithDescription:](struct GADRequest *self, SEL, id);
id __cdecl -[GADRequest testDevices](struct GADRequest *self, SEL);
void __cdecl -[GADRequest setTestDevices:](struct GADRequest *self, SEL, id);
int __cdecl -[GADRequest gender](struct GADRequest *self, SEL);
void __cdecl -[GADRequest setGender:](struct GADRequest *self, SEL, int);
id __cdecl -[GADRequest birthday](struct GADRequest *self, SEL);
void __cdecl -[GADRequest setBirthday:](struct GADRequest *self, SEL, id);
id __cdecl -[GADRequest keywords](struct GADRequest *self, SEL);
void __cdecl -[GADRequest setKeywords:](struct GADRequest *self, SEL, id);
id __cdecl -[GADRequest contentURL](struct GADRequest *self, SEL);
void __cdecl -[GADRequest setContentURL:](struct GADRequest *self, SEL, id);
id __cdecl -[GADRequest requestAgent](struct GADRequest *self, SEL);
void __cdecl -[GADRequest setRequestAgent:](struct GADRequest *self, SEL, id);
id __cdecl -[GADRequest location](struct GADRequest *self, SEL);
void __cdecl -[GADRequest setLocation:](struct GADRequest *self, SEL, id);
id __cdecl -[GADRequest childDirectedTreatment](struct GADRequest *self, SEL);
void __cdecl -[GADRequest setChildDirectedTreatment:](struct GADRequest *self, SEL, id);
id __cdecl -[GADRequest privateMediationExtras](struct GADRequest *self, SEL);
void __cdecl -[GADRequest setPrivateMediationExtras:](struct GADRequest *self, SEL, id);
id __cdecl -[GADRequest formatParameters](struct GADRequest *self, SEL);
void __cdecl -[GADRequest setFormatParameters:](struct GADRequest *self, SEL, id);
int __cdecl -[GADRequest responseType](struct GADRequest *self, SEL);
void __cdecl -[GADRequest setResponseType:](struct GADRequest *self, SEL, int);
void __cdecl -[GADRequest .cxx_destruct](struct GADRequest *self, SEL);
int __fastcall nullsub_61(_DWORD); // weak
void __cdecl -[GADBlockTimerTarget timerFired:](struct GADBlockTimerTarget *self, SEL, id);
id __cdecl -[GADBlockTimerTarget block](struct GADBlockTimerTarget *self, SEL);
void __cdecl -[GADBlockTimerTarget setBlock:](struct GADBlockTimerTarget *self, SEL, id);
void __cdecl -[GADBlockTimerTarget .cxx_destruct](struct GADBlockTimerTarget *self, SEL);
id __cdecl +[NSTimer(GADWeakTargetAdditions) gad_scheduledTimerWithTimeInterval:repeats:tolerance:block:](struct NSTimer *self, SEL, double, char, double, id);
id __cdecl +[GADSDKCoreGMSGHandler actionBlockDictionary](struct GADSDKCoreGMSGHandler_meta *self, SEL);
char *sub_1BE450();
void __fastcall sub_1BE660(int a1, void *a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_1BE6A0(int a1, void *a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_1BE6E0(int a1, void *a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_1BE720(int a1, void *a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_1BE760(int a1, void *a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_1BE7A0(int a1, void *a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[GADSDKCoreGMSGHandler init](struct GADSDKCoreGMSGHandler *self, SEL);
void __cdecl -[GADSDKCoreGMSGHandler didReceiveloadAdURLAction:](struct GADSDKCoreGMSGHandler *self, SEL, id);
void __fastcall sub_1BE9E8(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1BEA4C(int a1, int a2);
void __fastcall sub_1BEA74(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADSDKCoreGMSGHandler didReceiveInvalidAdRequestAction:](struct GADSDKCoreGMSGHandler *self, SEL, id);
void __fastcall sub_1BEBE0(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1BEC44(int a1, int a2);
void __fastcall sub_1BEC6C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADSDKCoreGMSGHandler didReceiveloadSDKConstantsAction:](struct GADSDKCoreGMSGHandler *self, SEL, id);
void __fastcall sub_1BED88(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1BEDD4(int a1, int a2);
void __fastcall sub_1BEDF4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADSDKCoreGMSGHandler didReceiveLoadAdAction:](struct GADSDKCoreGMSGHandler *self, SEL, id);
void __fastcall sub_1BEFD8(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1BF03C(int a1, int a2);
void __fastcall sub_1BF064(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADSDKCoreGMSGHandler didReceiveSDKCoreReloadRequestWithParameters:](struct GADSDKCoreGMSGHandler *self, SEL, id);
void __fastcall sub_1BF108(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1BF154(int a1, int a2);
void __fastcall sub_1BF15C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADSDKCoreGMSGHandler didReceiveFetchAdAction:](struct GADSDKCoreGMSGHandler *self, SEL, id);
void __cdecl -[GADSDKCoreGMSGHandler fetchedAd:forFetchRequestID:responseCode:](struct GADSDKCoreGMSGHandler *self, SEL, id, id, int);
id __fastcall sub_1BFBC8(void *a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[GADSDKCoreGMSGHandler failedToFetchAd:forRequestID:withError:responseCode:](struct GADSDKCoreGMSGHandler *self, SEL, id, id, id, int);
id __cdecl -[GADSDKCoreGMSGHandler fetchRequestIDForAdFetcher:](struct GADSDKCoreGMSGHandler *self, SEL, id);
int __fastcall sub_1C018C(int a1, int a2);
void __fastcall sub_1C01A0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_1C01A8(int a1);
void __fastcall sub_1C0248(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1C029C(int a1, int a2);
int __fastcall sub_1C02C8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4);
int __fastcall sub_1C02EC(int a1, int a2);
int __fastcall sub_1C0320(int a1, void *a2, struct objc_object *a3, struct objc_object *a4);
void __cdecl -[GADSDKCoreGMSGHandler setAdFetcher:forFetchRequestID:](struct GADSDKCoreGMSGHandler *self, SEL, id, id);
void __fastcall sub_1C0438(int a1);
int __fastcall sub_1C04AC(int a1, int a2);
void __fastcall sub_1C04D4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADSDKCoreGMSGHandler removeAdFetcherForFetchRequestID:](struct GADSDKCoreGMSGHandler *self, SEL, id);
void *__fastcall sub_1C0704(int a1);
int __fastcall sub_1C0794(int a1, int a2);
void __fastcall sub_1C07C4(int a1, int a2, int a3, int a4, struct objc_object *a5);
char __cdecl -[GADSDKCoreGMSGHandler isFetchInProgressForFetchRequestID:](struct GADSDKCoreGMSGHandler *self, SEL, id);
void __fastcall sub_1C08E8(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1C0944(int a1, int a2);
void __fastcall sub_1C0974(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[GADSDKCoreGMSGHandler adFetcher:didFetchAd:](struct GADSDKCoreGMSGHandler *self, SEL, id, id);
void __cdecl -[GADSDKCoreGMSGHandler adFetcher:didFailToFetchAd:withError:responseCode:](struct GADSDKCoreGMSGHandler *self, SEL, id, id, id, unsigned int);
id __cdecl -[GADSDKCoreGMSGHandler SDKCoreWebView](struct GADSDKCoreGMSGHandler *self, SEL);
void __cdecl -[GADSDKCoreGMSGHandler setSDKCoreWebView:](struct GADSDKCoreGMSGHandler *self, SEL, id);
id __cdecl -[GADSDKCoreGMSGHandler delegate](struct GADSDKCoreGMSGHandler *self, SEL);
void __cdecl -[GADSDKCoreGMSGHandler setDelegate:](struct GADSDKCoreGMSGHandler *self, SEL, id);
void __cdecl -[GADSDKCoreGMSGHandler .cxx_destruct](struct GADSDKCoreGMSGHandler *self, SEL);
int __fastcall sub_1C0C10(int a1, int a2, int a3);
int __fastcall sub_1C0CEC(int a1, int a2);
void __fastcall sub_1C0CF4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[GADStatisticDictionary initWithQueueLabel:delegate:](struct GADStatisticDictionary *self, SEL, const char *, id);
id __cdecl -[GADStatisticDictionary initWithDelegate:](struct GADStatisticDictionary *self, SEL, id);
id __cdecl -[GADStatisticDictionary init](struct GADStatisticDictionary *self, SEL);
id __cdecl -[GADStatisticDictionary description](struct GADStatisticDictionary *self, SEL);
void __cdecl -[GADStatisticDictionary setDelegate:](struct GADStatisticDictionary *self, SEL, id);
void __cdecl -[GADStatisticDictionary didFinishModifying](struct GADStatisticDictionary *self, SEL);
void *__fastcall sub_1C11C4(int a1);
int __fastcall sub_1C11DC(int a1, int a2);
void __fastcall sub_1C11E4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_1C11EC(int a1);
int __fastcall sub_1C130C(int a1, int a2);
void __fastcall sub_1C1314(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADStatisticDictionary enqueueNotificationBlock](struct GADStatisticDictionary *self, SEL);
int __fastcall sub_1C13D0(int a1);
int __fastcall sub_1C1560(int a1);
int __fastcall sub_1C1638(int a1, int a2);
void __fastcall sub_1C1640(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_1C1648(int a1, int a2);
void __fastcall sub_1C1650(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADStatisticDictionary dispatchAsyncShouldNotifyDelegate:block:](struct GADStatisticDictionary *self, SEL, char, id);
void *__fastcall sub_1C1734(int a1);
int __fastcall sub_1C17AC(int a1, int a2);
void __fastcall sub_1C17D8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADStatisticDictionary setObject:forKey:shouldNotifyDelegate:](struct GADStatisticDictionary *self, SEL, id, id, char);
void *__fastcall sub_1C18EC(int a1);
int __fastcall sub_1C1918(int a1, int a2);
void __fastcall sub_1C1940(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADStatisticDictionary setObject:forKeyedSubscript:](struct GADStatisticDictionary *self, SEL, id, id);
id __cdecl -[GADStatisticDictionary objectForKey:](struct GADStatisticDictionary *self, SEL, id);
int __fastcall sub_1C1BD4(int a1, int a2);
void __fastcall sub_1C1BE8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_1C1BF0(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1C1C48(int a1, int a2);
void __fastcall sub_1C1C78(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[GADStatisticDictionary objectForKeyedSubscript:](struct GADStatisticDictionary *self, SEL, id);
void __cdecl -[GADStatisticDictionary addDecimalNumber:toNumberForKey:shouldNotifyDelegate:](struct GADStatisticDictionary *self, SEL, id, id, char);
void __fastcall sub_1C1DA8(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1C1EC0(int a1, int a2);
void __fastcall sub_1C1EE8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADStatisticDictionary incrementNumberForKey:shouldNotifyDelegate:](struct GADStatisticDictionary *self, SEL, id, char);
void __cdecl -[GADStatisticDictionary decrementNumberForKey:shouldNotifyDelegate:](struct GADStatisticDictionary *self, SEL, id, char);
void __cdecl -[GADStatisticDictionary addObject:toArrayWithKey:shouldNotifyDelegate:](struct GADStatisticDictionary *self, SEL, id, id, char);
void __fastcall sub_1C2138(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1C2234(int a1, int a2);
void __fastcall sub_1C225C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[GADStatisticDictionary dictionary](struct GADStatisticDictionary *self, SEL);
void __fastcall sub_1C2470(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1C24BC(int a1, int a2);
void __fastcall sub_1C24E4(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[GADStatisticDictionary delegate](struct GADStatisticDictionary *self, SEL);
id __cdecl -[GADStatisticDictionary delegateLock](struct GADStatisticDictionary *self, SEL);
void __cdecl -[GADStatisticDictionary setDelegateLock:](struct GADStatisticDictionary *self, SEL, id);
id __cdecl -[GADStatisticDictionary serialQueue](struct GADStatisticDictionary *self, SEL);
void __cdecl -[GADStatisticDictionary setSerialQueue:](struct GADStatisticDictionary *self, SEL, id);
char __cdecl -[GADStatisticDictionary allowDictionaryModification](struct GADStatisticDictionary *self, SEL);
void __cdecl -[GADStatisticDictionary setAllowDictionaryModification:](struct GADStatisticDictionary *self, SEL, char);
char __cdecl -[GADStatisticDictionary hasEnqueuedNotificationBlock](struct GADStatisticDictionary *self, SEL);
void __cdecl -[GADStatisticDictionary setHasEnqueuedNotificationBlock:](struct GADStatisticDictionary *self, SEL, char);
void __cdecl -[GADStatisticDictionary .cxx_destruct](struct GADStatisticDictionary *self, SEL);
int __fastcall nullsub_63(_DWORD); // weak
id __cdecl -[GADSlot multipleAdSizeParameterFromSizes:](struct GADSlot *self, SEL, id);
int __cdecl -[GADSlot requestedAdType](struct GADSlot *self, SEL);
void __cdecl -[GADSlot failedJavaScriptFile](struct GADSlot *self, SEL);
void __cdecl -[GADSlot invalidJavaScriptRequest](struct GADSlot *self, SEL);
id __cdecl -[GADSlot requestParameters](struct GADSlot *self, SEL);
void __cdecl -[GADSlot loadAdURLWithParameters:](struct GADSlot *self, SEL, id);
int __cdecl -[GADSlot CSIIdentifier](struct GADSlot *self, SEL);
id __cdecl -[GADNetwork init](struct GADNetwork *self, SEL);
void __cdecl -[GADNetwork dealloc](struct GADNetwork *self, SEL);
id __cdecl -[GADNetwork networkTypeString](struct GADNetwork *self, SEL);
id __fastcall sub_1C42C4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[GADNetwork lastKnownNetworkTypeString](struct GADNetwork *self, SEL);
int __fastcall sub_1C43E4(int a1);
int __fastcall sub_1C4408(int a1, int a2);
void __fastcall sub_1C4430(int a1, int a2, int a3, int a4, struct objc_object *a5);
unsigned int __cdecl -[GADNetwork changeCount](struct GADNetwork *self, SEL);
int __fastcall sub_1C4510(int a1);
int __fastcall sub_1C4534(int a1, int a2);
void __fastcall sub_1C455C(int a1, int a2, int a3, int a4, struct objc_object *a5);
unsigned int __cdecl -[GADNetwork networkType](struct GADNetwork *self, SEL);
int __fastcall sub_1C463C(int a1);
int __fastcall sub_1C4660(int a1, int a2);
void __fastcall sub_1C4688(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[GADNetwork setNetworkType:](struct GADNetwork *self, SEL, unsigned int);
int __fastcall sub_1C4734(int result);
int __fastcall sub_1C47AC(int a1, int a2);
void __fastcall sub_1C47B4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADNetwork setNetworkTypeFromFlags:](struct GADNetwork *self, SEL, unsigned int);
void __cdecl -[GADNetwork enableNetworkChecking](struct GADNetwork *self, SEL);
void __fastcall sub_1C4860(int a1);
void *__fastcall sub_1C4994(int a1, int a2, void *a3);
int __fastcall sub_1C49B0(int a1, int a2);
void __fastcall sub_1C49B8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADNetwork disableNetworkChecking](struct GADNetwork *self, SEL);
void __fastcall sub_1C4A40(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1C4AC0(int a1, int a2);
void __fastcall sub_1C4AC8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADNetwork .cxx_destruct](struct GADNetwork *self, SEL);
int __fastcall nullsub_64(_DWORD); // weak
void __cdecl -[GADSDKCoreController cacheRunningActiveViewWebView:](struct GADSDKCoreController *self, SEL, id);
void *__fastcall sub_1C4BFC(int a1);
int __fastcall sub_1C4C60(int a1, int a2);
void __fastcall sub_1C4C80(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADSDKCoreController removeFinishedActiveViewWebViews](struct GADSDKCoreController *self, SEL);
void __fastcall sub_1C4DDC(int a1);
void __fastcall sub_1C4F14(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1C4FBC(int a1, int a2);
void __fastcall sub_1C4FE4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_1C500C(int a1, int a2);
void __fastcall sub_1C502C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_1C504C(int a1, void *a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1C50AC(int a1, int a2);
void __fastcall sub_1C50B4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADMConfig setRefreshInterval:](struct GADMConfig *self, SEL, double);
id __cdecl -[GADMConfig initWithAppKey:configDict:error:](struct GADMConfig *self, SEL, id, id, id *);
id __cdecl -[GADMConfig description](struct GADMConfig *self, SEL);
char __cdecl -[GADMConfig parseSettingsConfig:error:](struct GADMConfig *self, SEL, id, id *);
char __cdecl -[GADMConfig parseConfig:error:](struct GADMConfig *self, SEL, id, id *);
id __cdecl +[GADMConfig peekAdTypeFromConfig:](struct GADMConfig *self, SEL, id);
id __cdecl +[GADMConfig adTypeFromString:](struct GADMConfig *self, SEL, id);
id __cdecl -[GADMConfig adNetworkConfigs](struct GADMConfig *self, SEL);
void __cdecl -[GADMConfig setAdNetworkConfigs:](struct GADMConfig *self, SEL, id);
double __cdecl -[GADMConfig refreshInterval](struct GADMConfig *self, SEL);
int __cdecl -[GADMConfig bannerAnimationType](struct GADMConfig *self, SEL);
void __cdecl -[GADMConfig setBannerAnimationType:](struct GADMConfig *self, SEL, int);
double __cdecl -[GADMConfig adNetworkTimeout](struct GADMConfig *self, SEL);
void __cdecl -[GADMConfig setAdNetworkTimeout:](struct GADMConfig *self, SEL, double);
id __cdecl -[GADMConfig impressionURLs](struct GADMConfig *self, SEL);
void __cdecl -[GADMConfig setImpressionURLs:](struct GADMConfig *self, SEL, id);
id __cdecl -[GADMConfig clickURLs](struct GADMConfig *self, SEL);
void __cdecl -[GADMConfig setClickURLs:](struct GADMConfig *self, SEL, id);
id __cdecl -[GADMConfig noFillURLs](struct GADMConfig *self, SEL);
void __cdecl -[GADMConfig setNoFillURLs:](struct GADMConfig *self, SEL, id);
id __cdecl -[GADMConfig qdata](struct GADMConfig *self, SEL);
void __cdecl -[GADMConfig setQdata:](struct GADMConfig *self, SEL, id);
id __cdecl -[GADMConfig adType](struct GADMConfig *self, SEL);
void __cdecl -[GADMConfig setAdType:](struct GADMConfig *self, SEL, id);
id __cdecl -[GADMConfig appKey](struct GADMConfig *self, SEL);
void __cdecl -[GADMConfig setAppKey:](struct GADMConfig *self, SEL, id);
id __cdecl -[GADMConfig rewards](struct GADMConfig *self, SEL);
void __cdecl -[GADMConfig setRewards:](struct GADMConfig *self, SEL, id);
void __cdecl -[GADMConfig .cxx_destruct](struct GADMConfig *self, SEL);
int __fastcall nullsub_65(_DWORD); // weak
id __cdecl -[GADSDKCoreWebView init](struct GADSDKCoreWebView *self, SEL);
void __cdecl -[GADSDKCoreWebView addObserverForOneTimeNotification:](struct GADSDKCoreWebView *self, SEL, id);
void *__fastcall sub_1C68F8(int a1);
int __fastcall sub_1C6960(int a1, int a2);
void __fastcall sub_1C6980(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADSDKCoreWebView removeObserver:](struct GADSDKCoreWebView *self, SEL, id);
void *__fastcall sub_1C6A54(int a1);
int __fastcall sub_1C6A80(int a1, int a2);
void __fastcall sub_1C6AA0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADSDKCoreWebView refreshSDKCoreAndNotifyObserver:](struct GADSDKCoreWebView *self, SEL, id);
void *__fastcall sub_1C6B6C(int a1);
int __fastcall sub_1C6CF0(int a1, int a2);
void __fastcall sub_1C6D10(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
char __cdecl -[GADSDKCoreWebView adView:shouldStartLoadWithRequest:navigationType:](struct GADSDKCoreWebView *self, SEL, id, id, int);
void __cdecl -[GADSDKCoreWebView adView:didFailLoadWithError:](struct GADSDKCoreWebView *self, SEL, id, id);
void __cdecl -[GADSDKCoreWebView adViewDidFinishLoad:](struct GADSDKCoreWebView *self, SEL, id);
void __cdecl -[GADSDKCoreWebView notifyAllObserversOnlyOnceThatSDKCoreRequestIsFinished](struct GADSDKCoreWebView *self, SEL);
int __fastcall sub_1C72B4(int a1);
void *__fastcall sub_1C7494(int a1);
int __fastcall sub_1C74B0(int a1, int a2);
void __fastcall sub_1C74D0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_1C74F0(int a1, int a2);
void __fastcall sub_1C74F8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADSDKCoreWebView setState:](struct GADSDKCoreWebView *self, SEL, int);
int __fastcall sub_1C7588(int a1);
int __fastcall sub_1C75A4(int a1, int a2);
void __fastcall sub_1C75AC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __cdecl -[GADSDKCoreWebView state](struct GADSDKCoreWebView *self, SEL);
int __fastcall sub_1C7670(int a1);
int __fastcall sub_1C7694(int a1, int a2);
void __fastcall sub_1C76BC(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[GADSDKCoreWebView setHasSDKCoreLoadedAtLeastOnce:](struct GADSDKCoreWebView *self, SEL, char);
int __fastcall sub_1C7768(int a1);
int __fastcall sub_1C7784(int a1, int a2);
void __fastcall sub_1C778C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
char __cdecl -[GADSDKCoreWebView hasSDKCoreLoadedAtLeastOnce](struct GADSDKCoreWebView *self, SEL);
int __fastcall sub_1C7850(int a1);
int __fastcall sub_1C7874(int a1, int a2);
void __fastcall sub_1C789C(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[GADSDKCoreWebView enqueueJavaScriptCommand:](struct GADSDKCoreWebView *self, SEL, id);
void *__fastcall sub_1C798C(int a1);
int __fastcall sub_1C7A1C(int a1, int a2);
void __fastcall sub_1C7A3C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADSDKCoreWebView dispatchPendingJavaScriptCommands](struct GADSDKCoreWebView *self, SEL);
void __fastcall sub_1C7ADC(int a1);
void __fastcall sub_1C7B9C(int a1, int a2);
void *__fastcall sub_1C7C48(int a1);
int __fastcall sub_1C7C74(int a1, int a2);
void __fastcall sub_1C7C94(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_1C7CB4(int a1, int a2);
void __fastcall sub_1C7CBC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_1C7CC4(int a1, int a2);
void __fastcall sub_1C7CCC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADSDKCoreWebView postJSNotification:userInfo:](struct GADSDKCoreWebView *self, SEL, id, id);
void __cdecl -[GADSDKCoreWebView setActiveViewObserver:forActiveViewID:](struct GADSDKCoreWebView *self, SEL, id, unsigned int);
void __fastcall sub_1C7DD8(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1C7F3C(int a1, int a2);
void __fastcall sub_1C7F60(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[GADSDKCoreWebView removeActiveViewObserverForActiveViewID:](struct GADSDKCoreWebView *self, SEL, unsigned int);
void __fastcall sub_1C8008(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1C8074(int a1, int a2);
void __fastcall sub_1C807C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADSDKCoreWebView clearAllActiveViewInstances](struct GADSDKCoreWebView *self, SEL);
int __fastcall sub_1C8398(int a1, int a2);
void __fastcall sub_1C83AC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void *__fastcall sub_1C83B4(int a1);
int __fastcall sub_1C8460(int a1, int a2);
int __fastcall sub_1C848C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4);
char __cdecl -[GADSDKCoreWebView isActiveViewRunning](struct GADSDKCoreWebView *self, SEL);
void *__fastcall sub_1C856C(int a1);
int __fastcall sub_1C85B4(int a1, int a2);
void __fastcall sub_1C85DC(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[GADSDKCoreWebView SDKCoreGMSGHandler](struct GADSDKCoreWebView *self, SEL);
void __cdecl -[GADSDKCoreWebView setSDKCoreGMSGHandler:](struct GADSDKCoreWebView *self, SEL, id);
void __cdecl -[GADSDKCoreWebView .cxx_destruct](struct GADSDKCoreWebView *self, SEL);
void __cdecl -[GADSDKCoreWebView activeViewGMSGHandler:didReceiveUntrackNotificationForActiveViewID:](struct GADSDKCoreWebView *self, SEL, id, unsigned int);
void __fastcall sub_1C886C(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1C89B8(int a1, int a2);
void __fastcall sub_1C89E0(int a1, int a2, int a3, int a4, struct objc_object *a5);
void *__fastcall sub_1C8A04(int a1);
int __fastcall sub_1C8A20(int a1, int a2);
int __fastcall sub_1C8A30(int a1);
void __cdecl -[GADSDKCoreWebView activeViewGMSGHandler:didReceiveVisibilityNotification:forActiveViewID:](struct GADSDKCoreWebView *self, SEL, id, char, unsigned int);
void __fastcall sub_1C8B68(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1C8BF8(int a1, int a2);
void __fastcall sub_1C8C20(int a1, int a2, int a3, int a4, struct objc_object *a5);
void *__fastcall sub_1C8C44(int a1);
int __fastcall sub_1C8C64(int a1, int a2);
int __fastcall sub_1C8C74(int a1);
int __fastcall nullsub_66(_DWORD); // weak
id __cdecl +[GADRequest requestWithConnector:adapter:](struct GADRequest *self, SEL, id, id);
void __cdecl -[GADRequest addAdapterListWithConnector:adapter:](struct GADRequest *self, SEL, id, id);
void __cdecl -[GADRequest configureNetworkExtrasWithConnector:adapter:](struct GADRequest *self, SEL, id, id);
id __cdecl -[GADMediatedAd init](struct GADMediatedAd *self, SEL);
void __cdecl -[GADMediatedAd reportClick](struct GADMediatedAd *self, SEL);
void __cdecl -[GADMediatedAd reportImpression](struct GADMediatedAd *self, SEL);
void __cdecl -[GADMediatedAd addClickHandler:](struct GADMediatedAd *self, SEL, id);
void __cdecl -[GADMediatedAd addImpressionHandler:](struct GADMediatedAd *self, SEL, id);
id __cdecl -[GADMediatedAd adNetworkClassName](struct GADMediatedAd *self, SEL);
void __cdecl -[GADMediatedAd setAdNetworkClassName:](struct GADMediatedAd *self, SEL, id);
void __cdecl -[GADMediatedAd .cxx_destruct](struct GADMediatedAd *self, SEL);
id __cdecl -[GADCSIVariableTiming init](struct GADCSIVariableTiming *self, SEL);
id __cdecl -[GADCSIVariableTiming initWithName:startTime:](struct GADCSIVariableTiming *self, SEL, id, double);
void __cdecl -[GADCSIVariableTiming dealloc](struct GADCSIVariableTiming *self, SEL);
char __cdecl -[GADCSIVariableTiming isValid](struct GADCSIVariableTiming *self, SEL);
void __cdecl -[GADCSIVariableTiming resigningActive](struct GADCSIVariableTiming *self, SEL);
id __cdecl -[GADCSIVariableTiming name](struct GADCSIVariableTiming *self, SEL);
double __cdecl -[GADCSIVariableTiming start](struct GADCSIVariableTiming *self, SEL);
void __cdecl -[GADCSIVariableTiming setStart:](struct GADCSIVariableTiming *self, SEL, double);
double __cdecl -[GADCSIVariableTiming length](struct GADCSIVariableTiming *self, SEL);
void __cdecl -[GADCSIVariableTiming setLength:](struct GADCSIVariableTiming *self, SEL, double);
void __cdecl -[GADCSIVariableTiming .cxx_destruct](struct GADCSIVariableTiming *self, SEL);
id __cdecl -[GADMAdNetworkConnector init](struct GADMAdNetworkConnector *self, SEL);
id __cdecl -[GADMAdNetworkConnector initWithConfig:networkConfig:](struct GADMAdNetworkConnector *self, SEL, id, id);
void __cdecl -[GADMAdNetworkConnector setUpAdapter](struct GADMAdNetworkConnector *self, SEL);
id __cdecl -[GADMAdNetworkConnector adapterVersion](struct GADMAdNetworkConnector *self, SEL);
void __cdecl -[GADMAdNetworkConnector getAdFromAdapterWithType:](struct GADMAdNetworkConnector *self, SEL, id);
void __cdecl -[GADMAdNetworkConnector askAdapterToStopBeingDelegate](struct GADMAdNetworkConnector *self, SEL);
void __cdecl -[GADMAdNetworkConnector dealloc](struct GADMAdNetworkConnector *self, SEL);
id __cdecl -[GADMAdNetworkConnector slot](struct GADMAdNetworkConnector *self, SEL);
id __cdecl -[GADMAdNetworkConnector publisherId](struct GADMAdNetworkConnector *self, SEL);
id __cdecl -[GADMAdNetworkConnector credentials](struct GADMAdNetworkConnector *self, SEL);
char __cdecl -[GADMAdNetworkConnector testMode](struct GADMAdNetworkConnector *self, SEL);
id __cdecl -[GADMAdNetworkConnector networkExtras](struct GADMAdNetworkConnector *self, SEL);
id __cdecl -[GADMAdNetworkConnector networkExtrasForClass:](struct GADMAdNetworkConnector *self, SEL, Class);
id __cdecl -[GADMAdNetworkConnector viewControllerForPresentingModalView](struct GADMAdNetworkConnector *self, SEL);
int __cdecl -[GADMAdNetworkConnector userGender](struct GADMAdNetworkConnector *self, SEL);
id __cdecl -[GADMAdNetworkConnector userBirthday](struct GADMAdNetworkConnector *self, SEL);
id __cdecl -[GADMAdNetworkConnector userLocation](struct GADMAdNetworkConnector *self, SEL);
char __cdecl -[GADMAdNetworkConnector userHasLocation](struct GADMAdNetworkConnector *self, SEL);
float __cdecl -[GADMAdNetworkConnector userLatitude](struct GADMAdNetworkConnector *self, SEL);
float __cdecl -[GADMAdNetworkConnector userLongitude](struct GADMAdNetworkConnector *self, SEL);
float __cdecl -[GADMAdNetworkConnector userLocationAccuracyInMeters](struct GADMAdNetworkConnector *self, SEL);
id __cdecl -[GADMAdNetworkConnector userLocationDescription](struct GADMAdNetworkConnector *self, SEL);
id __cdecl -[GADMAdNetworkConnector userKeywords](struct GADMAdNetworkConnector *self, SEL);
id __cdecl -[GADMAdNetworkConnector childDirectedTreatment](struct GADMAdNetworkConnector *self, SEL);
id __cdecl -[GADMAdNetworkConnector requestAgent](struct GADMAdNetworkConnector *self, SEL);
char __cdecl -[GADMAdNetworkConnector isAutoClickProtected](struct GADMAdNetworkConnector *self, SEL);
void __cdecl -[GADMAdNetworkConnector adapterDidGetAdClick:](struct GADMAdNetworkConnector *self, SEL, id);
void __cdecl -[GADMAdNetworkConnector pingMediationURLs:defaultURL:durations:exitCodes:](struct GADMAdNetworkConnector *self, SEL, id, id, id, id);
void __cdecl -[GADMAdNetworkConnector reportClick](struct GADMAdNetworkConnector *self, SEL);
void __cdecl -[GADMAdNetworkConnector reportImpression](struct GADMAdNetworkConnector *self, SEL);
void __cdecl -[GADMAdNetworkConnector adapter:didReceiveInterstitial:](struct GADMAdNetworkConnector *self, SEL, id, id);
void __cdecl -[GADMAdNetworkConnector adapter:clickDidOccurInBanner:](struct GADMAdNetworkConnector *self, SEL, id, id);
id __cdecl -[GADMAdNetworkConnector adManager](struct GADMAdNetworkConnector *self, SEL);
void __cdecl -[GADMAdNetworkConnector setAdManager:](struct GADMAdNetworkConnector *self, SEL, id);
id __cdecl -[GADMAdNetworkConnector mediationConfig](struct GADMAdNetworkConnector *self, SEL);
void __cdecl -[GADMAdNetworkConnector setMediationConfig:](struct GADMAdNetworkConnector *self, SEL, id);
id __cdecl -[GADMAdNetworkConnector networkConfig](struct GADMAdNetworkConnector *self, SEL);
void __cdecl -[GADMAdNetworkConnector setNetworkConfig:](struct GADMAdNetworkConnector *self, SEL, id);
id __cdecl -[GADMAdNetworkConnector adapter](struct GADMAdNetworkConnector *self, SEL);
void __cdecl -[GADMAdNetworkConnector setAdapter:](struct GADMAdNetworkConnector *self, SEL, id);
char __cdecl -[GADMAdNetworkConnector didNetworkRefresh](struct GADMAdNetworkConnector *self, SEL);
void __cdecl -[GADMAdNetworkConnector setDidNetworkRefresh:](struct GADMAdNetworkConnector *self, SEL, char);
char __cdecl -[GADMAdNetworkConnector isClicked](struct GADMAdNetworkConnector *self, SEL);
void __cdecl -[GADMAdNetworkConnector setClicked:](struct GADMAdNetworkConnector *self, SEL, char);
void __cdecl -[GADMAdNetworkConnector .cxx_destruct](struct GADMAdNetworkConnector *self, SEL);
int __fastcall nullsub_67(_DWORD); // weak
id __cdecl +[GADRequest sdkVersionMetadata](struct GADRequest_meta *self, SEL);
id __cdecl +[GADRequest sdkVersionIdentifiers](struct GADRequest_meta *self, SEL);
id __cdecl +[GADRequest extendedSDKVersionNumber](struct GADRequest_meta *self, SEL);
void __fastcall sub_1CB984(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[GADMAdapterGoogleAdMobAds request](struct GADMAdapterGoogleAdMobAds *self, SEL);
void __cdecl -[GADMAdapterGoogleAdMobAds dealloc](struct GADMAdapterGoogleAdMobAds *self, SEL);
id __cdecl +[GADMAdapterGoogleAdMobAds adapterVersion](struct GADMAdapterGoogleAdMobAds_meta *self, SEL);
Class __cdecl +[GADMAdapterGoogleAdMobAds networkExtrasClass](struct GADMAdapterGoogleAdMobAds_meta *self, SEL);
id __cdecl -[GADMAdapterGoogleAdMobAds initWithGADMAdNetworkConnector:](struct GADMAdapterGoogleAdMobAds *self, SEL, id);
void __cdecl -[GADMAdapterGoogleAdMobAds getBannerWithSize:](struct GADMAdapterGoogleAdMobAds *self, SEL, struct GADAdSize);
void __cdecl -[GADMAdapterGoogleAdMobAds getInterstitial](struct GADMAdapterGoogleAdMobAds *self, SEL);
void __cdecl -[GADMAdapterGoogleAdMobAds getNativeAdWithAdTypes:options:](struct GADMAdapterGoogleAdMobAds *self, SEL, id, id);
void __cdecl -[GADMAdapterGoogleAdMobAds stopBeingDelegate](struct GADMAdapterGoogleAdMobAds *self, SEL);
char __cdecl -[GADMAdapterGoogleAdMobAds isBannerAnimationOK:](struct GADMAdapterGoogleAdMobAds *self, SEL, int);
void __cdecl -[GADMAdapterGoogleAdMobAds presentInterstitialFromRootViewController:](struct GADMAdapterGoogleAdMobAds *self, SEL, id);
void __cdecl -[GADMAdapterGoogleAdMobAds changeAdSizeTo:](struct GADMAdapterGoogleAdMobAds *self, SEL, struct GADAdSize);
void __cdecl -[GADMAdapterGoogleAdMobAds adViewDidReceiveAd:](struct GADMAdapterGoogleAdMobAds *self, SEL, id);
void __cdecl -[GADMAdapterGoogleAdMobAds adView:didFailToReceiveAdWithError:](struct GADMAdapterGoogleAdMobAds *self, SEL, id, id);
void __cdecl -[GADMAdapterGoogleAdMobAds adViewWillPresentScreen:](struct GADMAdapterGoogleAdMobAds *self, SEL, id);
void __cdecl -[GADMAdapterGoogleAdMobAds adViewWillDismissScreen:](struct GADMAdapterGoogleAdMobAds *self, SEL, id);
void __cdecl -[GADMAdapterGoogleAdMobAds adViewDidDismissScreen:](struct GADMAdapterGoogleAdMobAds *self, SEL, id);
void __cdecl -[GADMAdapterGoogleAdMobAds adViewWillLeaveApplication:](struct GADMAdapterGoogleAdMobAds *self, SEL, id);
void __cdecl -[GADMAdapterGoogleAdMobAds interstitialDidReceiveAd:](struct GADMAdapterGoogleAdMobAds *self, SEL, id);
void __cdecl -[GADMAdapterGoogleAdMobAds interstitial:didFailToReceiveAdWithError:](struct GADMAdapterGoogleAdMobAds *self, SEL, id, id);
void __cdecl -[GADMAdapterGoogleAdMobAds interstitialWillPresentScreen:](struct GADMAdapterGoogleAdMobAds *self, SEL, id);
void __cdecl -[GADMAdapterGoogleAdMobAds interstitialWillDismissScreen:](struct GADMAdapterGoogleAdMobAds *self, SEL, id);
void __cdecl -[GADMAdapterGoogleAdMobAds interstitialDidDismissScreen:](struct GADMAdapterGoogleAdMobAds *self, SEL, id);
void __cdecl -[GADMAdapterGoogleAdMobAds interstitialWillLeaveApplication:](struct GADMAdapterGoogleAdMobAds *self, SEL, id);
void __cdecl -[GADMAdapterGoogleAdMobAds interstitialDidReceiveAdClick:](struct GADMAdapterGoogleAdMobAds *self, SEL, id);
void __cdecl -[GADMAdapterGoogleAdMobAds adLoader:didReceiveNativeAppInstallAd:](struct GADMAdapterGoogleAdMobAds *self, SEL, id, id);
void __cdecl -[GADMAdapterGoogleAdMobAds adLoader:didReceiveNativeContentAd:](struct GADMAdapterGoogleAdMobAds *self, SEL, id, id);
void __cdecl -[GADMAdapterGoogleAdMobAds adLoader:didFailToReceiveAdWithError:](struct GADMAdapterGoogleAdMobAds *self, SEL, id, id);
void __cdecl -[GADMAdapterGoogleAdMobAds .cxx_destruct](struct GADMAdapterGoogleAdMobAds *self, SEL);
id __cdecl -[GADSearchRequest copyWithZone:](struct GADSearchRequest *self, SEL, struct _NSZone *);
id __cdecl -[GADSearchRequest parameters](struct GADSearchRequest *self, SEL);
void __fastcall sub_1CD1D4(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[GADSearchRequest setBackgroundSolid:](struct GADSearchRequest *self, SEL, id);
void __cdecl -[GADSearchRequest setBackgroundGradientFrom:toColor:](struct GADSearchRequest *self, SEL, id, id);
id __cdecl -[GADSearchRequest query](struct GADSearchRequest *self, SEL);
void __cdecl -[GADSearchRequest setQuery:](struct GADSearchRequest *self, SEL, id);
id __cdecl -[GADSearchRequest backgroundColor](struct GADSearchRequest *self, SEL);
void __cdecl -[GADSearchRequest setBackgroundColor:](struct GADSearchRequest *self, SEL, id);
id __cdecl -[GADSearchRequest gradientFrom](struct GADSearchRequest *self, SEL);
void __cdecl -[GADSearchRequest setGradientFrom:](struct GADSearchRequest *self, SEL, id);
id __cdecl -[GADSearchRequest gradientTo](struct GADSearchRequest *self, SEL);
void __cdecl -[GADSearchRequest setGradientTo:](struct GADSearchRequest *self, SEL, id);
id __cdecl -[GADSearchRequest headerColor](struct GADSearchRequest *self, SEL);
void __cdecl -[GADSearchRequest setHeaderColor:](struct GADSearchRequest *self, SEL, id);
id __cdecl -[GADSearchRequest descriptionTextColor](struct GADSearchRequest *self, SEL);
void __cdecl -[GADSearchRequest setDescriptionTextColor:](struct GADSearchRequest *self, SEL, id);
id __cdecl -[GADSearchRequest anchorTextColor](struct GADSearchRequest *self, SEL);
void __cdecl -[GADSearchRequest setAnchorTextColor:](struct GADSearchRequest *self, SEL, id);
id __cdecl -[GADSearchRequest fontFamily](struct GADSearchRequest *self, SEL);
void __cdecl -[GADSearchRequest setFontFamily:](struct GADSearchRequest *self, SEL, id);
unsigned int __cdecl -[GADSearchRequest headerTextSize](struct GADSearchRequest *self, SEL);
void __cdecl -[GADSearchRequest setHeaderTextSize:](struct GADSearchRequest *self, SEL, unsigned int);
id __cdecl -[GADSearchRequest borderColor](struct GADSearchRequest *self, SEL);
void __cdecl -[GADSearchRequest setBorderColor:](struct GADSearchRequest *self, SEL, id);
unsigned int __cdecl -[GADSearchRequest borderType](struct GADSearchRequest *self, SEL);
void __cdecl -[GADSearchRequest setBorderType:](struct GADSearchRequest *self, SEL, unsigned int);
unsigned int __cdecl -[GADSearchRequest borderThickness](struct GADSearchRequest *self, SEL);
void __cdecl -[GADSearchRequest setBorderThickness:](struct GADSearchRequest *self, SEL, unsigned int);
id __cdecl -[GADSearchRequest customChannels](struct GADSearchRequest *self, SEL);
void __cdecl -[GADSearchRequest setCustomChannels:](struct GADSearchRequest *self, SEL, id);
unsigned int __cdecl -[GADSearchRequest callButtonColor](struct GADSearchRequest *self, SEL);
void __cdecl -[GADSearchRequest setCallButtonColor:](struct GADSearchRequest *self, SEL, unsigned int);
void __cdecl -[GADSearchRequest .cxx_destruct](struct GADSearchRequest *self, SEL);
int __fastcall nullsub_70(_DWORD); // weak
id __cdecl -[GADNativeAdImage initWithImage:](struct GADNativeAdImage *self, SEL, id);
id __cdecl -[GADNativeAdImage initWithURL:scale:](struct GADNativeAdImage *self, SEL, id, float);
id __cdecl +[GADClickTrackerCollection sharedInstance](struct GADClickTrackerCollection_meta *self, SEL);
void __fastcall sub_1CD90C(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[GADClickTrackerCollection init](struct GADClickTrackerCollection *self, SEL);
void __cdecl -[GADClickTrackerCollection dealloc](struct GADClickTrackerCollection *self, SEL);
void __cdecl -[GADClickTrackerCollection trackURLs:cacheEnabled:](struct GADClickTrackerCollection *self, SEL, id, char);
void __cdecl -[GADClickTrackerCollection trackURL:cacheEnabled:](struct GADClickTrackerCollection *self, SEL, id, char);
void __cdecl -[GADClickTrackerCollection trackURL:](struct GADClickTrackerCollection *self, SEL, id);
void __cdecl -[GADClickTrackerCollection cleanupTrackers](struct GADClickTrackerCollection *self, SEL);
void __cdecl -[GADClickTrackerCollection tracker:didRedirect:](struct GADClickTrackerCollection *self, SEL, id, id);
void *__fastcall sub_1CE0A8(int a1);
int __fastcall sub_1CE0BC(int a1, int a2);
void __fastcall sub_1CE0C4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADClickTrackerCollection tracker:didFailWithError:](struct GADClickTrackerCollection *self, SEL, id, id);
void *__fastcall sub_1CE148(int a1);
int __fastcall sub_1CE15C(int a1, int a2);
void __fastcall sub_1CE164(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[GADClickTrackerCollection trackers](struct GADClickTrackerCollection *self, SEL);
void __cdecl -[GADClickTrackerCollection setTrackers:](struct GADClickTrackerCollection *self, SEL, id);
void __cdecl -[GADClickTrackerCollection .cxx_destruct](struct GADClickTrackerCollection *self, SEL);
void __fastcall sub_1CE1CC(int a1, int a2, int a3);
id __fastcall sub_1CE540(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[GADAdViewRenderedChecker checkIsContentRenderedInAdView](struct GADAdViewRenderedChecker *self, SEL);
float __cdecl -[GADAdViewRenderedChecker percentOfImage:ofColor:](struct GADAdViewRenderedChecker *self, SEL, id, id);
id __cdecl -[GADAdViewRenderedChecker adView](struct GADAdViewRenderedChecker *self, SEL);
void __cdecl -[GADAdViewRenderedChecker setAdView:](struct GADAdViewRenderedChecker *self, SEL, id);
id __cdecl -[GADAdViewRenderedChecker delegate](struct GADAdViewRenderedChecker *self, SEL);
void __cdecl -[GADAdViewRenderedChecker setDelegate:](struct GADAdViewRenderedChecker *self, SEL, id);
void __cdecl -[GADAdViewRenderedChecker .cxx_destruct](struct GADAdViewRenderedChecker *self, SEL);
id __cdecl -[GADAdFetcher init](struct GADAdFetcher *self, SEL);
void __cdecl -[GADAdFetcher dealloc](struct GADAdFetcher *self, SEL);
void __cdecl -[GADAdFetcher cancel](struct GADAdFetcher *self, SEL);
char __cdecl -[GADAdFetcher fetchRemainingContentForAd:headers:delegate:request:error:](struct GADAdFetcher *self, SEL, id, id, id, id, id *);
char __cdecl -[GADAdFetcher fetchRequestURL:delegate:error:](struct GADAdFetcher *self, SEL, id, id, id *);
char __cdecl -[GADAdFetcher fetchRequestURL:delegate:responseHeaders:responseAd:error:](struct GADAdFetcher *self, SEL, id, id, id, id, id *);
id __cdecl +[GADAdFetcher whitelistedDomains](struct GADAdFetcher_meta *self, SEL);
void sub_1CF358();
id __cdecl -[GADAdFetcher requestHeadersForURL:](struct GADAdFetcher *self, SEL, id);
char __cdecl -[GADAdFetcher startFetchWithRequestURL:responseHeaders:error:](struct GADAdFetcher *self, SEL, id, id, id *);
void __fastcall sub_1CFA64(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1CFA94(int a1, int a2);
int __fastcall sub_1CFAA0(int a1);
void __cdecl -[GADAdFetcher completedURLConnection](struct GADAdFetcher *self, SEL);
void __cdecl -[GADAdFetcher markFetchStart](struct GADAdFetcher *self, SEL);
void __cdecl -[GADAdFetcher markFetchComplete](struct GADAdFetcher *self, SEL);
void __cdecl -[GADAdFetcher resourceFailedToLoadWithError:responseCode:](struct GADAdFetcher *self, SEL, id, unsigned int);
void __cdecl -[GADAdFetcher processHTTPHeaders:](struct GADAdFetcher *self, SEL, id);
void __fastcall sub_1D0960(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1D0A2C(int a1, int a2);
void __fastcall sub_1D0A34(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
unsigned int __cdecl -[GADAdFetcher adResponseTypeFromHeaders:requestError:](struct GADAdFetcher *self, SEL, id, id *);
id __cdecl -[GADAdFetcher connection:shouldRedirectToURL:](struct GADAdFetcher *self, SEL, id, id);
void __cdecl -[GADAdFetcher connection:loadDidReceiveRedirectResponse:](struct GADAdFetcher *self, SEL, id, id);
char __cdecl -[GADAdFetcher connection:loadShouldUseCachedResponse:](struct GADAdFetcher *self, SEL, id, id);
void __cdecl -[GADAdFetcher connection:loadDidReceiveCachedResponse:](struct GADAdFetcher *self, SEL, id, id);
void __cdecl -[GADAdFetcher connection:loadDidFinish:baseURL:](struct GADAdFetcher *self, SEL, id, id, id);
void __cdecl -[GADAdFetcher connection:loadDidFail:httpStatusCode:](struct GADAdFetcher *self, SEL, id, id, int);
id __cdecl -[GADAdFetcher recursiveLock](struct GADAdFetcher *self, SEL);
void __cdecl -[GADAdFetcher setRecursiveLock:](struct GADAdFetcher *self, SEL, id);
id __cdecl -[GADAdFetcher ad](struct GADAdFetcher *self, SEL);
void __cdecl -[GADAdFetcher setAd:](struct GADAdFetcher *self, SEL, id);
id __cdecl -[GADAdFetcher request](struct GADAdFetcher *self, SEL);
void __cdecl -[GADAdFetcher setRequest:](struct GADAdFetcher *self, SEL, id);
id __cdecl -[GADAdFetcher delegate](struct GADAdFetcher *self, SEL);
void __cdecl -[GADAdFetcher setDelegate:](struct GADAdFetcher *self, SEL, id);
id __cdecl -[GADAdFetcher timer](struct GADAdFetcher *self, SEL);
void __cdecl -[GADAdFetcher setTimer:](struct GADAdFetcher *self, SEL, id);
id __cdecl -[GADAdFetcher adConnection](struct GADAdFetcher *self, SEL);
void __cdecl -[GADAdFetcher setAdConnection:](struct GADAdFetcher *self, SEL, id);
char __cdecl -[GADAdFetcher adConnectionHasCompleted](struct GADAdFetcher *self, SEL);
void __cdecl -[GADAdFetcher setAdConnectionHasCompleted:](struct GADAdFetcher *self, SEL, char);
void __cdecl -[GADAdFetcher .cxx_destruct](struct GADAdFetcher *self, SEL);
int __fastcall nullsub_71(_DWORD); // weak
int __fastcall nullsub_72(_DWORD); // weak
id __cdecl -[NSString(GADReplaceContentAdditions) gad_escapeAts](struct NSString *self, SEL);
id __cdecl -[NSString(GADReplaceContentAdditions) gad_stripTrailingSlash](struct NSString *self, SEL);
void __cdecl -[NSMutableString(GADReplaceContentAdditions) gad_replaceAtQuotedKeywordPattern:withString:](struct NSMutableString *self, SEL, id, id);
void __cdecl -[NSMutableString(GADReplaceContentAdditions) gad_removeAtQuotedKeywords](struct NSMutableString *self, SEL);
void __cdecl -[NSMutableString(GADReplaceContentAdditions) gad_unescapeAts](struct NSMutableString *self, SEL);
id __cdecl -[GADAdReward init](struct GADAdReward *self, SEL);
id __cdecl -[GADAdReward initWithRewardDictionary:](struct GADAdReward *self, SEL, id);
id __cdecl -[GADAdReward initWithRewardType:rewardAmount:](struct GADAdReward *self, SEL, id, id);
id __cdecl -[GADAdReward type](struct GADAdReward *self, SEL);
id __cdecl -[GADAdReward amount](struct GADAdReward *self, SEL);
void __cdecl -[GADAdReward .cxx_destruct](struct GADAdReward *self, SEL);
int __fastcall nullsub_73(_DWORD); // weak
void __cdecl -[GADSlot willProcessAd](struct GADSlot *self, SEL);
void __cdecl -[GADSlot adFailedToReceiveContentWithError:](struct GADSlot *self, SEL, id);
void __cdecl -[GADSlot adFinishedLoadingContent](struct GADSlot *self, SEL);
void __cdecl -[GADSlot adWasClicked](struct GADSlot *self, SEL);
void __cdecl -[GADSlot adWillPresentScreen](struct GADSlot *self, SEL);
void __cdecl -[GADSlot adWillDismissScreen](struct GADSlot *self, SEL);
void __cdecl -[GADSlot adDidDismissScreen](struct GADSlot *self, SEL);
void __cdecl -[GADSlot adWillLeaveApplication](struct GADSlot *self, SEL);
id __cdecl +[GADStubsForGTMOAuth2Authentication encodedQueryParametersForDictionary:](struct GADStubsForGTMOAuth2Authentication *self, SEL, id);
id __cdecl -[GADTokenCacheEntry initWithCoder:](struct GADTokenCacheEntry *self, SEL, id);
void __cdecl -[GADTokenCacheEntry encodeWithCoder:](struct GADTokenCacheEntry *self, SEL, id);
id __cdecl -[GADTokenCacheEntry token](struct GADTokenCacheEntry *self, SEL);
void __cdecl -[GADTokenCacheEntry setToken:](struct GADTokenCacheEntry *self, SEL, id);
id __cdecl -[GADTokenCacheEntry lastAccess](struct GADTokenCacheEntry *self, SEL);
void __cdecl -[GADTokenCacheEntry setLastAccess:](struct GADTokenCacheEntry *self, SEL, id);
id __cdecl -[GADTokenCacheEntry expiration](struct GADTokenCacheEntry *self, SEL);
void __cdecl -[GADTokenCacheEntry setExpiration:](struct GADTokenCacheEntry *self, SEL, id);
double __cdecl -[GADTokenCacheEntry lifespanInSeconds](struct GADTokenCacheEntry *self, SEL);
void __cdecl -[GADTokenCacheEntry setLifespanInSeconds:](struct GADTokenCacheEntry *self, SEL, double);
void __cdecl -[GADTokenCacheEntry .cxx_destruct](struct GADTokenCacheEntry *self, SEL);
id __cdecl +[GADTokenDispenser sharedInstance](struct GADTokenDispenser_meta *self, SEL);
void __fastcall sub_1D2334(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[GADTokenDispenser init](struct GADTokenDispenser *self, SEL);
int __fastcall sub_1D26C4(int a1, int a2, void *a3);
int __fastcall sub_1D27C8(int a1, int a2);
void __fastcall sub_1D27D0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_1D27D8(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1D292C(int a1, int a2);
void __fastcall sub_1D2934(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADTokenDispenser dealloc](struct GADTokenDispenser *self, SEL);
id __cdecl -[GADTokenDispenser token](struct GADTokenDispenser *self, SEL);
void *sub_1D2CA8();
int __fastcall sub_1D2D7C(int a1, int a2);
void __fastcall sub_1D2D90(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_1D2D98(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1D2EA8(int a1, int a2);
int __fastcall sub_1D2ED4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4);
void __cdecl -[GADTokenDispenser refreshToken:](struct GADTokenDispenser *self, SEL, id);
void __fastcall sub_1D2FBC(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1D3038(int a1, int a2);
void __fastcall sub_1D3058(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADTokenDispenser refreshSignedInUser](struct GADTokenDispenser *self, SEL);
void __fastcall sub_1D30E4(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1D3144(int a1, int a2);
void __fastcall sub_1D314C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADTokenDispenser setCurrentUser:](struct GADTokenDispenser *self, SEL, id);
void __fastcall sub_1D3218(int a1, int a2);
int __fastcall sub_1D32C4(int a1, int a2);
void __fastcall sub_1D32E4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADTokenDispenser observeValueForKeyPath:ofObject:change:context:](struct GADTokenDispenser *self, SEL, id, id, id, void *);
void __cdecl -[GADTokenDispenser setCacheEntry:forUser:](struct GADTokenDispenser *self, SEL, id, id);
void __cdecl -[GADTokenDispenser removeCacheEntryForUser:](struct GADTokenDispenser *self, SEL, id);
void __cdecl -[GADTokenDispenser cacheTokenFromResponseData:user:](struct GADTokenDispenser *self, SEL, id, id);
void __cdecl -[GADTokenDispenser requestTokenForUser:](struct GADTokenDispenser *self, SEL, id);
void __fastcall sub_1D4040(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1D408C(int a1, int a2);
void __fastcall sub_1D40AC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADTokenDispenser refreshTokens](struct GADTokenDispenser *self, SEL);
int __fastcall sub_1D4568(int a1, int a2, void *a3);
int __fastcall sub_1D45BC(int a1, int a2);
int __fastcall sub_1D45CC(int a1);
void __cdecl -[GADTokenDispenser rescheduleRefreshes](struct GADTokenDispenser *self, SEL);
void __fastcall sub_1D47C0(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1D47F0(int a1, int a2);
int __fastcall sub_1D47FC(int a1);
void __fastcall sub_1D4808(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1D4908(int a1, int a2);
void __fastcall sub_1D4934(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADTokenDispenser .cxx_destruct](struct GADTokenDispenser *self, SEL);
id __fastcall sub_1D49DC(void *a1, int a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[GADCachedURLResponse initWithResponse:data:expirationDate:destinationURL:](struct GADCachedURLResponse *self, SEL, id, id, id, id);
id __cdecl -[GADCachedURLResponse response](struct GADCachedURLResponse *self, SEL);
id __cdecl -[GADCachedURLResponse data](struct GADCachedURLResponse *self, SEL);
id __cdecl -[GADCachedURLResponse expirationDate](struct GADCachedURLResponse *self, SEL);
void __cdecl -[GADCachedURLResponse setExpirationDate:](struct GADCachedURLResponse *self, SEL, id);
id __cdecl -[GADCachedURLResponse destinationURL](struct GADCachedURLResponse *self, SEL);
void __cdecl -[GADCachedURLResponse setDestinationURL:](struct GADCachedURLResponse *self, SEL, id);
void __cdecl -[GADCachedURLResponse .cxx_destruct](struct GADCachedURLResponse *self, SEL);
id __cdecl -[GADCSIReporter init](struct GADCSIReporter *self, SEL);
id __cdecl -[GADCSIReporter initWithConfiguration:](struct GADCSIReporter *self, SEL, id);
void __cdecl -[GADCSIReporter reportTimeRecorder:completionBlock:](struct GADCSIReporter *self, SEL, id, id);
void __fastcall sub_1D4F18(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1D4F5C(int a1, int a2);
void __fastcall sub_1D4F6C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[GADCSIReporter URLForTimeRecorder:](struct GADCSIReporter *self, SEL, id);
void __fastcall sub_1D54C8(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1D5738(int a1, int a2);
void __fastcall sub_1D5760(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADCSIReporter .cxx_destruct](struct GADCSIReporter *self, SEL);
id __cdecl +[GADCrashReporter sharedInstance](struct GADCrashReporter_meta *self, SEL);
void __fastcall sub_1D57F4(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[GADCrashReporter init](struct GADCrashReporter *self, SEL);
void __cdecl -[GADCrashReporter enableReporting](struct GADCrashReporter *self, SEL);
int __fastcall sub_1D5904(int a1, int a2);
void __cdecl -[GADCrashReporter disableReporting](struct GADCrashReporter *self, SEL);
void __fastcall sub_1D655C(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1D66AC(int a1, int a2);
void __fastcall sub_1D66F0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl +[GADURLConnection memoryCache](struct GADURLConnection_meta *self, SEL);
void *sub_1D6780();
char __cdecl -[GADURLConnection startWithRequestURL:delegate:error:](struct GADURLConnection *self, SEL, id, id, id *);
void __cdecl -[GADURLConnection stop](struct GADURLConnection *self, SEL);
void __cdecl -[GADURLConnection cancel](struct GADURLConnection *self, SEL);
void __cdecl -[GADURLConnection dealloc](struct GADURLConnection *self, SEL);
id __cdecl +[GADURLConnection defaultCachePath](struct GADURLConnection_meta *self, SEL);
id __cdecl +[GADURLConnection cacheKeyForURL:](struct GADURLConnection *self, SEL, id);
id __cdecl -[GADURLConnection cachedResponseForURL:](struct GADURLConnection *self, SEL, id);
char __cdecl -[GADURLConnection tryToStoreResponseAndData](struct GADURLConnection *self, SEL);
id __cdecl -[GADURLConnection connection:willSendRequest:redirectResponse:](struct GADURLConnection *self, SEL, id, id, id);
void __cdecl -[GADURLConnection connection:didReceiveResponse:](struct GADURLConnection *self, SEL, id, id);
id __cdecl -[GADURLConnection connection:willCacheResponse:](struct GADURLConnection *self, SEL, id, id);
void __cdecl -[GADURLConnection connection:didReceiveData:](struct GADURLConnection *self, SEL, id, id);
void __cdecl -[GADURLConnection connectionDidFinishLoading:](struct GADURLConnection *self, SEL, id);
void __cdecl -[GADURLConnection connection:didFailWithError:](struct GADURLConnection *self, SEL, id, id);
void __cdecl +[GADURLConnection clearCache](struct GADURLConnection_meta *self, SEL);
char __cdecl -[GADURLConnection isInProgress](struct GADURLConnection *self, SEL);
void __cdecl -[GADURLConnection setIsInProgress:](struct GADURLConnection *self, SEL, char);
id __cdecl -[GADURLConnection sourceURL](struct GADURLConnection *self, SEL);
void __cdecl -[GADURLConnection setSourceURL:](struct GADURLConnection *self, SEL, id);
id __cdecl -[GADURLConnection destinationURL](struct GADURLConnection *self, SEL);
void __cdecl -[GADURLConnection setDestinationURL:](struct GADURLConnection *self, SEL, id);
char __cdecl -[GADURLConnection allowCache](struct GADURLConnection *self, SEL);
void __cdecl -[GADURLConnection setAllowCache:](struct GADURLConnection *self, SEL, char);
id __cdecl -[GADURLConnection delegate](struct GADURLConnection *self, SEL);
void __cdecl -[GADURLConnection setDelegate:](struct GADURLConnection *self, SEL, id);
id __cdecl -[GADURLConnection connection](struct GADURLConnection *self, SEL);
void __cdecl -[GADURLConnection setConnection:](struct GADURLConnection *self, SEL, id);
id __cdecl -[GADURLConnection response](struct GADURLConnection *self, SEL);
void __cdecl -[GADURLConnection setResponse:](struct GADURLConnection *self, SEL, id);
id __cdecl -[GADURLConnection receivedData](struct GADURLConnection *self, SEL);
void __cdecl -[GADURLConnection setReceivedData:](struct GADURLConnection *self, SEL, id);
void __cdecl -[GADURLConnection .cxx_destruct](struct GADURLConnection *self, SEL);
void __cdecl -[GADImpressionTicketGestureRecognizer reset](struct GADImpressionTicketGestureRecognizer *self, SEL);
void __cdecl -[GADImpressionTicketGestureRecognizer touchesBegan:withEvent:](struct GADImpressionTicketGestureRecognizer *self, SEL, id, id);
void __cdecl -[GADImpressionTicketGestureRecognizer touchesMoved:withEvent:](struct GADImpressionTicketGestureRecognizer *self, SEL, id, id);
void __cdecl -[GADImpressionTicketGestureRecognizer touchesEnded:withEvent:](struct GADImpressionTicketGestureRecognizer *self, SEL, id, id);
void __cdecl -[GADImpressionTicketGestureRecognizer touchesCancelled:withEvent:](struct GADImpressionTicketGestureRecognizer *self, SEL, id, id);
int __fastcall nullsub_74(_DWORD); // weak
void __cdecl -[GADSlot processAdResponse:](struct GADSlot *self, SEL, id);
id __cdecl +[GADNativeAd firstAdObjectInAdConfigurationDictionary:](struct GADNativeAd *self, SEL, id);
Class __cdecl +[GADNativeAd classFromAdConfigurationDictionary:](struct GADNativeAd *self, SEL, id);
Class __cdecl +[GADNativeAd classFromMediatedNativeAd:](struct GADNativeAd *self, SEL, id);
id __cdecl +[GADNativeAd supportHTMLURL](struct GADNativeAd_meta *self, SEL);
id __cdecl -[GADNativeAd initWithDictionary:options:](struct GADNativeAd *self, SEL, id, id);
id __cdecl -[GADNativeAd initWithMediatedNativeAd:options:](struct GADNativeAd *self, SEL, id, id);
id __cdecl -[GADNativeAd init](struct GADNativeAd *self, SEL);
void __cdecl -[GADNativeAd dealloc](struct GADNativeAd *self, SEL);
void __cdecl -[GADNativeAd gadNativeAd_commonInit](struct GADNativeAd *self, SEL);
void __cdecl -[GADNativeAd setSlot:](struct GADNativeAd *self, SEL, id);
char __cdecl -[GADNativeAd hasValidConfigurationForRequestParameters:](struct GADNativeAd *self, SEL, id);
id __cdecl -[GADNativeAd clickActionTemplateID](struct GADNativeAd *self, SEL);
void __cdecl -[GADNativeAd performClickOnView:assetName:environment:](struct GADNativeAd *self, SEL, id, id, id);
void __fastcall sub_1D9440(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1D9474(int a1, int a2);
void __fastcall sub_1D9494(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADNativeAd recordImpression](struct GADNativeAd *self, SEL);
char __cdecl -[GADNativeAd hasRecordedImpression](struct GADNativeAd *self, SEL);
id __cdecl -[GADNativeAd requiredAssets](struct GADNativeAd *self, SEL);
void __cdecl -[GADNativeAd notifyLoadingDelegateIfAllRequestedAssetsHaveLoaded](struct GADNativeAd *self, SEL);
void __cdecl -[GADNativeAd finishedLoadingAssetWithName:](struct GADNativeAd *self, SEL, id);
void __cdecl -[GADNativeAd failedToLoadAssetWithName:](struct GADNativeAd *self, SEL, id);
char __cdecl -[GADNativeAd shouldLoadAssets](struct GADNativeAd *self, SEL);
int __fastcall sub_1D983C(int a1);
int __fastcall sub_1D9860(int a1, int a2);
void __fastcall sub_1D9888(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[GADNativeAd loadAssetsWithCompletionHandler:](struct GADNativeAd *self, SEL, id);
void __fastcall sub_1D99BC(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1D9A18(int a1, int a2);
void __fastcall sub_1D9A44(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_1D9A64(int a1);
int __fastcall sub_1D9B00(int a1);
int __fastcall sub_1D9B1C(int a1, int a2);
void __fastcall sub_1D9B24(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_1D9B2C(int a1, int a2);
void __fastcall sub_1D9B34(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADNativeAd addAssetWithNameToRequestedAssets:](struct GADNativeAd *self, SEL, id);
void __cdecl -[GADNativeAd callAndClearAssetLoadCompletionHandlersWithError:](struct GADNativeAd *self, SEL, id);
int __fastcall sub_1D9CB0(int a1, int a2);
void __fastcall sub_1D9CC4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void *__fastcall sub_1D9CCC(int a1);
int __fastcall sub_1D9D30(int a1, int a2);
void __fastcall sub_1D9D58(int a1, int a2, int a3, int a4, struct objc_object *a5);
char *__fastcall sub_1D9D7C(int a1, int a2);
int __fastcall sub_1D9EA8(int a1, int a2);
void __fastcall sub_1D9ED0(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[GADNativeAd slotWillPresentScreen:](struct GADNativeAd *self, SEL, id);
void __fastcall sub_1D9F60(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1D9FD0(int a1, int a2);
void __fastcall sub_1D9FD8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADNativeAd slotWillDismissScreen:](struct GADNativeAd *self, SEL, id);
void __fastcall sub_1DA04C(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1DA0BC(int a1, int a2);
void __fastcall sub_1DA0C4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADNativeAd slotDidDismissScreen:](struct GADNativeAd *self, SEL, id);
void __fastcall sub_1DA138(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1DA1A8(int a1, int a2);
void __fastcall sub_1DA1B0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADNativeAd slotWillLeaveApplication:](struct GADNativeAd *self, SEL, id);
void __fastcall sub_1DA224(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1DA294(int a1, int a2);
void __fastcall sub_1DA29C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[GADNativeAd delegate](struct GADNativeAd *self, SEL);
void __cdecl -[GADNativeAd setDelegate:](struct GADNativeAd *self, SEL, id);
id __cdecl -[GADNativeAd rootViewController](struct GADNativeAd *self, SEL);
void __cdecl -[GADNativeAd setRootViewController:](struct GADNativeAd *self, SEL, id);
id __cdecl -[GADNativeAd extraAssets](struct GADNativeAd *self, SEL);
void __cdecl -[GADNativeAd setExtraAssets:](struct GADNativeAd *self, SEL, id);
id __cdecl -[GADNativeAd adNetworkClassName](struct GADNativeAd *self, SEL);
void __cdecl -[GADNativeAd setAdNetworkClassName:](struct GADNativeAd *self, SEL, id);
id __cdecl -[GADNativeAd adUnitID](struct GADNativeAd *self, SEL);
void __cdecl -[GADNativeAd setAdUnitID:](struct GADNativeAd *self, SEL, id);
id __cdecl -[GADNativeAd adConfiguration](struct GADNativeAd *self, SEL);
id __cdecl -[GADNativeAd mediatedNativeAd](struct GADNativeAd *self, SEL);
void __cdecl -[GADNativeAd setMediatedNativeAd:](struct GADNativeAd *self, SEL, id);
id __cdecl -[GADNativeAd slot](struct GADNativeAd *self, SEL);
id __cdecl -[GADNativeAd thirdPartyClickTrackingURLs](struct GADNativeAd *self, SEL);
void __cdecl -[GADNativeAd setThirdPartyClickTrackingURLs:](struct GADNativeAd *self, SEL, id);
id __cdecl -[GADNativeAd googleClickTrackingURLString](struct GADNativeAd *self, SEL);
void __cdecl -[GADNativeAd setGoogleClickTrackingURLString:](struct GADNativeAd *self, SEL, id);
id __cdecl -[GADNativeAd clickActions](struct GADNativeAd *self, SEL);
void __cdecl -[GADNativeAd setClickActions:](struct GADNativeAd *self, SEL, id);
void __cdecl -[GADNativeAd .cxx_destruct](struct GADNativeAd *self, SEL);
int __fastcall nullsub_75(_DWORD); // weak
void __cdecl -[GADAdView setUpVideoPlayerWithURL:](struct GADAdView *self, SEL, id);
void __cdecl -[GADAdView setVideoPlayerFrame:](struct GADAdView *self, SEL, struct CGRect);
void __cdecl -[GADAdView hideVideo](struct GADAdView *self, SEL);
void __cdecl -[GADAdView showVideo](struct GADAdView *self, SEL);
void __cdecl -[GADAdView player:didCreateAVPlayer:](struct GADAdView *self, SEL, id, id);
int __fastcall sub_1DA9D0(int a1, int a2);
int __fastcall sub_1DA9F4(int a1, int a2);
id __cdecl -[GADBinaryHeap init](struct GADBinaryHeap *self, SEL);
id __cdecl -[GADBinaryHeap initWithComparator:](struct GADBinaryHeap *self, SEL, void **);
void *__fastcall sub_1DAAD0(void *a1, int a2);
void __cdecl -[GADBinaryHeap dealloc](struct GADBinaryHeap *self, SEL);
void __cdecl -[GADBinaryHeap addObject:](struct GADBinaryHeap *self, SEL, id);
char __cdecl -[GADBinaryHeap containsObject:](struct GADBinaryHeap *self, SEL, id);
unsigned int __cdecl -[GADBinaryHeap count](struct GADBinaryHeap *self, SEL);
id __cdecl -[GADBinaryHeap minimum](struct GADBinaryHeap *self, SEL);
id __cdecl -[GADBinaryHeap removedMinimum](struct GADBinaryHeap *self, SEL);
id __cdecl -[GADBinaryHeap sortedObjects](struct GADBinaryHeap *self, SEL);
int __fastcall nullsub_76(_DWORD); // weak
int __fastcall sub_1DAD14(char a1);
id __fastcall sub_1DAD3C(int _R0, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[NSString(GADStringNumberAdditions) gad_MD5Data](struct NSString *self, SEL);
id __cdecl -[NSString(GADStringNumberAdditions) gad_MD5String](struct NSString *self, SEL);
id __cdecl +[GADSwipeToViewControllerGMSGHandler actionBlockDictionary](struct GADSwipeToViewControllerGMSGHandler_meta *self, SEL);
int sub_1DB0BC();
void __fastcall sub_1DB1C0(int a1, void *a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_1DB200(int a1, void *a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[GADSwipeToViewControllerGMSGHandler initWithSlot:](struct GADSwipeToViewControllerGMSGHandler *self, SEL, id);
void __cdecl -[GADSwipeToViewControllerGMSGHandler enableSwipeToViewController:](struct GADSwipeToViewControllerGMSGHandler *self, SEL, id);
void __cdecl -[GADSwipeToViewControllerGMSGHandler disableSwipeToViewController:](struct GADSwipeToViewControllerGMSGHandler *self, SEL, id);
id __cdecl -[GADSwipeToViewControllerGMSGHandler slot](struct GADSwipeToViewControllerGMSGHandler *self, SEL);
void __cdecl -[GADSwipeToViewControllerGMSGHandler setSlot:](struct GADSwipeToViewControllerGMSGHandler *self, SEL, id);
void __cdecl -[GADSwipeToViewControllerGMSGHandler .cxx_destruct](struct GADSwipeToViewControllerGMSGHandler *self, SEL);
id __cdecl +[GADMRAIDInterceptor classLock](struct GADMRAIDInterceptor_meta *self, SEL);
void __fastcall sub_1DB634(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl +[GADMRAIDInterceptor enableCanInitWithRequest](struct GADMRAIDInterceptor_meta *self, SEL);
void __cdecl +[GADMRAIDInterceptor disableCanInitWithRequest](struct GADMRAIDInterceptor_meta *self, SEL);
char __cdecl +[GADMRAIDInterceptor canInitWithRequestIsEnabled](struct GADMRAIDInterceptor_meta *self, SEL);
void __cdecl +[GADMRAIDInterceptor disallow](struct GADMRAIDInterceptor_meta *self, SEL);
void __cdecl +[GADMRAIDInterceptor allow](struct GADMRAIDInterceptor_meta *self, SEL);
void __cdecl +[GADMRAIDInterceptor initialize](struct GADMRAIDInterceptor_meta *self, SEL);
char __cdecl +[GADMRAIDInterceptor urlIsAnImplementationPath:](struct GADMRAIDInterceptor *self, SEL, id);
void __cdecl +[GADMRAIDInterceptor updateImplementationsPaths](struct GADMRAIDInterceptor_meta *self, SEL);
void __cdecl +[GADMRAIDInterceptor setBannerImplementationPath:](struct GADMRAIDInterceptor *self, SEL, id);
id __cdecl +[GADMRAIDInterceptor bannerImplementationPath](struct GADMRAIDInterceptor_meta *self, SEL);
void __cdecl +[GADMRAIDInterceptor setInterstitialImplementationPath:](struct GADMRAIDInterceptor *self, SEL, id);
id __cdecl +[GADMRAIDInterceptor interstitialImplementationPath](struct GADMRAIDInterceptor_meta *self, SEL);
void __cdecl +[GADMRAIDInterceptor setExpandedBannerImplementationPath:](struct GADMRAIDInterceptor *self, SEL, id);
id __cdecl +[GADMRAIDInterceptor expandedBannerImplementationPath](struct GADMRAIDInterceptor_meta *self, SEL);
id __cdecl +[GADMRAIDInterceptor refererURLFromRequest:](struct GADMRAIDInterceptor *self, SEL, id);
char __cdecl +[GADMRAIDInterceptor shouldRedirectForMRAID:](struct GADMRAIDInterceptor *self, SEL, id);
char __cdecl +[GADMRAIDInterceptor canInitWithRequest:](struct GADMRAIDInterceptor *self, SEL, id);
id __cdecl +[GADMRAIDInterceptor canonicalRequestForRequest:](struct GADMRAIDInterceptor *self, SEL, id);
id __cdecl -[GADMRAIDInterceptor initWithRequest:cachedResponse:client:](struct GADMRAIDInterceptor *self, SEL, id, id, id);
void __cdecl -[GADMRAIDInterceptor startLoading](struct GADMRAIDInterceptor *self, SEL);
char __cdecl +[GADMRAIDInterceptor isAllowed](struct GADMRAIDInterceptor_meta *self, SEL);
void __cdecl +[GADMRAIDInterceptor resetToDefaultPaths](struct GADMRAIDInterceptor_meta *self, SEL);
void __cdecl +[GADMRAIDInterceptor resetCanInitWithRequestCounter](struct GADMRAIDInterceptor_meta *self, SEL);
id __cdecl -[GADMRAIDInterceptor mraidLocationToLoad](struct GADMRAIDInterceptor *self, SEL);
void __cdecl -[GADMRAIDInterceptor setMraidLocationToLoad:](struct GADMRAIDInterceptor *self, SEL, id);
void __cdecl -[GADMRAIDInterceptor .cxx_destruct](struct GADMRAIDInterceptor *self, SEL);
void __cdecl +[GADAdURLStash add:forView:](struct GADAdURLStash *self, SEL, id, id);
void __cdecl +[GADAdURLStash remove:](struct GADAdURLStash *self, SEL, id);
id __cdecl +[GADAdURLStash viewForURL:](struct GADAdURLStash *self, SEL, id);
char __cdecl +[GADAdURLStash hasStashedURLs](struct GADAdURLStash_meta *self, SEL);
id __cdecl +[GADAdURLStash canonicalURLForURL:](struct GADAdURLStash *self, SEL, id);
struct __CFDictionary *__cdecl +[GADAdURLStash urlStash](struct GADAdURLStash_meta *self, SEL);
void sub_1DCE34();
id __cdecl +[GADAdURLStash urlStashLock](struct GADAdURLStash_meta *self, SEL);
void __fastcall sub_1DCEF0(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[GADNativeContentAdView initWithCoder:](struct GADNativeContentAdView *self, SEL, id);
id __cdecl -[GADNativeContentAdView initWithFrame:](struct GADNativeContentAdView *self, SEL, struct CGRect);
void __cdecl -[GADNativeContentAdView commonInit](struct GADNativeContentAdView *self, SEL);
void __cdecl -[GADNativeContentAdView setNativeContentAd:](struct GADNativeContentAdView *self, SEL, id);
id __cdecl -[GADNativeContentAdView nativeContentAd](struct GADNativeContentAdView *self, SEL);
void __cdecl -[GADNativeContentAdView layoutSubviews](struct GADNativeContentAdView *self, SEL);
void __cdecl -[GADNativeContentAdView didMoveToSuperview](struct GADNativeContentAdView *self, SEL);
void __cdecl -[GADNativeContentAdView setHeadlineView:](struct GADNativeContentAdView *self, SEL, id);
void __cdecl -[GADNativeContentAdView setBodyView:](struct GADNativeContentAdView *self, SEL, id);
void __cdecl -[GADNativeContentAdView setCallToActionView:](struct GADNativeContentAdView *self, SEL, id);
void __cdecl -[GADNativeContentAdView setAdvertiserView:](struct GADNativeContentAdView *self, SEL, id);
void __cdecl -[GADNativeContentAdView setImageView:](struct GADNativeContentAdView *self, SEL, id);
void __cdecl -[GADNativeContentAdView setLogoView:](struct GADNativeContentAdView *self, SEL, id);
id __cdecl -[GADNativeContentAdView headlineView](struct GADNativeContentAdView *self, SEL);
id __cdecl -[GADNativeContentAdView bodyView](struct GADNativeContentAdView *self, SEL);
id __cdecl -[GADNativeContentAdView imageView](struct GADNativeContentAdView *self, SEL);
id __cdecl -[GADNativeContentAdView logoView](struct GADNativeContentAdView *self, SEL);
id __cdecl -[GADNativeContentAdView callToActionView](struct GADNativeContentAdView *self, SEL);
id __cdecl -[GADNativeContentAdView advertiserView](struct GADNativeContentAdView *self, SEL);
void __cdecl -[GADNativeContentAdView .cxx_destruct](struct GADNativeContentAdView *self, SEL);
id __cdecl +[GADMUtilities mediationURLFrom:adLocationID:adNetworkRefresh:allocationID:adNetworkID:qData:sessionID:sequenceNumber:exitCodes:durations:](struct GADMUtilities *self, SEL, id, id, char, id, id, id, id, id, id, id);
id __cdecl -[GADSession init](struct GADSession *self, SEL);
id __cdecl -[GADSession uniqueID](struct GADSession *self, SEL);
void __cdecl -[GADSession .cxx_destruct](struct GADSession *self, SEL);
void __cdecl -[GADSupplementalAdAppViewController finishAppearing](struct GADSupplementalAdAppViewController *self, SEL);
void __cdecl -[GADSupplementalAdAppViewController finishDismissal](struct GADSupplementalAdAppViewController *self, SEL);
void __cdecl -[GADSupplementalAdAppViewController viewDidDisappear:](struct GADSupplementalAdAppViewController *self, SEL, char);
void __cdecl -[GADSupplementalAdAppViewController viewDidAppear:](struct GADSupplementalAdAppViewController *self, SEL, char);
id __cdecl +[GADInAppPurchaseTransactionReporter sharedInstance](struct GADInAppPurchaseTransactionReporter_meta *self, SEL);
void __fastcall sub_1DDFA8(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[GADInAppPurchaseTransactionReporter dealloc](struct GADInAppPurchaseTransactionReporter *self, SEL);
void __cdecl -[GADInAppPurchaseTransactionReporter enableReporting](struct GADInAppPurchaseTransactionReporter *self, SEL);
void __cdecl -[GADInAppPurchaseTransactionReporter disableReporting](struct GADInAppPurchaseTransactionReporter *self, SEL);
char __cdecl -[GADInAppPurchaseTransactionReporter shouldBeEnabled](struct GADInAppPurchaseTransactionReporter *self, SEL);
char __cdecl -[GADInAppPurchaseTransactionReporter wasDisabled](struct GADInAppPurchaseTransactionReporter *self, SEL);
void __cdecl -[GADInAppPurchaseTransactionReporter reportTransactionsFromArray:](struct GADInAppPurchaseTransactionReporter *self, SEL, id);
void *__fastcall sub_1DE7EC(int a1);
int __fastcall sub_1DE80C(int a1, int a2);
void __fastcall sub_1DE834(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADInAppPurchaseTransactionReporter reportTransactionsFromArray:sharedParameters:](struct GADInAppPurchaseTransactionReporter *self, SEL, id, id);
void __cdecl -[GADInAppPurchaseTransactionReporter paymentQueue:updatedTransactions:](struct GADInAppPurchaseTransactionReporter *self, SEL, id, id);
void *__fastcall sub_1DF548(int a1);
int __fastcall sub_1DF564(int a1, int a2);
void __fastcall sub_1DF584(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void *__fastcall sub_1DF5A4(int a1);
int __fastcall sub_1DF5C0(int a1, int a2);
void __fastcall sub_1DF5E0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_1DF600(int a1, int a2, void *a3, int a4, struct objc_object *a5);
int __fastcall sub_1DF66C(int a1, int a2);
void __fastcall sub_1DF674(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
signed int __fastcall sub_1DF67C(int a1, int a2);
int __fastcall sub_1DF73C(int a1, char a2);
id __cdecl +[GADMessageComposeDelegateProxy associatedDelegateProxyForController:](struct GADMessageComposeDelegateProxy *self, SEL, id);
id __cdecl -[GADMessageComposeDelegateProxy init](struct GADMessageComposeDelegateProxy *self, SEL);
id __cdecl -[GADMessageComposeDelegateProxy initInternal](struct GADMessageComposeDelegateProxy *self, SEL);
void __cdecl -[GADMessageComposeDelegateProxy setMessageComposeViewController:](struct GADMessageComposeDelegateProxy *self, SEL, id);
void __cdecl -[GADMessageComposeDelegateProxy messageComposeViewController:didFinishWithResult:](struct GADMessageComposeDelegateProxy *self, SEL, id, int);
void *__fastcall sub_1DFA3C(int a1);
int __fastcall sub_1DFA50(int a1, int a2);
void __fastcall sub_1DFA58(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_1DFA60(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1DFAB0(int a1, int a2);
void __fastcall sub_1DFADC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADMessageComposeDelegateProxy stopProxying](struct GADMessageComposeDelegateProxy *self, SEL);
id __cdecl -[GADMessageComposeDelegateProxy messageComposeDelegate](struct GADMessageComposeDelegateProxy *self, SEL);
void __cdecl -[GADMessageComposeDelegateProxy setMessageComposeDelegate:](struct GADMessageComposeDelegateProxy *self, SEL, id);
id __cdecl -[GADMessageComposeDelegateProxy messageComposeViewController](struct GADMessageComposeDelegateProxy *self, SEL);
void __cdecl -[GADMessageComposeDelegateProxy .cxx_destruct](struct GADMessageComposeDelegateProxy *self, SEL);
id __cdecl +[GADVideoPlayerGMSGHandler actionBlockDictionary](struct GADVideoPlayerGMSGHandler_meta *self, SEL);
void sub_1DFC28();
void __fastcall sub_1DFCD0(int a1, void *a2, int a3, int a4, struct objc_object *a5);
id __cdecl +[GADVideoPlayerGMSGHandler subActionBlockDictionary](struct GADVideoPlayerGMSGHandler_meta *self, SEL);
char *sub_1DFD54();
void __fastcall sub_1E0088(int a1, void *a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_1E00C8(int a1, void *a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_1E0108(int a1, void *a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_1E0148(int a1, void *a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_1E0188(int a1, void *a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_1E01C8(int a1, void *a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_1E0208(int a1, void *a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_1E0248(int a1, void *a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_1E0288(int a1, void *a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_1E02C8(int a1, void *a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_1E0308(int a1, void *a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[GADVideoPlayerGMSGHandler didReceiveVideoAction:](struct GADVideoPlayerGMSGHandler *self, SEL, id);
void __cdecl -[GADVideoPlayerGMSGHandler didReceivePositionVideoAction:](struct GADVideoPlayerGMSGHandler *self, SEL, id);
void __cdecl -[GADVideoPlayerGMSGHandler didReceiveNewVideoAction:](struct GADVideoPlayerGMSGHandler *self, SEL, id);
void __cdecl -[GADVideoPlayerGMSGHandler didReceiveSetVideoSourceAction:](struct GADVideoPlayerGMSGHandler *self, SEL, id);
void __cdecl -[GADVideoPlayerGMSGHandler didReceiveHideVideoAction:](struct GADVideoPlayerGMSGHandler *self, SEL, id);
void __cdecl -[GADVideoPlayerGMSGHandler didReceiveShowVideoAction:](struct GADVideoPlayerGMSGHandler *self, SEL, id);
void __cdecl -[GADVideoPlayerGMSGHandler didReceiveMutedVideoAction:](struct GADVideoPlayerGMSGHandler *self, SEL, id);
void __cdecl -[GADVideoPlayerGMSGHandler didReceiveSetVolumeAction:](struct GADVideoPlayerGMSGHandler *self, SEL, id);
void __cdecl -[GADVideoPlayerGMSGHandler didReceiveLoadVideoAction:](struct GADVideoPlayerGMSGHandler *self, SEL, id);
void __cdecl -[GADVideoPlayerGMSGHandler didReceivePlayVideoAction:](struct GADVideoPlayerGMSGHandler *self, SEL, id);
void __cdecl -[GADVideoPlayerGMSGHandler didReceivePauseVideoAction:](struct GADVideoPlayerGMSGHandler *self, SEL, id);
void __cdecl -[GADVideoPlayerGMSGHandler didReceiveSeekToCurrentTimeAction:](struct GADVideoPlayerGMSGHandler *self, SEL, id);
id __cdecl -[GADVideoPlayerGMSGHandler adViewDelegate](struct GADVideoPlayerGMSGHandler *self, SEL);
void __cdecl -[GADVideoPlayerGMSGHandler setAdViewDelegate:](struct GADVideoPlayerGMSGHandler *self, SEL, id);
void __cdecl -[GADVideoPlayerGMSGHandler .cxx_destruct](struct GADVideoPlayerGMSGHandler *self, SEL);
id __cdecl -[GADMAdapterCustomEvents initWithGADMAdNetworkConnector:](struct GADMAdapterCustomEvents *self, SEL, id);
id __cdecl +[GADMAdapterCustomEvents adapterVersion](struct GADMAdapterCustomEvents_meta *self, SEL);
id __cdecl -[GADMAdapterCustomEvents customEventWithCredentials:isInterstitial:](struct GADMAdapterCustomEvents *self, SEL, id, char);
void __cdecl -[GADMAdapterCustomEvents getBannerWithSize:](struct GADMAdapterCustomEvents *self, SEL, struct GADAdSize);
void __cdecl -[GADMAdapterCustomEvents getInterstitial](struct GADMAdapterCustomEvents *self, SEL);
void __cdecl -[GADMAdapterCustomEvents getNativeAdWithAdTypes:options:](struct GADMAdapterCustomEvents *self, SEL, id, id);
void __cdecl -[GADMAdapterCustomEvents stopBeingDelegate](struct GADMAdapterCustomEvents *self, SEL);
char __cdecl -[GADMAdapterCustomEvents isBannerAnimationOK:](struct GADMAdapterCustomEvents *self, SEL, int);
void __cdecl -[GADMAdapterCustomEvents presentInterstitialFromRootViewController:](struct GADMAdapterCustomEvents *self, SEL, id);
Class __cdecl +[GADMAdapterCustomEvents networkExtrasClass](struct GADMAdapterCustomEvents_meta *self, SEL);
void __cdecl -[GADMAdapterCustomEvents dealloc](struct GADMAdapterCustomEvents *self, SEL);
void __cdecl -[GADMAdapterCustomEvents callBackToConnectorWithError:isInterstitial:](struct GADMAdapterCustomEvents *self, SEL, id, char);
void __cdecl -[GADMAdapterCustomEvents customEventBanner:didReceiveAd:](struct GADMAdapterCustomEvents *self, SEL, id, id);
void __cdecl -[GADMAdapterCustomEvents customEventBanner:didFailAd:](struct GADMAdapterCustomEvents *self, SEL, id, id);
void __cdecl -[GADMAdapterCustomEvents customEventBannerWasClicked:](struct GADMAdapterCustomEvents *self, SEL, id);
id __cdecl -[GADMAdapterCustomEvents viewControllerForPresentingModalView](struct GADMAdapterCustomEvents *self, SEL);
void __cdecl -[GADMAdapterCustomEvents customEventBannerWillPresentModal:](struct GADMAdapterCustomEvents *self, SEL, id);
void __cdecl -[GADMAdapterCustomEvents customEventBannerWillDismissModal:](struct GADMAdapterCustomEvents *self, SEL, id);
void __cdecl -[GADMAdapterCustomEvents customEventBannerDidDismissModal:](struct GADMAdapterCustomEvents *self, SEL, id);
void __cdecl -[GADMAdapterCustomEvents customEventBannerWillLeaveApplication:](struct GADMAdapterCustomEvents *self, SEL, id);
void __cdecl -[GADMAdapterCustomEvents customEventInterstitialDidReceiveAd:](struct GADMAdapterCustomEvents *self, SEL, id);
void __cdecl -[GADMAdapterCustomEvents customEventInterstitial:didFailAd:](struct GADMAdapterCustomEvents *self, SEL, id, id);
void __cdecl -[GADMAdapterCustomEvents customEventInterstitialWasClicked:](struct GADMAdapterCustomEvents *self, SEL, id);
void __cdecl -[GADMAdapterCustomEvents customEventInterstitialWillPresent:](struct GADMAdapterCustomEvents *self, SEL, id);
void __cdecl -[GADMAdapterCustomEvents customEventInterstitialWillDismiss:](struct GADMAdapterCustomEvents *self, SEL, id);
void __cdecl -[GADMAdapterCustomEvents customEventInterstitialDidDismiss:](struct GADMAdapterCustomEvents *self, SEL, id);
void __cdecl -[GADMAdapterCustomEvents customEventInterstitialWillLeaveApplication:](struct GADMAdapterCustomEvents *self, SEL, id);
void __cdecl -[GADMAdapterCustomEvents customEventNativeAd:didReceiveMediatedNativeAd:](struct GADMAdapterCustomEvents *self, SEL, id, id);
void __cdecl -[GADMAdapterCustomEvents customEventNativeAd:didFailToLoadWithError:](struct GADMAdapterCustomEvents *self, SEL, id, id);
void __cdecl -[GADMAdapterCustomEvents customEventBanner:clickDidOccurInAd:](struct GADMAdapterCustomEvents *self, SEL, id, id);
void __cdecl -[GADMAdapterCustomEvents customEventInterstitial:didReceiveAd:](struct GADMAdapterCustomEvents *self, SEL, id, id);
id __cdecl -[GADMAdapterCustomEvents connector](struct GADMAdapterCustomEvents *self, SEL);
void __cdecl -[GADMAdapterCustomEvents setConnector:](struct GADMAdapterCustomEvents *self, SEL, id);
id __cdecl -[GADMAdapterCustomEvents customEventBanner](struct GADMAdapterCustomEvents *self, SEL);
void __cdecl -[GADMAdapterCustomEvents setCustomEventBanner:](struct GADMAdapterCustomEvents *self, SEL, id);
id __cdecl -[GADMAdapterCustomEvents customEventInterstitial](struct GADMAdapterCustomEvents *self, SEL);
void __cdecl -[GADMAdapterCustomEvents setCustomEventInterstitial:](struct GADMAdapterCustomEvents *self, SEL, id);
id __cdecl -[GADMAdapterCustomEvents customEventNativeAd](struct GADMAdapterCustomEvents *self, SEL);
void __cdecl -[GADMAdapterCustomEvents setCustomEventNativeAd:](struct GADMAdapterCustomEvents *self, SEL, id);
void __cdecl -[GADMAdapterCustomEvents .cxx_destruct](struct GADMAdapterCustomEvents *self, SEL);
int __fastcall nullsub_77(_DWORD); // weak
id __cdecl -[NSString(GADJSONAdditions) gad_decodedJSONObjectError:](struct NSString *self, SEL, id *);
int __fastcall nullsub_78(_DWORD); // weak
int __cdecl -[GADCustomEventRequest userGender](struct GADCustomEventRequest *self, SEL);
id __cdecl -[GADCustomEventRequest userBirthday](struct GADCustomEventRequest *self, SEL);
char __cdecl -[GADCustomEventRequest userHasLocation](struct GADCustomEventRequest *self, SEL);
float __cdecl -[GADCustomEventRequest userLatitude](struct GADCustomEventRequest *self, SEL);
float __cdecl -[GADCustomEventRequest userLongitude](struct GADCustomEventRequest *self, SEL);
float __cdecl -[GADCustomEventRequest userLocationAccuracyInMeters](struct GADCustomEventRequest *self, SEL);
id __cdecl -[GADCustomEventRequest userLocationDescription](struct GADCustomEventRequest *self, SEL);
id __cdecl -[GADCustomEventRequest userKeywords](struct GADCustomEventRequest *self, SEL);
id __cdecl -[GADCustomEventRequest additionalParameters](struct GADCustomEventRequest *self, SEL);
char __cdecl -[GADCustomEventRequest isTesting](struct GADCustomEventRequest *self, SEL);
void __cdecl -[GADCustomEventRequest .cxx_destruct](struct GADCustomEventRequest *self, SEL);
id __cdecl -[GADCustomEventRequest initWithConnector:](struct GADCustomEventRequest *self, SEL, id);
id __cdecl +[GADDelayPageLoadGMSGHandler actionBlockDictionary](struct GADDelayPageLoadGMSGHandler_meta *self, SEL);
void sub_1E2DE0();
void __fastcall sub_1E2E88(int a1, void *a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[GADDelayPageLoadGMSGHandler init](struct GADDelayPageLoadGMSGHandler *self, SEL);
id __cdecl -[GADDelayPageLoadGMSGHandler initWithDelegate:](struct GADDelayPageLoadGMSGHandler *self, SEL, id);
void __cdecl -[GADDelayPageLoadGMSGHandler delayPageLoadWithArguments:](struct GADDelayPageLoadGMSGHandler *self, SEL, id);
void *__fastcall sub_1E304C(int a1);
int __fastcall sub_1E3068(int a1, int a2);
void __fastcall sub_1E3088(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADDelayPageLoadGMSGHandler handleDelayLoadWithParameters:](struct GADDelayPageLoadGMSGHandler *self, SEL, id);
void __cdecl -[GADDelayPageLoadGMSGHandler .cxx_destruct](struct GADDelayPageLoadGMSGHandler *self, SEL);
int __fastcall nullsub_79(_DWORD); // weak
void __cdecl -[GADRewardBasedVideoAd fetchAdForRequest:withAdUnitID:userID:](struct GADRewardBasedVideoAd *self, SEL, id, id, id);
int __cdecl -[GADRewardBasedVideoAd CSIIdentifier](struct GADRewardBasedVideoAd *self, SEL);
id __cdecl -[GADRewardBasedVideoAd requestParameters](struct GADRewardBasedVideoAd *self, SEL);
int __cdecl -[GADRewardBasedVideoAd requestedAdType](struct GADRewardBasedVideoAd *self, SEL);
void __cdecl -[GADRewardBasedVideoAd loadAdURLWithParameters:](struct GADRewardBasedVideoAd *self, SEL, id);
void __cdecl -[GADRewardBasedVideoAd loadAd:headers:](struct GADRewardBasedVideoAd *self, SEL, id, id);
void __cdecl -[GADRewardBasedVideoAd invalidJavaScriptRequest](struct GADRewardBasedVideoAd *self, SEL);
void __cdecl -[GADRewardBasedVideoAd failedJavaScriptFile](struct GADRewardBasedVideoAd *self, SEL);
void __cdecl -[GADRewardBasedVideoAd adFetcher:didFetchAd:](struct GADRewardBasedVideoAd *self, SEL, id, id);
void __cdecl -[GADRewardBasedVideoAd adFetcher:didFailToFetchAd:withError:responseCode:](struct GADRewardBasedVideoAd *self, SEL, id, id, id, unsigned int);
id __cdecl +[GADPinger sharedInstance](struct GADPinger_meta *self, SEL);
void __fastcall sub_1E3C7C(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[GADPinger init](struct GADPinger *self, SEL);
void __cdecl -[GADPinger pingURLString:completionBlock:](struct GADPinger *self, SEL, id, id);
int __fastcall sub_1E42B4(int a1);
int __fastcall sub_1E42C4(int a1, int a2);
void __fastcall sub_1E42D4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_1E42DC(int a1);
int __fastcall sub_1E42EC(int a1, int a2);
void __fastcall sub_1E42FC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_1E4304(int a1, int a2, int a3, int a4);
int __fastcall sub_1E4420(int a1);
int __fastcall sub_1E4468(int a1, int a2);
void __fastcall sub_1E449C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_1E44C4(int a1, int a2);
void __fastcall sub_1E44F8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADPinger pingRetryURLs](struct GADPinger *self, SEL);
void __fastcall sub_1E465C(int a1, int a2);
void __fastcall sub_1E47B4(int a1, int a2, int a3);
void __fastcall sub_1E49C8(int a1, char a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_1E49D8(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1E4AD0(int a1, int a2);
void __fastcall sub_1E4AF0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_1E4B10(int a1, int a2);
void __fastcall sub_1E4B38(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_1E4B60(int a1, int a2);
void __fastcall sub_1E4B80(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADPinger pingWithRetryGroupKey:URL:retryURLString:](struct GADPinger *self, SEL, id, id, id);
void __fastcall sub_1E4CC0(int a1);
void __fastcall sub_1E4DA0(int a1, char a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1E4DB0(int a1, int a2);
void __fastcall sub_1E4DD0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_1E4DF0(int a1, int a2);
void __fastcall sub_1E4E20(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADPinger start](struct GADPinger *self, SEL);
void *__fastcall sub_1E4F10(int a1);
int __fastcall sub_1E4F24(int a1, int a2);
void __fastcall sub_1E4F2C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADPinger storeRetryURLString:retryGroupKey:](struct GADPinger *self, SEL, id, id);
void __cdecl -[GADPinger .cxx_destruct](struct GADPinger *self, SEL);
int __fastcall nullsub_80(_DWORD); // weak
void __cdecl -[DFPInterstitial recordClick](struct DFPInterstitial *self, SEL);
void __cdecl -[DFPInterstitial recordCustomAdImpression](struct DFPInterstitial *self, SEL);
void __cdecl -[DFPInterstitial finishedRenderingAdView:](struct DFPInterstitial *self, SEL, id);
unsigned int __fastcall sub_1E5300(int a1, unsigned int a2, int a3);
id __cdecl -[GADExtras copyWithZone:](struct GADExtras *self, SEL, struct _NSZone *);
id __cdecl -[GADExtras additionalParameters](struct GADExtras *self, SEL);
void __cdecl -[GADExtras setAdditionalParameters:](struct GADExtras *self, SEL, id);
void __cdecl -[GADExtras .cxx_destruct](struct GADExtras *self, SEL);
id __cdecl -[GADCorrelatorAdLoaderOptions copyWithZone:](struct GADCorrelatorAdLoaderOptions *self, SEL, struct _NSZone *);
id __cdecl -[GADCorrelatorAdLoaderOptions correlator](struct GADCorrelatorAdLoaderOptions *self, SEL);
void __cdecl -[GADCorrelatorAdLoaderOptions setCorrelator:](struct GADCorrelatorAdLoaderOptions *self, SEL, id);
void __cdecl -[GADCorrelatorAdLoaderOptions .cxx_destruct](struct GADCorrelatorAdLoaderOptions *self, SEL);
signed int __fastcall sub_1E55A4(int a1, void *a2, int a3);
id __cdecl -[GADAdLoader initWithAdUnitID:rootViewController:adTypes:options:](struct GADAdLoader *self, SEL, id, id, id, id);
id __cdecl -[GADAdLoader init](struct GADAdLoader *self, SEL);
void __cdecl -[GADAdLoader setDelegate:](struct GADAdLoader *self, SEL, id);
id __cdecl -[GADAdLoader adClassRequestParameters](struct GADAdLoader *self, SEL);
int __fastcall sub_1E5EFC(int a1, int a2);
void __fastcall sub_1E5F10(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_1E5F18(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1E5F54(int a1, int a2);
void __fastcall sub_1E5F7C(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[GADAdLoader setAdClassRequestParameters:](struct GADAdLoader *self, SEL, id);
void __fastcall sub_1E6060(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1E609C(int a1, int a2);
void __fastcall sub_1E60BC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADAdLoader loadRequest:](struct GADAdLoader *self, SEL, id);
void __fastcall sub_1E648C(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1E6510(int a1, int a2);
void __fastcall sub_1E6530(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADAdLoader handleFailedRequestWithRequestError:](struct GADAdLoader *self, SEL, id);
char __cdecl -[GADAdLoader slot:shouldProcessAdResponse:error:](struct GADAdLoader *self, SEL, id, id, id *);
int __fastcall sub_1E6964(int a1, int a2, int a3, int a4);
void __fastcall sub_1E6F98(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1E703C(int a1, int a2);
void __fastcall sub_1E7060(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1E7080(int a1, int a2);
void __fastcall sub_1E70AC(int a1, int a2, int a3, int a4, struct objc_object *a5);
char __cdecl -[GADAdLoader slot:shouldProcessMediatedAdResponse:error:](struct GADAdLoader *self, SEL, id, id, id *);
struct CGRect *__cdecl -[GADAdLoader frame](struct CGRect *__return_ptr __struct_ptr retstr, struct GADAdLoader *self, SEL);
struct CGRect *__cdecl -[GADAdLoader bounds](struct CGRect *__return_ptr __struct_ptr retstr, struct GADAdLoader *self, SEL);
void __cdecl -[GADAdLoader slot:didFailToLoadAdContentWithError:](struct GADAdLoader *self, SEL, id, id);
void __cdecl -[GADAdLoader nativeAdDidFailToLoadRequiredAssets:](struct GADAdLoader *self, SEL, id);
void __cdecl -[GADAdLoader nativeAdDidFinishLoadingAssets:](struct GADAdLoader *self, SEL, id);
id __cdecl -[GADAdLoader delegate](struct GADAdLoader *self, SEL);
id __cdecl -[GADAdLoader adLoaderConfiguration](struct GADAdLoader *self, SEL);
void __cdecl -[GADAdLoader setAdLoaderConfiguration:](struct GADAdLoader *self, SEL, id);
id __cdecl -[GADAdLoader adUnitID](struct GADAdLoader *self, SEL);
id __cdecl -[GADAdLoader rootViewController](struct GADAdLoader *self, SEL);
id __cdecl -[GADAdLoader appEventAdLoaders](struct GADAdLoader *self, SEL);
id __cdecl -[GADAdLoader adPreprocessors](struct GADAdLoader *self, SEL);
id __cdecl -[GADAdLoader nativeAds](struct GADAdLoader *self, SEL);
void __cdecl -[GADAdLoader .cxx_destruct](struct GADAdLoader *self, SEL);
id __cdecl -[GADCustomEventExtras init](struct GADCustomEventExtras *self, SEL);
void __cdecl -[GADCustomEventExtras setExtras:forLabel:](struct GADCustomEventExtras *self, SEL, id, id);
id __cdecl -[GADCustomEventExtras extrasForLabel:](struct GADCustomEventExtras *self, SEL, id);
void __cdecl -[GADCustomEventExtras removeAllExtras](struct GADCustomEventExtras *self, SEL);
id __cdecl -[GADCustomEventExtras allExtras](struct GADCustomEventExtras *self, SEL);
void __cdecl -[GADCustomEventExtras .cxx_destruct](struct GADCustomEventExtras *self, SEL);
int __fastcall nullsub_81(_DWORD); // weak
void __cdecl -[GADSlot updateContentSize:](struct GADSlot *self, SEL, struct CGSize);
id __cdecl -[GADCorrelator init](struct GADCorrelator *self, SEL);
void __cdecl -[GADCorrelator reset](struct GADCorrelator *self, SEL);
int __fastcall sub_1E7A4C(int a1);
int __fastcall sub_1E7A8C(int a1, int a2);
void __fastcall sub_1E7A94(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
unsigned int __cdecl -[GADCorrelator correlationID](struct GADCorrelator *self, SEL);
int __fastcall sub_1E7B58(int a1);
int __fastcall sub_1E7B7C(int a1, int a2);
void __fastcall sub_1E7BA4(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[GADCorrelator .cxx_destruct](struct GADCorrelator *self, SEL);
id __cdecl +[GADInAppPurchaseProductCache sharedInstance](struct GADInAppPurchaseProductCache_meta *self, SEL);
void __fastcall sub_1E7C34(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[GADInAppPurchaseProductCache init](struct GADInAppPurchaseProductCache *self, SEL);
id __cdecl -[GADInAppPurchaseProductCache cachedProductForProductID:](struct GADInAppPurchaseProductCache *self, SEL, id);
int __fastcall sub_1E7EB4(int a1, int a2);
void __fastcall sub_1E7EC8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_1E7ED0(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1E7F28(int a1, int a2);
void __fastcall sub_1E7F58(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[GADInAppPurchaseProductCache requestProductsWithProductIdentifiers:queue:completionHandler:](struct GADInAppPurchaseProductCache *self, SEL, id, id, id);
void __fastcall sub_1E80B8(int a1, int a2, int a3, int a4);
void *__fastcall sub_1E82D8(int a1, int a2);
int __fastcall sub_1E8300(int a1, int a2);
void __fastcall sub_1E8308(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_1E8310(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1E8360(int a1, int a2);
void __fastcall sub_1E8368(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_1E8370(int a1);
int __fastcall sub_1E8388(int a1, int a2);
void __fastcall sub_1E83C0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_1E83F0(int a1, int a2);
void __fastcall sub_1E8424(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADInAppPurchaseProductCache .cxx_destruct](struct GADInAppPurchaseProductCache *self, SEL);
void __fastcall sub_1E84A4(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[GADAdType init](struct GADAdType *self, SEL);
id __cdecl -[GADAdType initWithAdSize:](struct GADAdType *self, SEL, struct GADAdSize);
id __cdecl -[GADAdType initForInterstitial](struct GADAdType *self, SEL);
id __cdecl -[GADAdType initForRewardBasedVideoAd](struct GADAdType *self, SEL);
id __cdecl +[GADAdType bannerAdTypeForSize:](struct GADAdType *self, SEL, struct GADAdSize);
id __cdecl +[GADAdType interstitialAdType](struct GADAdType_meta *self, SEL);
char __cdecl -[GADAdType isEqual:](struct GADAdType *self, SEL, id);
unsigned int __cdecl -[GADAdType hash](struct GADAdType *self, SEL);
char __cdecl -[GADAdType isRewardBasedVideoAd](struct GADAdType *self, SEL);
char __cdecl -[GADAdType isValid](struct GADAdType *self, SEL);
id __cdecl -[GADAdType description](struct GADAdType *self, SEL);
char __cdecl -[GADAdType isInterstitial](struct GADAdType *self, SEL);
struct GADAdSize *__cdecl -[GADAdType adSize](struct GADAdSize *__return_ptr __struct_ptr retstr, struct GADAdType *self, SEL);
void __cdecl -[GADAdType setAdSize:](struct GADAdType *self, SEL, struct GADAdSize);
char __cdecl +[GADWeakReference set:containsObject:](struct GADWeakReference *self, SEL, id, id);
id __cdecl -[GADWeakReference init](struct GADWeakReference *self, SEL);
id __cdecl -[GADWeakReference initWithObject:](struct GADWeakReference *self, SEL, id);
unsigned int __cdecl -[GADWeakReference hash](struct GADWeakReference *self, SEL);
char __cdecl -[GADWeakReference isEqual:](struct GADWeakReference *self, SEL, id);
id __cdecl -[GADWeakReference description](struct GADWeakReference *self, SEL);
id __cdecl -[GADWeakReference weakObject](struct GADWeakReference *self, SEL);
id __cdecl -[GADWeakReference uniqueID](struct GADWeakReference *self, SEL);
void __cdecl -[GADWeakReference .cxx_destruct](struct GADWeakReference *self, SEL);
id __cdecl -[GADCSIConfiguration initWithServiceName:](struct GADCSIConfiguration *self, SEL, id);
id __cdecl -[GADCSIConfiguration init](struct GADCSIConfiguration *self, SEL);
id __cdecl +[GADCSIConfiguration deviceVersionString](struct GADCSIConfiguration_meta *self, SEL);
id __cdecl -[GADCSIConfiguration userAgent](struct GADCSIConfiguration *self, SEL);
void __cdecl -[GADCSIConfiguration setReportingProbability:](struct GADCSIConfiguration *self, SEL, float);
char __cdecl -[GADCSIConfiguration reportingEnabled](struct GADCSIConfiguration *self, SEL);
void __cdecl -[GADCSIConfiguration setReportingEnabled:](struct GADCSIConfiguration *self, SEL, char);
id __cdecl -[GADCSIConfiguration server](struct GADCSIConfiguration *self, SEL);
void __cdecl -[GADCSIConfiguration setServer:](struct GADCSIConfiguration *self, SEL, id);
id __cdecl -[GADCSIConfiguration serviceName](struct GADCSIConfiguration *self, SEL);
void __cdecl -[GADCSIConfiguration setServiceName:](struct GADCSIConfiguration *self, SEL, id);
int __cdecl -[GADCSIConfiguration version](struct GADCSIConfiguration *self, SEL);
void __cdecl -[GADCSIConfiguration setVersion:](struct GADCSIConfiguration *self, SEL, int);
void __cdecl -[GADCSIConfiguration .cxx_destruct](struct GADCSIConfiguration *self, SEL);
int __fastcall sub_1E9764(int result, int _R1, int _R2);
signed int __fastcall sub_1E97DC(int _R0, int _R1, int a3, int _R3, int a5, int a6);
void __fastcall sub_1E9820(int a1, unsigned int a2, unsigned int a3, int a4);
int __fastcall sub_1E9CE8(int a1, int a2, unsigned int a3);
int __fastcall sub_1E9CF0(int a1, int a2, unsigned int a3);
int __fastcall sub_1E9CF8(int result, int a2, int a3, char a4, int a5, int a6, int a7);
int __fastcall sub_1E9D84(int a1, int a2, unsigned int a3);
signed int __fastcall sub_1E9D8C(int a1, int a2, char a3, int a4);
signed int __fastcall sub_1E9DD0(int a1, int a2, int a3);
signed int __fastcall sub_1E9F70(int a1, int a2, int a3, int a4);
int __fastcall sub_1EA1BC(int a1, int a2, int a3);
char *sub_1EA530();
id __fastcall sub_1EAC90(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_1EACE4(int a1, int a2);
int __fastcall sub_1EAD90(int result, int a2, int a3);
signed int __fastcall sub_1EAD9C(int _R0, int _R1, int a3);
void __fastcall sub_1EAF88(int a1, void *a2);
id __cdecl +[GADMailComposeDelegateProxy associatedDelegateProxyForController:](struct GADMailComposeDelegateProxy *self, SEL, id);
id __cdecl -[GADMailComposeDelegateProxy init](struct GADMailComposeDelegateProxy *self, SEL);
id __cdecl -[GADMailComposeDelegateProxy initInternal](struct GADMailComposeDelegateProxy *self, SEL);
void __cdecl -[GADMailComposeDelegateProxy setMailComposeViewController:](struct GADMailComposeDelegateProxy *self, SEL, id);
void __cdecl -[GADMailComposeDelegateProxy mailComposeController:didFinishWithResult:error:](struct GADMailComposeDelegateProxy *self, SEL, id, int, id);
void __fastcall sub_1EB2D4(int a1);
void *__fastcall sub_1EB394(int a1);
int __fastcall sub_1EB3A8(int a1, int a2);
void __fastcall sub_1EB3B0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_1EB3B8(int a1, int a2);
void __fastcall sub_1EB3D8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADMailComposeDelegateProxy stopProxying](struct GADMailComposeDelegateProxy *self, SEL);
id __cdecl -[GADMailComposeDelegateProxy mailComposeDelegate](struct GADMailComposeDelegateProxy *self, SEL);
void __cdecl -[GADMailComposeDelegateProxy setMailComposeDelegate:](struct GADMailComposeDelegateProxy *self, SEL, id);
id __cdecl -[GADMailComposeDelegateProxy mailComposeViewController](struct GADMailComposeDelegateProxy *self, SEL);
void __cdecl -[GADMailComposeDelegateProxy .cxx_destruct](struct GADMailComposeDelegateProxy *self, SEL);
void __cdecl -[GADNativeExpressAdView commonInit](struct GADNativeExpressAdView *self, SEL);
id __cdecl -[GADNativeExpressAdView initWithFrame:adSize:](struct GADNativeExpressAdView *self, SEL, struct CGRect, struct GADAdSize);
id __cdecl -[GADNativeExpressAdView initWithCoder:](struct GADNativeExpressAdView *self, SEL, id);
id __cdecl -[GADNativeExpressAdView initWithFrame:](struct GADNativeExpressAdView *self, SEL, struct CGRect);
id __cdecl -[GADNativeExpressAdView initWithAdSize:](struct GADNativeExpressAdView *self, SEL, struct GADAdSize);
id __cdecl -[GADNativeExpressAdView initWithAdSize:origin:](struct GADNativeExpressAdView *self, SEL, struct GADAdSize, struct CGPoint);
void __cdecl -[GADNativeExpressAdView loadRequest:](struct GADNativeExpressAdView *self, SEL, id);
void __cdecl -[GADNativeExpressAdView setAdUnitID:](struct GADNativeExpressAdView *self, SEL, id);
id __cdecl -[GADNativeExpressAdView adUnitID](struct GADNativeExpressAdView *self, SEL);
void __cdecl -[GADNativeExpressAdView setRootViewController:](struct GADNativeExpressAdView *self, SEL, id);
id __cdecl -[GADNativeExpressAdView rootViewController](struct GADNativeExpressAdView *self, SEL);
void __cdecl -[GADNativeExpressAdView setAdSize:](struct GADNativeExpressAdView *self, SEL, struct GADAdSize);
struct GADAdSize *__cdecl -[GADNativeExpressAdView adSize](struct GADAdSize *__return_ptr __struct_ptr retstr, struct GADNativeExpressAdView *self, SEL);
void __cdecl -[GADNativeExpressAdView setAutoloadEnabled:](struct GADNativeExpressAdView *self, SEL, char);
char __cdecl -[GADNativeExpressAdView isAutoloadEnabled](struct GADNativeExpressAdView *self, SEL);
id __cdecl -[GADNativeExpressAdView adNetworkClassName](struct GADNativeExpressAdView *self, SEL);
void __cdecl -[GADNativeExpressAdView adViewDidReceiveAd:](struct GADNativeExpressAdView *self, SEL, id);
void __cdecl -[GADNativeExpressAdView adView:didFailToReceiveAdWithError:](struct GADNativeExpressAdView *self, SEL, id, id);
void __cdecl -[GADNativeExpressAdView adViewWillPresentScreen:](struct GADNativeExpressAdView *self, SEL, id);
void __cdecl -[GADNativeExpressAdView adViewWillDismissScreen:](struct GADNativeExpressAdView *self, SEL, id);
void __cdecl -[GADNativeExpressAdView adViewDidDismissScreen:](struct GADNativeExpressAdView *self, SEL, id);
void __cdecl -[GADNativeExpressAdView adViewWillLeaveApplication:](struct GADNativeExpressAdView *self, SEL, id);
id __cdecl -[GADNativeExpressAdView delegate](struct GADNativeExpressAdView *self, SEL);
void __cdecl -[GADNativeExpressAdView setDelegate:](struct GADNativeExpressAdView *self, SEL, id);
void __cdecl -[GADNativeExpressAdView .cxx_destruct](struct GADNativeExpressAdView *self, SEL);
void __cdecl -[GADMAdNetworkConnectorBanner getAdFromAdapterWithType:](struct GADMAdNetworkConnectorBanner *self, SEL, id);
void __cdecl -[GADMAdNetworkConnectorBanner adapter:didReceiveAdView:](struct GADMAdNetworkConnectorBanner *self, SEL, id, id);
void __cdecl -[GADMAdNetworkConnectorBanner adapter:didFailAd:](struct GADMAdNetworkConnectorBanner *self, SEL, id, id);
void __cdecl -[GADMAdNetworkConnectorBanner adapterWillPresentFullScreenModal:](struct GADMAdNetworkConnectorBanner *self, SEL, id);
void __cdecl -[GADMAdNetworkConnectorBanner adapterWillDismissFullScreenModal:](struct GADMAdNetworkConnectorBanner *self, SEL, id);
void __cdecl -[GADMAdNetworkConnectorBanner adapterDidDismissFullScreenModal:](struct GADMAdNetworkConnectorBanner *self, SEL, id);
void __cdecl -[GADMAdNetworkConnectorBanner adapterWillLeaveApplication:](struct GADMAdNetworkConnectorBanner *self, SEL, id);
char __cdecl -[GADMAdNetworkConnectorBanner didNetworkReturn](struct GADMAdNetworkConnectorBanner *self, SEL);
void __cdecl -[GADMAdNetworkConnectorBanner setDidNetworkReturn:](struct GADMAdNetworkConnectorBanner *self, SEL, char);
id __cdecl -[GADUnclickableView hitTest:withEvent:](struct GADUnclickableView *self, SEL, struct CGPoint, id);
id __cdecl -[GADTransparentOverlayPresenter init](struct GADTransparentOverlayPresenter *self, SEL);
void __cdecl -[GADTransparentOverlayPresenter dealloc](struct GADTransparentOverlayPresenter *self, SEL);
char __cdecl -[GADTransparentOverlayPresenter isReadyToPresent](struct GADTransparentOverlayPresenter *self, SEL);
void __cdecl -[GADTransparentOverlayPresenter presentFromViewController:completion:](struct GADTransparentOverlayPresenter *self, SEL, id, id);
int __fastcall sub_1EC800(void *a1);
void __cdecl -[GADTransparentOverlayPresenter dismissWithCompletionHandler:](struct GADTransparentOverlayPresenter *self, SEL, id);
void *__fastcall sub_1ECB18(int a1);
int __fastcall sub_1ECB30(int a1, int a2);
void __fastcall sub_1ECB38(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_1ECB40(int a1);
int __fastcall sub_1ECBB0(int a1, int a2);
void __fastcall sub_1ECBE4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[GADTransparentOverlayPresenter presentationViewController](struct GADTransparentOverlayPresenter *self, SEL);
struct CGRect *__cdecl +[GADTransparentOverlayPresenter frameWithSize:centeredInFrame:](struct CGRect *__return_ptr __struct_ptr retstr, struct GADTransparentOverlayPresenter *self, SEL, struct CGSize, struct CGRect);
struct CGAffineTransform *__cdecl -[GADTransparentOverlayPresenter transformForOrientation:](struct CGAffineTransform *__return_ptr __struct_ptr retstr, struct GADTransparentOverlayPresenter *self, SEL, int);
struct CGRect *__cdecl -[GADTransparentOverlayPresenter pivotedApplicationFrameForOrientation:](struct CGRect *__return_ptr __struct_ptr retstr, struct GADTransparentOverlayPresenter *self, SEL, int);
void __cdecl -[GADTransparentOverlayPresenter updateTransparentInterstitialOrientation](struct GADTransparentOverlayPresenter *self, SEL);
void __fastcall sub_1ED2CC(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1ED3C8(int a1, int a2);
void __fastcall sub_1ED3D0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void *__fastcall sub_1ED3D8(int a1);
int __fastcall sub_1ED3F4(int a1, int a2);
void __fastcall sub_1ED3FC(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADTransparentOverlayPresenter composeTransparentInterstitialViewsForPresentation](struct GADTransparentOverlayPresenter *self, SEL);
void __fastcall sub_1EDF48(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1EDF78(int a1, int a2);
int __fastcall sub_1EDF84(int a1);
void __fastcall sub_1EDF8C(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1EE010(int a1, int a2);
int __fastcall sub_1EE01C(int a1);
void __cdecl -[GADTransparentOverlayPresenter animateTransparentInterstitialPresentationWithCompletionHandler:](struct GADTransparentOverlayPresenter *self, SEL, id);
void __fastcall sub_1EE398(int a1);
int __fastcall sub_1EE49C(int a1, int a2);
void __fastcall sub_1EE4A4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_1EE4AC(int a1);
int __fastcall sub_1EE4C0(int a1, int a2);
void __fastcall sub_1EE4D0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[GADTransparentOverlayPresenter presentedViewController](struct GADTransparentOverlayPresenter *self, SEL);
void __cdecl -[GADTransparentOverlayPresenter setPresentedViewController:](struct GADTransparentOverlayPresenter *self, SEL, id);
id __cdecl -[GADTransparentOverlayPresenter pivotView](struct GADTransparentOverlayPresenter *self, SEL);
void __cdecl -[GADTransparentOverlayPresenter setPivotView:](struct GADTransparentOverlayPresenter *self, SEL, id);
id __cdecl -[GADTransparentOverlayPresenter cropView](struct GADTransparentOverlayPresenter *self, SEL);
void __cdecl -[GADTransparentOverlayPresenter setCropView:](struct GADTransparentOverlayPresenter *self, SEL, id);
id __cdecl -[GADTransparentOverlayPresenter orientationChangeListener](struct GADTransparentOverlayPresenter *self, SEL);
void __cdecl -[GADTransparentOverlayPresenter setOrientationChangeListener:](struct GADTransparentOverlayPresenter *self, SEL, id);
id __cdecl -[GADTransparentOverlayPresenter placementDisappearanceObserver](struct GADTransparentOverlayPresenter *self, SEL);
void __cdecl -[GADTransparentOverlayPresenter setPlacementDisappearanceObserver:](struct GADTransparentOverlayPresenter *self, SEL, id);
void __cdecl -[GADTransparentOverlayPresenter .cxx_destruct](struct GADTransparentOverlayPresenter *self, SEL);
void __cdecl -[GADMAdNetworkConnectorInterstitial getAdFromAdapterWithType:](struct GADMAdNetworkConnectorInterstitial *self, SEL, id);
void __cdecl -[GADMAdNetworkConnectorInterstitial adapterDidReceiveInterstitial:](struct GADMAdNetworkConnectorInterstitial *self, SEL, id);
void __cdecl -[GADMAdNetworkConnectorInterstitial adapter:didFailAd:](struct GADMAdNetworkConnectorInterstitial *self, SEL, id, id);
void __cdecl -[GADMAdNetworkConnectorInterstitial adapterWillPresentInterstitial:](struct GADMAdNetworkConnectorInterstitial *self, SEL, id);
void __cdecl -[GADMAdNetworkConnectorInterstitial adapterWillDismissInterstitial:](struct GADMAdNetworkConnectorInterstitial *self, SEL, id);
void __cdecl -[GADMAdNetworkConnectorInterstitial adapterDidDismissInterstitial:](struct GADMAdNetworkConnectorInterstitial *self, SEL, id);
void __cdecl -[GADMAdNetworkConnectorInterstitial adapterWillLeaveApplication:](struct GADMAdNetworkConnectorInterstitial *self, SEL, id);
void __cdecl -[GADMAdNetworkConnectorInterstitial adapter:didReceiveInterstitial:](struct GADMAdNetworkConnectorInterstitial *self, SEL, id, id);
void __cdecl -[GADMAdNetworkConnectorInterstitial adapter:didFailInterstitial:](struct GADMAdNetworkConnectorInterstitial *self, SEL, id, id);
char __cdecl -[GADMAdNetworkConnectorInterstitial calledWillDismissInterstitial](struct GADMAdNetworkConnectorInterstitial *self, SEL);
void __cdecl -[GADMAdNetworkConnectorInterstitial setCalledWillDismissInterstitial:](struct GADMAdNetworkConnectorInterstitial *self, SEL, char);
int __fastcall nullsub_82(_DWORD); // weak
id __cdecl -[NSDictionary(GADJSONAdditions) gad_JSONStringPretty:error:](struct NSDictionary *self, SEL, char, id *);
id __cdecl -[NSDictionary(GADJSONAdditions) gad_JSONSafeDictionary](struct NSDictionary *self, SEL);
void __fastcall sub_1EEF04(int a1, int a2, int a3);
int __fastcall sub_1EF140(int a1, int a2);
int __fastcall sub_1EF16C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4);
id __cdecl -[GADVideoPlayer init](struct GADVideoPlayer *self, SEL);
id __cdecl -[GADVideoPlayer initWithAdView:delegate:](struct GADVideoPlayer *self, SEL, id, id);
void __cdecl -[GADVideoPlayer dealloc](struct GADVideoPlayer *self, SEL);
void __cdecl -[GADVideoPlayer setSourceURL:](struct GADVideoPlayer *self, SEL, id);
void __cdecl -[GADVideoPlayer observePlayer](struct GADVideoPlayer *self, SEL);
void __fastcall sub_1EF990(int a1, int a2, int a3, int a4, struct objc_object *a5, int a6, int a7);
int __fastcall sub_1EF9FC(int a1, int a2);
int __fastcall sub_1EFA08(int a1);
void __cdecl -[GADVideoPlayer stopObservingPlayer](struct GADVideoPlayer *self, SEL);
void __cdecl -[GADVideoPlayer observeValueForKeyPath:ofObject:change:context:](struct GADVideoPlayer *self, SEL, id, id, id, void *);
void __cdecl -[GADVideoPlayer itemDidPlayToEnd:](struct GADVideoPlayer *self, SEL, id);
void __cdecl -[GADVideoPlayer notifyVideoPlayerWithTime:](struct GADVideoPlayer *self, SEL, struct anon_struct_36);
void __cdecl -[GADVideoPlayer notifyVideoReadyToPlay](struct GADVideoPlayer *self, SEL);
void __cdecl -[GADVideoPlayer notifyVideoPlayerWithNewStatus:](struct GADVideoPlayer *self, SEL, int);
void __cdecl -[GADVideoPlayer notifyVideoRateChanged](struct GADVideoPlayer *self, SEL);
void __cdecl -[GADVideoPlayer play](struct GADVideoPlayer *self, SEL);
void __cdecl -[GADVideoPlayer pause](struct GADVideoPlayer *self, SEL);
void __cdecl -[GADVideoPlayer setAudioMixVolume:](struct GADVideoPlayer *self, SEL, float);
void __cdecl -[GADVideoPlayer setMuted:](struct GADVideoPlayer *self, SEL, char);
void __cdecl -[GADVideoPlayer seekToTime:](struct GADVideoPlayer *self, SEL, double);
void __cdecl -[GADVideoPlayer setVolume:](struct GADVideoPlayer *self, SEL, float);
id __cdecl -[GADVideoPlayer delegate](struct GADVideoPlayer *self, SEL);
void __cdecl -[GADVideoPlayer setDelegate:](struct GADVideoPlayer *self, SEL, id);
id __cdecl -[GADVideoPlayer sourceURL](struct GADVideoPlayer *self, SEL);
float __cdecl -[GADVideoPlayer volume](struct GADVideoPlayer *self, SEL);
char __cdecl -[GADVideoPlayer muted](struct GADVideoPlayer *self, SEL);
void __cdecl -[GADVideoPlayer .cxx_destruct](struct GADVideoPlayer *self, SEL);
id __cdecl -[DFPInterstitial correlator](struct DFPInterstitial *self, SEL);
void __cdecl -[DFPInterstitial setCorrelator:](struct DFPInterstitial *self, SEL, id);
char __cdecl -[DFPInterstitial slot:notifyPublisherToRenderCustomRenderingAd:error:](struct DFPInterstitial *self, SEL, id, id, id *);
void __cdecl -[DFPInterstitial presentFromRootViewController:](struct DFPInterstitial *self, SEL, id);
void __cdecl -[DFPInterstitial slot:didReceiveAppEvent:withInfo:](struct DFPInterstitial *self, SEL, id, id, id);
char __cdecl -[DFPInterstitial slotShouldPreemptInProgressRequest:](struct DFPInterstitial *self, SEL, id);
void __cdecl -[DFPInterstitial slot:willLoadAdWithRequest:](struct DFPInterstitial *self, SEL, id, id);
id __cdecl -[DFPInterstitial appEventDelegate](struct DFPInterstitial *self, SEL);
void __cdecl -[DFPInterstitial setAppEventDelegate:](struct DFPInterstitial *self, SEL, id);
id __cdecl -[DFPInterstitial customRenderedInterstitialDelegate](struct DFPInterstitial *self, SEL);
void __cdecl -[DFPInterstitial setCustomRenderedInterstitialDelegate:](struct DFPInterstitial *self, SEL, id);
char __cdecl -[DFPInterstitial isCustomAdRenderingEnabled](struct DFPInterstitial *self, SEL);
void __cdecl -[DFPInterstitial setCustomAdRenderingEnabled:](struct DFPInterstitial *self, SEL, char);
void __cdecl -[DFPInterstitial .cxx_destruct](struct DFPInterstitial *self, SEL);
id __cdecl -[DFPBannerView correlator](struct DFPBannerView *self, SEL);
void __cdecl -[DFPBannerView setCorrelator:](struct DFPBannerView *self, SEL, id);
void __cdecl -[DFPBannerView setEnableManualImpressions:](struct DFPBannerView *self, SEL, char);
char __cdecl -[DFPBannerView enableManualImpressions](struct DFPBannerView *self, SEL);
void __cdecl -[DFPBannerView resize:](struct DFPBannerView *self, SEL, struct GADAdSize);
void __cdecl -[DFPBannerView recordImpression](struct DFPBannerView *self, SEL);
void __cdecl -[DFPBannerView setValidAdSizesWithSizes:](struct DFPBannerView *self, SEL, struct GADAdSize *);
void __cdecl -[DFPBannerView slot:willResizeToAdSize:](struct DFPBannerView *self, SEL, id, struct GADAdSize);
void __cdecl -[DFPBannerView slot:didReceiveAppEvent:withInfo:](struct DFPBannerView *self, SEL, id, id, id);
char __cdecl -[DFPBannerView slot:notifyPublisherToRenderCustomRenderingAd:error:](struct DFPBannerView *self, SEL, id, id, id *);
char __cdecl -[DFPBannerView slotShouldPreemptInProgressRequest:](struct DFPBannerView *self, SEL, id);
void __cdecl -[DFPBannerView slot:willLoadAdWithRequest:](struct DFPBannerView *self, SEL, id, id);
id __cdecl -[DFPBannerView appEventDelegate](struct DFPBannerView *self, SEL);
void __cdecl -[DFPBannerView setAppEventDelegate:](struct DFPBannerView *self, SEL, id);
id __cdecl -[DFPBannerView adSizeDelegate](struct DFPBannerView *self, SEL);
void __cdecl -[DFPBannerView setAdSizeDelegate:](struct DFPBannerView *self, SEL, id);
id __cdecl -[DFPBannerView validAdSizes](struct DFPBannerView *self, SEL);
void __cdecl -[DFPBannerView setValidAdSizes:](struct DFPBannerView *self, SEL, id);
id __cdecl -[DFPBannerView customRenderedBannerViewDelegate](struct DFPBannerView *self, SEL);
void __cdecl -[DFPBannerView setCustomRenderedBannerViewDelegate:](struct DFPBannerView *self, SEL, id);
void __cdecl -[DFPBannerView .cxx_destruct](struct DFPBannerView *self, SEL);
id __cdecl +[GADMAdURLAdapter adapterVersion](struct GADMAdURLAdapter_meta *self, SEL);
Class __cdecl +[GADMAdURLAdapter networkExtrasClass](struct GADMAdURLAdapter_meta *self, SEL);
id __cdecl -[GADMAdURLAdapter init](struct GADMAdURLAdapter *self, SEL);
id __cdecl -[GADMAdURLAdapter initWithGADMAdNetworkConnector:](struct GADMAdURLAdapter *self, SEL, id);
void __cdecl -[GADMAdURLAdapter getBannerWithSize:](struct GADMAdURLAdapter *self, SEL, struct GADAdSize);
void __cdecl -[GADMAdURLAdapter getInterstitial](struct GADMAdURLAdapter *self, SEL);
void __cdecl -[GADMAdURLAdapter getNativeAdWithAdTypes:options:](struct GADMAdURLAdapter *self, SEL, id, id);
void __cdecl -[GADMAdURLAdapter stopBeingDelegate](struct GADMAdURLAdapter *self, SEL);
char __cdecl -[GADMAdURLAdapter isBannerAnimationOK:](struct GADMAdURLAdapter *self, SEL, int);
void __cdecl -[GADMAdURLAdapter presentInterstitialFromRootViewController:](struct GADMAdURLAdapter *self, SEL, id);
void __cdecl -[GADMAdURLAdapter changeAdSizeTo:](struct GADMAdURLAdapter *self, SEL, struct GADAdSize);
void __cdecl -[GADMAdURLAdapter loadRequest](struct GADMAdURLAdapter *self, SEL);
int __cdecl -[GADMAdURLAdapter CSIIdentifier](struct GADMAdURLAdapter *self, SEL);
id __cdecl -[GADMAdURLAdapter requestParameters](struct GADMAdURLAdapter *self, SEL);
int __cdecl -[GADMAdURLAdapter requestedAdType](struct GADMAdURLAdapter *self, SEL);
void __cdecl -[GADMAdURLAdapter loadAdURLWithParameters:](struct GADMAdURLAdapter *self, SEL, id);
void __cdecl -[GADMAdURLAdapter loadAd:headers:](struct GADMAdURLAdapter *self, SEL, id, id);
void __cdecl -[GADMAdURLAdapter invalidJavaScriptRequest](struct GADMAdURLAdapter *self, SEL);
void __cdecl -[GADMAdURLAdapter failedJavaScriptFile](struct GADMAdURLAdapter *self, SEL);
void __cdecl -[GADMAdURLAdapter adViewDidReceiveAd:](struct GADMAdURLAdapter *self, SEL, id);
void __cdecl -[GADMAdURLAdapter adView:didFailToReceiveAdWithError:](struct GADMAdURLAdapter *self, SEL, id, id);
void __cdecl -[GADMAdURLAdapter adViewWillPresentScreen:](struct GADMAdURLAdapter *self, SEL, id);
void __cdecl -[GADMAdURLAdapter adViewWillDismissScreen:](struct GADMAdURLAdapter *self, SEL, id);
void __cdecl -[GADMAdURLAdapter adViewDidDismissScreen:](struct GADMAdURLAdapter *self, SEL, id);
void __cdecl -[GADMAdURLAdapter adViewWillLeaveApplication:](struct GADMAdURLAdapter *self, SEL, id);
void __cdecl -[GADMAdURLAdapter interstitialDidReceiveAd:](struct GADMAdURLAdapter *self, SEL, id);
void __cdecl -[GADMAdURLAdapter interstitial:didFailToReceiveAdWithError:](struct GADMAdURLAdapter *self, SEL, id, id);
void __cdecl -[GADMAdURLAdapter interstitialWillPresentScreen:](struct GADMAdURLAdapter *self, SEL, id);
void __cdecl -[GADMAdURLAdapter interstitialWillDismissScreen:](struct GADMAdURLAdapter *self, SEL, id);
void __cdecl -[GADMAdURLAdapter interstitialDidDismissScreen:](struct GADMAdURLAdapter *self, SEL, id);
void __cdecl -[GADMAdURLAdapter interstitialWillLeaveApplication:](struct GADMAdURLAdapter *self, SEL, id);
void __cdecl -[GADMAdURLAdapter interstitialDidReceiveAdClick:](struct GADMAdURLAdapter *self, SEL, id);
void __cdecl -[GADMAdURLAdapter reportAdLoadFailureWithCode:errorMessage:](struct GADMAdURLAdapter *self, SEL, int, id);
void __cdecl -[GADMAdURLAdapter reportBannerLoadFailureWithCode:errorMessage:](struct GADMAdURLAdapter *self, SEL, int, id);
void __cdecl -[GADMAdURLAdapter reportInterstitialLoadFailureWithCode:errorMessage:](struct GADMAdURLAdapter *self, SEL, int, id);
id __cdecl -[GADMAdURLAdapter banner](struct GADMAdURLAdapter *self, SEL);
void __cdecl -[GADMAdURLAdapter setBanner:](struct GADMAdURLAdapter *self, SEL, id);
id __cdecl -[GADMAdURLAdapter interstitial](struct GADMAdURLAdapter *self, SEL);
void __cdecl -[GADMAdURLAdapter setInterstitial:](struct GADMAdURLAdapter *self, SEL, id);
id __cdecl -[GADMAdURLAdapter connector](struct GADMAdURLAdapter *self, SEL);
void __cdecl -[GADMAdURLAdapter setConnector:](struct GADMAdURLAdapter *self, SEL, id);
id __cdecl -[GADMAdURLAdapter requestID](struct GADMAdURLAdapter *self, SEL);
void __cdecl -[GADMAdURLAdapter setRequestID:](struct GADMAdURLAdapter *self, SEL, id);
char __cdecl -[GADMAdURLAdapter shouldRespondToSDKCore](struct GADMAdURLAdapter *self, SEL);
void __cdecl -[GADMAdURLAdapter setShouldRespondToSDKCore:](struct GADMAdURLAdapter *self, SEL, char);
void __cdecl -[GADMAdURLAdapter .cxx_destruct](struct GADMAdURLAdapter *self, SEL);
id __cdecl -[GADMRAIDResizeOverlayPresenter init](struct GADMRAIDResizeOverlayPresenter *self, SEL);
id __cdecl -[GADMRAIDResizeOverlayPresenter initWithReferenceView:](struct GADMRAIDResizeOverlayPresenter *self, SEL, id);
char __cdecl -[GADMRAIDResizeOverlayPresenter resizePropertiesAreValid:relativeToView:](struct GADMRAIDResizeOverlayPresenter *self, SEL, id, id);
void __cdecl -[GADMRAIDResizeOverlayPresenter setResizeProperties:](struct GADMRAIDResizeOverlayPresenter *self, SEL, id);
struct CGRect *__cdecl +[GADMRAIDResizeOverlayPresenter adjustedContentFrame:inBounds:](struct CGRect *__return_ptr __struct_ptr retstr, struct GADMRAIDResizeOverlayPresenter *self, SEL, struct CGRect, struct CGRect);
struct CGRect *__cdecl -[GADMRAIDResizeOverlayPresenter contentFrame](struct CGRect *__return_ptr __struct_ptr retstr, struct GADMRAIDResizeOverlayPresenter *self, SEL);
void __cdecl -[GADMRAIDResizeOverlayPresenter repositionContentIfNeeded](struct GADMRAIDResizeOverlayPresenter *self, SEL);
void __fastcall sub_1F4940(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1F49C8(int a1, int a2);
int __fastcall sub_1F49F0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4);
void __fastcall sub_1F4A10(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1F4A40(int a1, int a2);
int __fastcall sub_1F4A4C(int a1);
char __cdecl -[GADMRAIDResizeOverlayPresenter isReadyToPresent](struct GADMRAIDResizeOverlayPresenter *self, SEL);
void __cdecl -[GADMRAIDResizeOverlayPresenter composeTransparentInterstitialViewsForPresentation](struct GADMRAIDResizeOverlayPresenter *self, SEL);
void __cdecl -[GADMRAIDResizeOverlayPresenter updateTransparentInterstitialOrientation](struct GADMRAIDResizeOverlayPresenter *self, SEL);
id __cdecl -[GADMRAIDResizeOverlayPresenter resizeProperties](struct GADMRAIDResizeOverlayPresenter *self, SEL);
char __cdecl -[GADMRAIDResizeOverlayPresenter dismissToDefaultState](struct GADMRAIDResizeOverlayPresenter *self, SEL);
void __cdecl -[GADMRAIDResizeOverlayPresenter setDismissToDefaultState:](struct GADMRAIDResizeOverlayPresenter *self, SEL, char);
id __cdecl -[GADMRAIDResizeOverlayPresenter MRAIDEventHandler](struct GADMRAIDResizeOverlayPresenter *self, SEL);
void __cdecl -[GADMRAIDResizeOverlayPresenter setMRAIDEventHandler:](struct GADMRAIDResizeOverlayPresenter *self, SEL, id);
id __cdecl -[GADMRAIDResizeOverlayPresenter referenceView](struct GADMRAIDResizeOverlayPresenter *self, SEL);
void __cdecl -[GADMRAIDResizeOverlayPresenter setReferenceView:](struct GADMRAIDResizeOverlayPresenter *self, SEL, id);
void __cdecl -[GADMRAIDResizeOverlayPresenter .cxx_destruct](struct GADMRAIDResizeOverlayPresenter *self, SEL);
id __cdecl -[DFPRequest copyWithZone:](struct DFPRequest *self, SEL, struct _NSZone *);
id __cdecl -[DFPRequest parameters](struct DFPRequest *self, SEL);
id __cdecl -[DFPRequest publisherProvidedID](struct DFPRequest *self, SEL);
void __cdecl -[DFPRequest setPublisherProvidedID:](struct DFPRequest *self, SEL, id);
id __cdecl -[DFPRequest categoryExclusions](struct DFPRequest *self, SEL);
void __cdecl -[DFPRequest setCategoryExclusions:](struct DFPRequest *self, SEL, id);
id __cdecl -[DFPRequest customTargeting](struct DFPRequest *self, SEL);
void __cdecl -[DFPRequest setCustomTargeting:](struct DFPRequest *self, SEL, id);
void __cdecl -[DFPRequest .cxx_destruct](struct DFPRequest *self, SEL);
id __cdecl +[GADPrecacheGMSGHandler actionBlockDictionary](struct GADPrecacheGMSGHandler_meta *self, SEL);
void sub_1F51D0();
void __fastcall sub_1F5278(int a1, void *a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[GADPrecacheGMSGHandler dealloc](struct GADPrecacheGMSGHandler *self, SEL);
void __cdecl -[GADPrecacheGMSGHandler didReceivePrecacheNotification:](struct GADPrecacheGMSGHandler *self, SEL, id);
void __cdecl -[GADPrecacheGMSGHandler preload](struct GADPrecacheGMSGHandler *self, SEL);
int __cdecl -[GADPrecacheGMSGHandler lastBytesAfterCleanUp](struct GADPrecacheGMSGHandler *self, SEL);
void __cdecl -[GADPrecacheGMSGHandler abort](struct GADPrecacheGMSGHandler *self, SEL);
void __cdecl -[GADPrecacheGMSGHandler dispatchPrecacheEventWithBytesLoaded:totalBytes:event:](struct GADPrecacheGMSGHandler *self, SEL, int, int, id);
void __cdecl -[GADPrecacheGMSGHandler connection:didFailWithError:](struct GADPrecacheGMSGHandler *self, SEL, id, id);
void __cdecl -[GADPrecacheGMSGHandler connection:didReceiveResponse:](struct GADPrecacheGMSGHandler *self, SEL, id, id);
void __cdecl -[GADPrecacheGMSGHandler connection:didReceiveData:](struct GADPrecacheGMSGHandler *self, SEL, id, id);
id __cdecl -[GADPrecacheGMSGHandler connection:willCacheResponse:](struct GADPrecacheGMSGHandler *self, SEL, id, id);
void __cdecl -[GADPrecacheGMSGHandler connectionDidFinishLoading:](struct GADPrecacheGMSGHandler *self, SEL, id);
void __cdecl -[GADPrecacheGMSGHandler .cxx_destruct](struct GADPrecacheGMSGHandler *self, SEL);
int __fastcall nullsub_83(_DWORD); // weak
int __cdecl -[GADSlot state](struct GADSlot *self, SEL);
void __cdecl -[GADSlot setState:](struct GADSlot *self, SEL, int);
void __cdecl -[GADSlot willRequestAdURL](struct GADSlot *self, SEL);
void __cdecl -[GADSlot didFailToRetrieveSDKCoreWithError:](struct GADSlot *self, SEL, id);
void __cdecl -[GADSlot didReceiveAdURL](struct GADSlot *self, SEL);
void __cdecl -[GADSlot willFetchAdContent](struct GADSlot *self, SEL);
void __cdecl -[GADSlot didFetchAdContent](struct GADSlot *self, SEL);
void __cdecl -[GADSlot willProcessMediationResponse](struct GADSlot *self, SEL);
void __cdecl -[GADSlot didFailToReceiveAdWithError:shouldCancelPendingActions:](struct GADSlot *self, SEL, id, char);
void __cdecl -[GADSlot didReceiveInvalidAd](struct GADSlot *self, SEL);
void __cdecl -[GADSlot didReceiveValidAd](struct GADSlot *self, SEL);
void __cdecl -[GADSlot willStartAdRendering](struct GADSlot *self, SEL);
void __cdecl -[GADSlot willLoadAdHTMLInWebView](struct GADSlot *self, SEL);
void __cdecl -[GADSlot didLoadAdHTMLInWebView](struct GADSlot *self, SEL);
void __cdecl -[GADSlot didMakeAdImpression](struct GADSlot *self, SEL);
void __cdecl -[GADSlot willLeaveAppDueToClick](struct GADSlot *self, SEL);
void __cdecl -[GADSlot resetState](struct GADSlot *self, SEL);
void __cdecl -[GADSlot invalidateState](struct GADSlot *self, SEL);
int __fastcall nullsub_84(_DWORD); // weak
void __cdecl -[GADSlot loadAdNetworkJavaScriptRequest:](struct GADSlot *self, SEL, id);
id __cdecl -[GADAdNetworkJavaScriptAdViewDelegate initWithSlot:passbackURL:](struct GADAdNetworkJavaScriptAdViewDelegate *self, SEL, id, id);
id __cdecl -[GADAdNetworkJavaScriptAdViewDelegate initWithSlot:](struct GADAdNetworkJavaScriptAdViewDelegate *self, SEL, id);
char __cdecl -[GADAdNetworkJavaScriptAdViewDelegate isPassbackRequest:](struct GADAdNetworkJavaScriptAdViewDelegate *self, SEL, id);
void __cdecl -[GADAdNetworkJavaScriptAdViewDelegate startRenderingTimerForAdView:](struct GADAdNetworkJavaScriptAdViewDelegate *self, SEL, id);
void __cdecl -[GADAdNetworkJavaScriptAdViewDelegate stopRenderingTimer](struct GADAdNetworkJavaScriptAdViewDelegate *self, SEL);
char __cdecl -[GADAdNetworkJavaScriptAdViewDelegate adView:shouldStartLoadWithRequest:navigationType:](struct GADAdNetworkJavaScriptAdViewDelegate *self, SEL, id, id, int);
void __cdecl -[GADAdNetworkJavaScriptAdViewDelegate adViewDidFinishLoad:](struct GADAdNetworkJavaScriptAdViewDelegate *self, SEL, id);
void __cdecl -[GADAdNetworkJavaScriptAdViewDelegate adViewDidRenderContent:](struct GADAdNetworkJavaScriptAdViewDelegate *self, SEL, id);
void *__fastcall sub_1F78C0(int a1);
int __fastcall sub_1F7920(int a1, int a2);
void __fastcall sub_1F7940(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADAdNetworkJavaScriptAdViewDelegate adViewDidFailToRenderContent:](struct GADAdNetworkJavaScriptAdViewDelegate *self, SEL, id);
id __cdecl -[GADAdNetworkJavaScriptAdViewDelegate passbackURL](struct GADAdNetworkJavaScriptAdViewDelegate *self, SEL);
void __cdecl -[GADAdNetworkJavaScriptAdViewDelegate setPassbackURL:](struct GADAdNetworkJavaScriptAdViewDelegate *self, SEL, id);
char __cdecl -[GADAdNetworkJavaScriptAdViewDelegate wasPassbackReceived](struct GADAdNetworkJavaScriptAdViewDelegate *self, SEL);
void __cdecl -[GADAdNetworkJavaScriptAdViewDelegate setWasPassbackReceived:](struct GADAdNetworkJavaScriptAdViewDelegate *self, SEL, char);
void __cdecl -[GADAdNetworkJavaScriptAdViewDelegate .cxx_destruct](struct GADAdNetworkJavaScriptAdViewDelegate *self, SEL);
int sub_1F7AC0();
void sub_1F7B58();
id __cdecl +[GADAbsoluteTime absoluteTimeInMilliseconds](struct GADAbsoluteTime_meta *self, SEL);
id __cdecl +[GADViewUtilities positionOfView:inScreen:](struct GADViewUtilities *self, SEL, id, id);
id __cdecl -[GADNativeAppInstallAdView initWithCoder:](struct GADNativeAppInstallAdView *self, SEL, id);
id __cdecl -[GADNativeAppInstallAdView initWithFrame:](struct GADNativeAppInstallAdView *self, SEL, struct CGRect);
void __cdecl -[GADNativeAppInstallAdView commonInit](struct GADNativeAppInstallAdView *self, SEL);
void __cdecl -[GADNativeAppInstallAdView setNativeAppInstallAd:](struct GADNativeAppInstallAdView *self, SEL, id);
id __cdecl -[GADNativeAppInstallAdView nativeAppInstallAd](struct GADNativeAppInstallAdView *self, SEL);
void __cdecl -[GADNativeAppInstallAdView layoutSubviews](struct GADNativeAppInstallAdView *self, SEL);
void __cdecl -[GADNativeAppInstallAdView didMoveToSuperview](struct GADNativeAppInstallAdView *self, SEL);
void __cdecl -[GADNativeAppInstallAdView setHeadlineView:](struct GADNativeAppInstallAdView *self, SEL, id);
void __cdecl -[GADNativeAppInstallAdView setCallToActionView:](struct GADNativeAppInstallAdView *self, SEL, id);
void __cdecl -[GADNativeAppInstallAdView setIconView:](struct GADNativeAppInstallAdView *self, SEL, id);
void __cdecl -[GADNativeAppInstallAdView setBodyView:](struct GADNativeAppInstallAdView *self, SEL, id);
void __cdecl -[GADNativeAppInstallAdView setStoreView:](struct GADNativeAppInstallAdView *self, SEL, id);
void __cdecl -[GADNativeAppInstallAdView setPriceView:](struct GADNativeAppInstallAdView *self, SEL, id);
void __cdecl -[GADNativeAppInstallAdView setImageView:](struct GADNativeAppInstallAdView *self, SEL, id);
void __cdecl -[GADNativeAppInstallAdView setStarRatingView:](struct GADNativeAppInstallAdView *self, SEL, id);
id __cdecl -[GADNativeAppInstallAdView headlineView](struct GADNativeAppInstallAdView *self, SEL);
id __cdecl -[GADNativeAppInstallAdView callToActionView](struct GADNativeAppInstallAdView *self, SEL);
id __cdecl -[GADNativeAppInstallAdView iconView](struct GADNativeAppInstallAdView *self, SEL);
id __cdecl -[GADNativeAppInstallAdView bodyView](struct GADNativeAppInstallAdView *self, SEL);
id __cdecl -[GADNativeAppInstallAdView storeView](struct GADNativeAppInstallAdView *self, SEL);
id __cdecl -[GADNativeAppInstallAdView priceView](struct GADNativeAppInstallAdView *self, SEL);
id __cdecl -[GADNativeAppInstallAdView imageView](struct GADNativeAppInstallAdView *self, SEL);
id __cdecl -[GADNativeAppInstallAdView starRatingView](struct GADNativeAppInstallAdView *self, SEL);
void __cdecl -[GADNativeAppInstallAdView .cxx_destruct](struct GADNativeAppInstallAdView *self, SEL);
id __cdecl -[GADBannerAd initWithDictionary:](struct GADBannerAd *self, SEL, id);
id __cdecl -[GADInterstitialViewController initWithSlot:](struct GADInterstitialViewController *self, SEL, id);
id __cdecl -[GADInterstitialViewController initWithAdView:](struct GADInterstitialViewController *self, SEL, id);
void __cdecl -[GADInterstitialViewController presentFromViewController:completion:](struct GADInterstitialViewController *self, SEL, id, id);
char __cdecl -[GADInterstitialViewController isLoaded](struct GADInterstitialViewController *self, SEL);
void __cdecl -[GADInterstitialViewController finishAppearing](struct GADInterstitialViewController *self, SEL);
void __cdecl -[GADInterstitialViewController relinquishScreenWithCompletion:](struct GADInterstitialViewController *self, SEL, id);
void __cdecl -[GADInterstitialViewController finishDismissal](struct GADInterstitialViewController *self, SEL);
id __cdecl -[GADInterstitialViewController screenName](struct GADInterstitialViewController *self, SEL);
void __cdecl -[GADInterstitialViewController setScreenName:](struct GADInterstitialViewController *self, SEL, id);
void __cdecl -[GADInterstitialViewController .cxx_destruct](struct GADInterstitialViewController *self, SEL);
id __cdecl -[GADStatistics timingNamed:](struct GADStatistics *self, SEL, id);
void __cdecl -[GADStatistics startTimingNamed:withExplicitEnd:](struct GADStatistics *self, SEL, id, char);
void __cdecl -[GADStatistics endTimingNamed:](struct GADStatistics *self, SEL, id);
void __cdecl -[GADStatistics .cxx_destruct](struct GADStatistics *self, SEL);
void __cdecl -[GADMediatedNativeAd reportImpression](struct GADMediatedNativeAd *self, SEL);
void __cdecl -[GADMediatedNativeAd reportClickOnAssetWithWithName:view:viewController:](struct GADMediatedNativeAd *self, SEL, id, id, id);
void __cdecl -[GADMediatedNativeAd reportMediatedAdRenderedInView:](struct GADMediatedNativeAd *self, SEL, id);
id __cdecl -[GADMediatedNativeAd ad](struct GADMediatedNativeAd *self, SEL);
void __cdecl -[GADMediatedNativeAd setAd:](struct GADMediatedNativeAd *self, SEL, id);
void __cdecl -[GADMediatedNativeAd .cxx_destruct](struct GADMediatedNativeAd *self, SEL);
id __cdecl -[GADSlotStatistics init](struct GADSlotStatistics *self, SEL);
void __cdecl -[GADSlotStatistics setIdentifier:](struct GADSlotStatistics *self, SEL, id);
void __cdecl -[GADSlotStatistics startTimingAdapter](struct GADSlotStatistics *self, SEL);
void __cdecl -[GADSlotStatistics endTimingAdapterWithExitCode:](struct GADSlotStatistics *self, SEL, int);
void __cdecl -[GADSlotStatistics resetTimingAdapters](struct GADSlotStatistics *self, SEL);
id __cdecl -[GADSlotStatistics adapterExitCodesParameter](struct GADSlotStatistics *self, SEL);
id __cdecl -[GADSlotStatistics adapterDurationsParameter](struct GADSlotStatistics *self, SEL);
void __cdecl -[GADSlotStatistics .cxx_destruct](struct GADSlotStatistics *self, SEL);
id __cdecl +[GADMRAIDGMSGHandler actionBlockDictionary](struct GADMRAIDGMSGHandler_meta *self, SEL);
int sub_1F94C4();
void __fastcall sub_1F95C8(int a1, void *a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_1F9608(int a1, void *a2, int a3, int a4, struct objc_object *a5);
id __cdecl +[GADMRAIDGMSGHandler subActionBlockDictionary](struct GADMRAIDGMSGHandler_meta *self, SEL);
int sub_1F968C();
void __fastcall sub_1F980C(int a1, void *a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_1F984C(int a1, void *a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_1F988C(int a1, void *a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_1F98CC(int a1, void *a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[GADMRAIDGMSGHandler initWithOpener:](struct GADMRAIDGMSGHandler *self, SEL, id);
void __cdecl -[GADMRAIDGMSGHandler didReceiveMRAIDLoadNotification:](struct GADMRAIDGMSGHandler *self, SEL, id);
void __cdecl -[GADMRAIDGMSGHandler didReceiveMRAIDNotification:](struct GADMRAIDGMSGHandler *self, SEL, id);
void __cdecl -[GADMRAIDGMSGHandler actionResize:](struct GADMRAIDGMSGHandler *self, SEL, id);
void __cdecl -[GADMRAIDGMSGHandler actionStorePicture:](struct GADMRAIDGMSGHandler *self, SEL, id);
void __cdecl -[GADMRAIDGMSGHandler actionCreateCalendarEvent:](struct GADMRAIDGMSGHandler *self, SEL, id);
void __cdecl -[GADMRAIDGMSGHandler actionSetOrientationProperties:](struct GADMRAIDGMSGHandler *self, SEL, id);
void *__fastcall sub_1FA4E0(int a1);
int __fastcall sub_1FA54C(int a1, int a2);
void __fastcall sub_1FA554(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_1FA55C(int a1);
void *__fastcall sub_1FA5F4(int a1);
int __fastcall sub_1FA610(int a1, int a2);
void __fastcall sub_1FA63C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_1FA65C(int a1, int a2);
void __fastcall sub_1FA688(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_1FA6A8(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1FA7C4(int a1, int a2);
void __fastcall sub_1FA7F0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADMRAIDGMSGHandler MRAIDPicture:didStorePictureWithURL:](struct GADMRAIDGMSGHandler *self, SEL, id, id);
void __cdecl -[GADMRAIDGMSGHandler MRAIDPicture:failedToStorePictureWithURL:message:](struct GADMRAIDGMSGHandler *self, SEL, id, id, id);
void __cdecl -[GADMRAIDGMSGHandler .cxx_destruct](struct GADMRAIDGMSGHandler *self, SEL);
int __fastcall nullsub_85(_DWORD); // weak
id __cdecl -[GADApplication slotStatisticsForSlotID:](struct GADApplication *self, SEL, id);
int __fastcall sub_1FAB94(int a1, int a2);
void __fastcall sub_1FABA8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_1FABB0(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1FACC4(int a1, int a2);
void __fastcall sub_1FACF4(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[GADApplication slotStatisticsDictionary](struct GADApplication *self, SEL);
void __fastcall sub_1FAE24(int a1);
void __fastcall sub_1FAED0(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1FAF74(int a1, int a2);
void __fastcall sub_1FAF7C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_1FAF84(int a1, int a2);
void __fastcall sub_1FAFA4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADApplication willLeaveApplicationDueToClickOnAd:](struct GADApplication *self, SEL, id);
void __fastcall sub_1FB090(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1FB0C8(int a1, int a2);
void __fastcall sub_1FB0E8(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADApplication didBecomeActive](struct GADApplication *self, SEL);
void __fastcall sub_1FB4C4(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1FB518(int a1, int a2);
void __fastcall sub_1FB540(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[GADApplication didNotSendAdStatistics:](struct GADApplication *self, SEL, id);
void __fastcall sub_1FB630(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1FB67C(int a1, int a2);
void __fastcall sub_1FB69C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADApplication incrementTotalAdRequestCount](struct GADApplication *self, SEL);
void __cdecl -[GADApplication decrementTotalAdRequestCount](struct GADApplication *self, SEL);
void __cdecl -[GADApplication incrementTotalAdClickCount](struct GADApplication *self, SEL);
void __cdecl -[GADApplication incrementSequenceNumber](struct GADApplication *self, SEL);
id __cdecl -[GADApplication nextSequenceNumberAsString](struct GADApplication *self, SEL);
void __fastcall sub_1FB9E8(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1FBAB8(int a1, int a2);
int __fastcall sub_1FBAE4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4);
id __cdecl -[GADApplication timeSinceFirstAdRequestInMilliseconds](struct GADApplication *self, SEL);
id __cdecl -[GADApplication nextRequestStatisticsDictionaryForSlot:](struct GADApplication *self, SEL, id);
void __fastcall sub_1FBE5C(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1FC05C(int a1, int a2);
int __fastcall sub_1FC090(int a1, void *a2, struct objc_object *a3, struct objc_object *a4);
id __cdecl -[GADNativeAdViewPolicy initWithAdView:attributionIconAssetName:attributionTextAssetName:](struct GADNativeAdViewPolicy *self, SEL, id, id, id);
void __cdecl -[GADNativeAdViewPolicy dealloc](struct GADNativeAdViewPolicy *self, SEL);
void __cdecl -[GADNativeAdViewPolicy addAttributionViewAndUserInteractionToAdView](struct GADNativeAdViewPolicy *self, SEL);
void __cdecl -[GADNativeAdViewPolicy handleTap:](struct GADNativeAdViewPolicy *self, SEL, id);
id __cdecl -[GADNativeAdViewPolicy tapHandlingEnvironmentWithTapLocation:](struct GADNativeAdViewPolicy *self, SEL, struct CGPoint);
void __cdecl -[GADNativeAdViewPolicy setNativeAd:](struct GADNativeAdViewPolicy *self, SEL, id);
void __cdecl -[GADNativeAdViewPolicy updateOverlay](struct GADNativeAdViewPolicy *self, SEL);
void __cdecl -[GADNativeAdViewPolicy updateAttributionView](struct GADNativeAdViewPolicy *self, SEL);
void __cdecl -[GADNativeAdViewPolicy replaceAssetWithName:withAssetView:weakReferencePointer:](struct GADNativeAdViewPolicy *self, SEL, id, id, id *);
void __cdecl -[GADNativeAdViewPolicy orderViews](struct GADNativeAdViewPolicy *self, SEL);
void __cdecl -[GADNativeAdViewPolicy adViewDidLayoutSubviews](struct GADNativeAdViewPolicy *self, SEL);
void __cdecl -[GADNativeAdViewPolicy adViewDidMoveToSuperview](struct GADNativeAdViewPolicy *self, SEL);
void __cdecl -[GADNativeAdViewPolicy checkForImpression](struct GADNativeAdViewPolicy *self, SEL);
void __cdecl -[GADNativeAdViewPolicy startImpressionMonitoring](struct GADNativeAdViewPolicy *self, SEL);
void __cdecl -[GADNativeAdViewPolicy stopImpressionMonitoring](struct GADNativeAdViewPolicy *self, SEL);
void __cdecl -[GADNativeAdViewPolicy recordImpression](struct GADNativeAdViewPolicy *self, SEL);
void __cdecl -[GADNativeAdViewPolicy activeViewMonitorDidRefresh:](struct GADNativeAdViewPolicy *self, SEL, id);
char __cdecl -[GADNativeAdViewPolicy gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:](struct GADNativeAdViewPolicy *self, SEL, id, id);
id __cdecl -[GADNativeAdViewPolicy delegate](struct GADNativeAdViewPolicy *self, SEL);
void __cdecl -[GADNativeAdViewPolicy setDelegate:](struct GADNativeAdViewPolicy *self, SEL, id);
id __cdecl -[GADNativeAdViewPolicy nativeAd](struct GADNativeAdViewPolicy *self, SEL);
void __cdecl -[GADNativeAdViewPolicy .cxx_destruct](struct GADNativeAdViewPolicy *self, SEL);
id __cdecl -[GADIntermission init](struct GADIntermission *self, SEL);
id __cdecl -[GADIntermission initWithSlot:](struct GADIntermission *self, SEL, id);
void __cdecl -[GADIntermission dealloc](struct GADIntermission *self, SEL);
id __cdecl -[GADIntermission activeParticipants](struct GADIntermission *self, SEL);
void __cdecl -[GADIntermission cleanUpDeallocatedParticipants](struct GADIntermission *self, SEL);
int __fastcall sub_1FE148(int a1, void *a2);
int __fastcall sub_1FE1E8(int a1, int a2);
int __fastcall sub_1FE1F8(int a1);
int __fastcall sub_1FE204(int a1, void *a2);
int __fastcall sub_1FE2A4(int a1, int a2);
int __fastcall sub_1FE2B4(int a1);
void __cdecl -[GADIntermission begin](struct GADIntermission *self, SEL);
void __cdecl -[GADIntermission willEnd](struct GADIntermission *self, SEL);
void __cdecl -[GADIntermission didEnd](struct GADIntermission *self, SEL);
void __cdecl -[GADIntermission addParticipant:](struct GADIntermission *self, SEL, id);
void __cdecl -[GADIntermission participantWillOverrideStatusBarVisibility:](struct GADIntermission *self, SEL, id);
void __cdecl -[GADIntermission participantWillRelinquishScreen:](struct GADIntermission *self, SEL, id);
void __cdecl -[GADIntermission participantDidRelinquishScreen:](struct GADIntermission *self, SEL, id);
void __cdecl -[GADIntermission applicationWillEnterForegroundWithNotification:](struct GADIntermission *self, SEL, id);
int __fastcall sub_1FECF4(int a1);
void __fastcall sub_1FEDC4(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_1FEE74(int a1, int a2);
int __fastcall sub_1FEEA0(int a1);
int __fastcall sub_1FEEC0(int a1, int a2);
int __fastcall sub_1FEEEC(int a1);
void __cdecl -[GADIntermission .cxx_destruct](struct GADIntermission *self, SEL);
struct CGRect *__cdecl -[GADAdViewState frame](struct CGRect *__return_ptr __struct_ptr retstr, struct GADAdViewState *self, SEL);
void __cdecl -[GADAdViewState setFrame:](struct GADAdViewState *self, SEL, struct CGRect);
id __cdecl -[GADAdViewState superview](struct GADAdViewState *self, SEL);
void __cdecl -[GADAdViewState setSuperview:](struct GADAdViewState *self, SEL, id);
id __cdecl -[GADAdViewState delegate](struct GADAdViewState *self, SEL);
void __cdecl -[GADAdViewState setDelegate:](struct GADAdViewState *self, SEL, id);
id __cdecl -[GADAdViewState viewController](struct GADAdViewState *self, SEL);
void __cdecl -[GADAdViewState setViewController:](struct GADAdViewState *self, SEL, id);
void __cdecl -[GADAdViewState .cxx_destruct](struct GADAdViewState *self, SEL);
id __cdecl +[GADAdView webViewCache](struct GADAdView_meta *self, SEL);
void __fastcall sub_1FF10C(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl +[GADAdView cachedWebView](struct GADAdView_meta *self, SEL);
void __cdecl +[GADAdView cacheWebView:](struct GADAdView *self, SEL, id);
id __cdecl +[GADAdView placeholderWindow](struct GADAdView_meta *self, SEL);
id __cdecl -[GADAdView initWithFrame:](struct GADAdView *self, SEL, struct CGRect);
void __cdecl -[GADAdView configureAsInterstitialAdView](struct GADAdView *self, SEL);
void __cdecl -[GADAdView configureAsBannerAdView](struct GADAdView *self, SEL);
void __cdecl -[GADAdView loadHTMLString:baseURL:](struct GADAdView *self, SEL, id, id);
void __cdecl -[GADAdView reset](struct GADAdView *self, SEL);
void __cdecl -[GADAdView dealloc](struct GADAdView *self, SEL);
void __cdecl -[GADAdView saveState](struct GADAdView *self, SEL);
void __cdecl -[GADAdView restoreState](struct GADAdView *self, SEL);
void __cdecl -[GADAdView dispatchSDKEvent:parameters:](struct GADAdView *self, SEL, id, id);
void __fastcall sub_200330(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_200374(int a1, int a2);
void __fastcall sub_2003A0(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[GADAdView setHTMLWindowOrientation:shouldDispatchOrientationChangeEvent:](struct GADAdView *self, SEL, int, char);
void __cdecl -[GADAdView forceRotateToOrientation:](struct GADAdView *self, SEL, int);
void __cdecl -[GADAdView didRotateToOrientation:](struct GADAdView *self, SEL, int);
void __cdecl -[GADAdView alertView:clickedButtonAtIndex:](struct GADAdView *self, SEL, id, int);
void __cdecl -[GADAdView handleGesture:](struct GADAdView *self, SEL, id);
void __cdecl -[GADAdView setURL:forView:](struct GADAdView *self, SEL, id, id);
id __cdecl -[GADAdView stringByEvaluatingJavaScriptFromString:](struct GADAdView *self, SEL, id);
void __cdecl -[GADAdView executeJavaScriptAsynchronouslyFromString:](struct GADAdView *self, SEL, id);
void __cdecl -[GADAdView loadRequest:](struct GADAdView *self, SEL, id);
void __cdecl -[GADAdView goBack](struct GADAdView *self, SEL);
void __cdecl -[GADAdView goForward](struct GADAdView *self, SEL);
void __cdecl -[GADAdView stopLoading](struct GADAdView *self, SEL);
void __cdecl -[GADAdView reload](struct GADAdView *self, SEL);
char __cdecl -[GADAdView gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:](struct GADAdView *self, SEL, id, id);
char __cdecl -[GADAdView gestureRecognizer:shouldReceiveTouch:](struct GADAdView *self, SEL, id, id);
char __cdecl -[GADAdView webView:shouldStartLoadWithRequest:navigationType:](struct GADAdView *self, SEL, id, id, int);
void __cdecl -[GADAdView webViewDidStartLoad:](struct GADAdView *self, SEL, id);
void __cdecl -[GADAdView webViewDidFinishLoad:](struct GADAdView *self, SEL, id);
void __cdecl -[GADAdView webView:didFailLoadWithError:](struct GADAdView *self, SEL, id, id);
id __cdecl -[GADAdView scrollView](struct GADAdView *self, SEL);
void __cdecl -[GADAdView setOpaque:](struct GADAdView *self, SEL, char);
char __cdecl -[GADAdView isOpaque](struct GADAdView *self, SEL);
void __cdecl -[GADAdView setBackgroundColor:](struct GADAdView *self, SEL, id);
id __cdecl -[GADAdView backgroundColor](struct GADAdView *self, SEL);
void __cdecl -[GADAdView setDataDetectorTypes:](struct GADAdView *self, SEL, unsigned int);
unsigned int __cdecl -[GADAdView dataDetectorTypes](struct GADAdView *self, SEL);
char __cdecl -[GADAdView canGoBack](struct GADAdView *self, SEL);
char __cdecl -[GADAdView canGoForward](struct GADAdView *self, SEL);
char __cdecl -[GADAdView isLoading](struct GADAdView *self, SEL);
id __cdecl -[GADAdView request](struct GADAdView *self, SEL);
void __cdecl -[GADAdView layoutSubviews](struct GADAdView *self, SEL);
id __cdecl +[GADAdView JSCommandForNotificationName:userInfo:](struct GADAdView *self, SEL, id, id);
void __cdecl -[GADAdView postJSNotification:userInfo:](struct GADAdView *self, SEL, id, id);
void __fastcall sub_201400(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_201434(int a1, int a2);
void __fastcall sub_201454(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADAdView observeValueForKeyPath:ofObject:change:context:](struct GADAdView *self, SEL, id, id, id, void *);
id __cdecl -[GADAdView viewController](struct GADAdView *self, SEL);
void __cdecl -[GADAdView setViewController:](struct GADAdView *self, SEL, id);
char __cdecl -[GADAdView touched](struct GADAdView *self, SEL);
void __cdecl -[GADAdView setTouched:](struct GADAdView *self, SEL, char);
id __cdecl -[GADAdView adDebugDialog](struct GADAdView *self, SEL);
void __cdecl -[GADAdView setAdDebugDialog:](struct GADAdView *self, SEL, id);
char __cdecl -[GADAdView showDebug](struct GADAdView *self, SEL);
void __cdecl -[GADAdView setShowDebug:](struct GADAdView *self, SEL, char);
int __cdecl -[GADAdView orientation](struct GADAdView *self, SEL);
void __cdecl -[GADAdView setOrientation:](struct GADAdView *self, SEL, int);
id __cdecl -[GADAdView impressionTicketGestureRecognizer](struct GADAdView *self, SEL);
void __cdecl -[GADAdView setImpressionTicketGestureRecognizer:](struct GADAdView *self, SEL, id);
id __cdecl -[GADAdView alertView](struct GADAdView *self, SEL);
void __cdecl -[GADAdView setAlertView:](struct GADAdView *self, SEL, id);
id __cdecl -[GADAdView URL](struct GADAdView *self, SEL);
id __cdecl -[GADAdView delegate](struct GADAdView *self, SEL);
void __cdecl -[GADAdView setDelegate:](struct GADAdView *self, SEL, id);
id __cdecl -[GADAdView videoPlayerLayer](struct GADAdView *self, SEL);
void __cdecl -[GADAdView setVideoPlayerLayer:](struct GADAdView *self, SEL, id);
struct CGRect *__cdecl -[GADAdView cachedVideoPlayerFrame](struct CGRect *__return_ptr __struct_ptr retstr, struct GADAdView *self, SEL);
void __cdecl -[GADAdView setCachedVideoPlayerFrame:](struct GADAdView *self, SEL, struct CGRect);
id __cdecl -[GADAdView videoPlayer](struct GADAdView *self, SEL);
void __cdecl -[GADAdView setVideoPlayer:](struct GADAdView *self, SEL, id);
void __cdecl -[GADAdView .cxx_destruct](struct GADAdView *self, SEL);
id __cdecl -[GADWebViewCacheSet initWithMaxCapacity:](struct GADWebViewCacheSet *self, SEL, unsigned int);
void __cdecl -[GADWebViewCacheSet dealloc](struct GADWebViewCacheSet *self, SEL);
void __cdecl -[GADWebViewCacheSet addObject:](struct GADWebViewCacheSet *self, SEL, id);
void __fastcall sub_201C5C(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_201C94(int a1, int a2);
void __fastcall sub_201CB8(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[GADWebViewCacheSet anyObject](struct GADWebViewCacheSet *self, SEL);
void __cdecl -[GADWebViewCacheSet clearWebView:](struct GADWebViewCacheSet *self, SEL, id);
char __cdecl -[GADWebViewCacheSet webView:shouldStartLoadWithRequest:navigationType:](struct GADWebViewCacheSet *self, SEL, id, id, int);
void __cdecl -[GADWebViewCacheSet webViewDidFinishLoad:](struct GADWebViewCacheSet *self, SEL, id);
void __cdecl -[GADWebViewCacheSet adView:didFailLoadWithError:](struct GADWebViewCacheSet *self, SEL, id, id);
void __cdecl -[GADWebViewCacheSet .cxx_destruct](struct GADWebViewCacheSet *self, SEL);
id __cdecl -[GADNativeAdAttributionView initWithFrame:](struct GADNativeAdAttributionView *self, SEL, struct CGRect);
void __cdecl -[GADNativeAdAttributionView layoutSubviews](struct GADNativeAdAttributionView *self, SEL);
void __cdecl -[GADNativeAdAttributionView setAttribution:](struct GADNativeAdAttributionView *self, SEL, id);
id __cdecl -[GADNativeAdAttributionView iconView](struct GADNativeAdAttributionView *self, SEL);
id __cdecl -[GADNativeAdAttributionView textView](struct GADNativeAdAttributionView *self, SEL);
void __cdecl -[GADNativeAdAttributionView .cxx_destruct](struct GADNativeAdAttributionView *self, SEL);
int __fastcall nullsub_86(_DWORD); // weak
int __fastcall nullsub_87(_DWORD); // weak
void __cdecl -[GADSlot productViewControllerDidFinish:](struct GADSlot *self, SEL, id);
void __cdecl -[GADSlot scheduleSwipeToViewControllerChecker](struct GADSlot *self, SEL);
void __fastcall sub_203074(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_2030A4(int a1, int a2);
int __fastcall sub_2030B0(int a1);
void __cdecl -[GADSlot unscheduleSwipeToViewControllerChecker](struct GADSlot *self, SEL);
void __cdecl -[GADSlot canEnableSwipeToViewController](struct GADSlot *self, SEL);
void __cdecl -[GADSlot enableSwipeToViewController](struct GADSlot *self, SEL);
void __cdecl -[GADSlot disableSwipeToViewController](struct GADSlot *self, SEL);
void __cdecl -[GADSlot setUpAnimationController](struct GADSlot *self, SEL);
void __cdecl -[GADSlot handlePanGesture:](struct GADSlot *self, SEL, id);
void __cdecl -[GADSlot loadStoreProductViewController](struct GADSlot *self, SEL);
char __cdecl -[GADSlot shouldProcessTouch:inView:](struct GADSlot *self, SEL, struct CGPoint, id);
void __fastcall sub_204570(int a1, int a2, int a3, int a4);
int __fastcall sub_20461C(int a1, int a2);
int __fastcall sub_20462C(int a1);
id __cdecl -[GADAnimationContext animatedViewController](struct GADAnimationContext *self, SEL);
void __cdecl -[GADAnimationContext setAnimatedViewController:](struct GADAnimationContext *self, SEL, id);
struct CGRect *__cdecl -[GADAnimationContext animatedViewStartFrame](struct CGRect *__return_ptr __struct_ptr retstr, struct GADAnimationContext *self, SEL);
void __cdecl -[GADAnimationContext setAnimatedViewStartFrame:](struct GADAnimationContext *self, SEL, struct CGRect);
struct CGRect *__cdecl -[GADAnimationContext animatedViewEndFrame](struct CGRect *__return_ptr __struct_ptr retstr, struct GADAnimationContext *self, SEL);
void __cdecl -[GADAnimationContext setAnimatedViewEndFrame:](struct GADAnimationContext *self, SEL, struct CGRect);
struct CGRect *__cdecl -[GADAnimationContext draggableViewStartFrame](struct CGRect *__return_ptr __struct_ptr retstr, struct GADAnimationContext *self, SEL);
void __cdecl -[GADAnimationContext setDraggableViewStartFrame:](struct GADAnimationContext *self, SEL, struct CGRect);
struct CGRect *__cdecl -[GADAnimationContext draggableViewEndFrame](struct CGRect *__return_ptr __struct_ptr retstr, struct GADAnimationContext *self, SEL);
void __cdecl -[GADAnimationContext setDraggableViewEndFrame:](struct GADAnimationContext *self, SEL, struct CGRect);
id __cdecl -[GADAnimationContext draggableViewSnapshot](struct GADAnimationContext *self, SEL);
void __cdecl -[GADAnimationContext setDraggableViewSnapshot:](struct GADAnimationContext *self, SEL, id);
void __cdecl -[GADAnimationContext .cxx_destruct](struct GADAnimationContext *self, SEL);
id __cdecl -[GADViewControllerFullScreenSwipeAnimation init](struct GADViewControllerFullScreenSwipeAnimation *self, SEL);
void __cdecl -[GADViewControllerFullScreenSwipeAnimation animateTransition:](struct GADViewControllerFullScreenSwipeAnimation *self, SEL, id);
void __fastcall sub_204E70(int a1);
int __fastcall sub_204FF8(int a1, int a2);
void __fastcall sub_205000(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void *__fastcall sub_205008(int a1);
int __fastcall sub_20504C(int a1, int a2);
void __fastcall sub_205054(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
char __cdecl -[GADViewControllerFullScreenSwipeAnimation isPresenting](struct GADViewControllerFullScreenSwipeAnimation *self, SEL);
void __cdecl -[GADViewControllerFullScreenSwipeAnimation willAnimatePresentation](struct GADViewControllerFullScreenSwipeAnimation *self, SEL);
void __cdecl -[GADViewControllerFullScreenSwipeAnimation willAnimateDismissal](struct GADViewControllerFullScreenSwipeAnimation *self, SEL);
id __cdecl -[GADViewControllerFullScreenSwipeAnimation animationContextForTopToBottomAnimationPresentationWithTransitionContext:](struct GADViewControllerFullScreenSwipeAnimation *self, SEL, id);
id __cdecl -[GADViewControllerFullScreenSwipeAnimation animationContextForBottomToTopAnimationPresentationWithTransitionContext:](struct GADViewControllerFullScreenSwipeAnimation *self, SEL, id);
id __cdecl -[GADViewControllerFullScreenSwipeAnimation animationContextForTopToBottomAnimationDismissalWithTransitionContext:](struct GADViewControllerFullScreenSwipeAnimation *self, SEL, id);
id __cdecl -[GADViewControllerFullScreenSwipeAnimation animationContextForBottomToTopAnimationDismissalWithTransitionContext:](struct GADViewControllerFullScreenSwipeAnimation *self, SEL, id);
id __cdecl -[GADViewControllerFullScreenSwipeAnimation animationContextForRestoringAnimationToSavedState:](struct GADViewControllerFullScreenSwipeAnimation *self, SEL, id);
char __cdecl -[GADViewControllerFullScreenSwipeAnimation removeDraggableViewAnimationIfInvalidForAnimationContext:](struct GADViewControllerFullScreenSwipeAnimation *self, SEL, id);
double __cdecl -[GADViewControllerFullScreenSwipeAnimation transitionDuration:](struct GADViewControllerFullScreenSwipeAnimation *self, SEL, id);
int __cdecl -[GADViewControllerFullScreenSwipeAnimation direction](struct GADViewControllerFullScreenSwipeAnimation *self, SEL);
void __cdecl -[GADViewControllerFullScreenSwipeAnimation setDirection:](struct GADViewControllerFullScreenSwipeAnimation *self, SEL, int);
float __cdecl -[GADViewControllerFullScreenSwipeAnimation startY](struct GADViewControllerFullScreenSwipeAnimation *self, SEL);
void __cdecl -[GADViewControllerFullScreenSwipeAnimation setStartY:](struct GADViewControllerFullScreenSwipeAnimation *self, SEL, float);
id __cdecl -[GADViewControllerFullScreenSwipeAnimation draggableView](struct GADViewControllerFullScreenSwipeAnimation *self, SEL);
void __cdecl -[GADViewControllerFullScreenSwipeAnimation setDraggableView:](struct GADViewControllerFullScreenSwipeAnimation *self, SEL, id);
double __cdecl -[GADViewControllerFullScreenSwipeAnimation transitionDuration](struct GADViewControllerFullScreenSwipeAnimation *self, SEL);
void __cdecl -[GADViewControllerFullScreenSwipeAnimation setTransitionDuration:](struct GADViewControllerFullScreenSwipeAnimation *self, SEL, double);
struct CGRect *__cdecl -[GADViewControllerFullScreenSwipeAnimation draggableViewEndFrameAfterAnimation](struct CGRect *__return_ptr __struct_ptr retstr, struct GADViewControllerFullScreenSwipeAnimation *self, SEL);
void __cdecl -[GADViewControllerFullScreenSwipeAnimation setDraggableViewEndFrameAfterAnimation:](struct GADViewControllerFullScreenSwipeAnimation *self, SEL, struct CGRect);
struct CGRect *__cdecl -[GADViewControllerFullScreenSwipeAnimation animatedViewFrameBeforeAnimation](struct CGRect *__return_ptr __struct_ptr retstr, struct GADViewControllerFullScreenSwipeAnimation *self, SEL);
void __cdecl -[GADViewControllerFullScreenSwipeAnimation setAnimatedViewFrameBeforeAnimation:](struct GADViewControllerFullScreenSwipeAnimation *self, SEL, struct CGRect);
char __cdecl -[GADViewControllerFullScreenSwipeAnimation draggableViewShownOnPresentation](struct GADViewControllerFullScreenSwipeAnimation *self, SEL);
void __cdecl -[GADViewControllerFullScreenSwipeAnimation setDraggableViewShownOnPresentation:](struct GADViewControllerFullScreenSwipeAnimation *self, SEL, char);
void __cdecl -[GADViewControllerFullScreenSwipeAnimation .cxx_destruct](struct GADViewControllerFullScreenSwipeAnimation *self, SEL);
id __cdecl -[GADNativeContentAd initWithDictionary:options:](struct GADNativeContentAd *self, SEL, id, id);
id __cdecl -[GADNativeContentAd initWithMediatedNativeAd:options:](struct GADNativeContentAd *self, SEL, id, id);
void __cdecl -[GADNativeContentAd setSlot:](struct GADNativeContentAd *self, SEL, id);
id __cdecl -[GADNativeContentAd clickActionTemplateID](struct GADNativeContentAd *self, SEL);
id __cdecl -[GADNativeContentAd requiredAssets](struct GADNativeContentAd *self, SEL);
id __cdecl -[GADNativeContentAd headline](struct GADNativeContentAd *self, SEL);
id __cdecl -[GADNativeContentAd body](struct GADNativeContentAd *self, SEL);
id __cdecl -[GADNativeContentAd images](struct GADNativeContentAd *self, SEL);
void __cdecl -[GADNativeContentAd loadAssetsWithCompletionHandler:](struct GADNativeContentAd *self, SEL, id);
void *__fastcall sub_20737C(int a1, int a2);
int __fastcall sub_2073B0(int a1, int a2);
void __fastcall sub_2073D0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void *__fastcall sub_2073F0(int a1, int a2);
int __fastcall sub_207464(int a1, int a2);
void __fastcall sub_20748C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void *__fastcall sub_2074B4(int a1, int a2);
int __fastcall sub_2074E8(int a1, int a2);
void __fastcall sub_207508(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl +[GADNativeContentAd requiredDelegateProtocol](struct GADNativeContentAd_meta *self, SEL);
id __cdecl +[GADNativeContentAd requestParametersForAdLoader:](struct GADNativeContentAd *self, SEL, id);
void __cdecl -[GADNativeContentAd adLoaderDidReceiveAd:](struct GADNativeContentAd *self, SEL, id);
void __cdecl -[GADNativeContentAd nativeAdViewPolicy:didStartedTrackingView:](struct GADNativeContentAd *self, SEL, id, id);
void __cdecl -[GADNativeContentAd performClickOnView:assetName:environment:](struct GADNativeContentAd *self, SEL, id, id, id);
void __cdecl -[GADNativeContentAd recordImpression](struct GADNativeContentAd *self, SEL);
id __cdecl -[GADNativeContentAd overlayView](struct GADNativeContentAd *self, SEL);
id __cdecl -[GADNativeContentAd logo](struct GADNativeContentAd *self, SEL);
id __cdecl -[GADNativeContentAd callToAction](struct GADNativeContentAd *self, SEL);
id __cdecl -[GADNativeContentAd advertiser](struct GADNativeContentAd *self, SEL);
id __cdecl -[GADNativeContentAd attribution](struct GADNativeContentAd *self, SEL);
void __cdecl -[GADNativeContentAd setAttribution:](struct GADNativeContentAd *self, SEL, id);
void __cdecl -[GADNativeContentAd .cxx_destruct](struct GADNativeContentAd *self, SEL);
int __fastcall nullsub_88(_DWORD); // weak
id __cdecl -[NSHTTPURLResponse(GADHeaderParser) gad_expirationDate](struct NSHTTPURLResponse *self, SEL);
id __cdecl -[NSHTTPURLResponse(GADHeaderParser) gad_dateFromHttpDateString:](struct NSHTTPURLResponse *self, SEL, id);
void __fastcall sub_207E48(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __fastcall sub_207EE0(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[GADMRAIDPicture initWithURL:](struct GADMRAIDPicture *self, SEL, id);
void __cdecl -[GADMRAIDPicture storeInPhotoAlbum](struct GADMRAIDPicture *self, SEL);
void __cdecl -[GADMRAIDPicture alertView:clickedButtonAtIndex:](struct GADMRAIDPicture *self, SEL, id, int);
void __cdecl -[GADMRAIDPicture downloadImageWithURL:](struct GADMRAIDPicture *self, SEL, id);
void __fastcall sub_2083C4(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_208570(int a1, int a2);
void __fastcall sub_208590(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADMRAIDPicture storeImage:](struct GADMRAIDPicture *self, SEL, id);
id __cdecl -[GADMRAIDPicture delegate](struct GADMRAIDPicture *self, SEL);
void __cdecl -[GADMRAIDPicture setDelegate:](struct GADMRAIDPicture *self, SEL, id);
void __cdecl -[GADMRAIDPicture .cxx_destruct](struct GADMRAIDPicture *self, SEL);
void __cdecl +[GADDefaultInAppPurchase enableDefaultPurchaseFlowWithDelegate:](struct GADDefaultInAppPurchase *self, SEL, id);
void __cdecl +[GADDefaultInAppPurchase disableDefaultPurchaseFlow](struct GADDefaultInAppPurchase_meta *self, SEL);
void __cdecl -[GADDefaultInAppPurchase finishTransaction](struct GADDefaultInAppPurchase *self, SEL);
id __cdecl -[GADDefaultInAppPurchase productID](struct GADDefaultInAppPurchase *self, SEL);
void __cdecl -[GADDefaultInAppPurchase setProductID:](struct GADDefaultInAppPurchase *self, SEL, id);
int __cdecl -[GADDefaultInAppPurchase quantity](struct GADDefaultInAppPurchase *self, SEL);
void __cdecl -[GADDefaultInAppPurchase setQuantity:](struct GADDefaultInAppPurchase *self, SEL, int);
id __cdecl -[GADDefaultInAppPurchase paymentTransaction](struct GADDefaultInAppPurchase *self, SEL);
void __cdecl -[GADDefaultInAppPurchase setPaymentTransaction:](struct GADDefaultInAppPurchase *self, SEL, id);
id __cdecl -[GADDefaultInAppPurchase inAppPurchase](struct GADDefaultInAppPurchase *self, SEL);
void __cdecl -[GADDefaultInAppPurchase setInAppPurchase:](struct GADDefaultInAppPurchase *self, SEL, id);
void __cdecl -[GADDefaultInAppPurchase .cxx_destruct](struct GADDefaultInAppPurchase *self, SEL);
int __fastcall nullsub_89(_DWORD); // weak
void __cdecl -[GADSlot beginListeningToDeviceOrientationChangeEvent](struct GADSlot *self, SEL);
void __cdecl -[GADSlot endListeningToDeviceOrientationChangeEvent](struct GADSlot *self, SEL);
void __cdecl -[GADSlot addCreativeOrientationChangeObserver:selector:](struct GADSlot *self, SEL, id, SEL);
void __cdecl -[GADSlot didChangeDeviceOrientation](struct GADSlot *self, SEL);
int __fastcall nullsub_90(_DWORD); // weak
id __cdecl -[UIView(GADMobileAdsAdditions) gad_render](struct UIView *self, SEL);
struct CGRect *__cdecl -[UIView(GADMobileAdsAdditions) gad_visibleBounds](struct CGRect *__return_ptr __struct_ptr retstr, struct UIView *self, SEL);
char __cdecl -[UIView(GADMobileAdsAdditions) gad_supportsOrientations:](struct UIView *self, SEL, unsigned int);
void __cdecl -[UIView(GADMobileAdsAdditions) gad_fillSuperview](struct UIView *self, SEL);
id __cdecl -[GADAdLoaderOptions copyWithZone:](struct GADAdLoaderOptions *self, SEL, struct _NSZone *);
id __cdecl -[GADAdLoaderOptions requestParameters](struct GADAdLoaderOptions *self, SEL);
id __cdecl -[GADMRAIDCalendarProperties initWithDictionary:](struct GADMRAIDCalendarProperties *self, SEL, id);
id __fastcall sub_2094D0(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[GADMRAIDCalendarProperties startTime](struct GADMRAIDCalendarProperties *self, SEL);
id __cdecl -[GADMRAIDCalendarProperties endTime](struct GADMRAIDCalendarProperties *self, SEL);
id __cdecl -[GADMRAIDCalendarProperties summary](struct GADMRAIDCalendarProperties *self, SEL);
id __cdecl -[GADMRAIDCalendarProperties eventDescription](struct GADMRAIDCalendarProperties *self, SEL);
id __cdecl -[GADMRAIDCalendarProperties location](struct GADMRAIDCalendarProperties *self, SEL);
void __cdecl -[GADMRAIDCalendarProperties .cxx_destruct](struct GADMRAIDCalendarProperties *self, SEL);
void *sub_209644();
id __cdecl -[GADSwipeToViewControllerConfigurations init](struct GADSwipeToViewControllerConfigurations *self, SEL);
id __cdecl -[GADSwipeToViewControllerConfigurations initWithSwipeConfigurations:](struct GADSwipeToViewControllerConfigurations *self, SEL, id);
int __fastcall sub_209C10(int a1, int a2);
void __fastcall sub_209C24(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_209C2C(int a1, int a2);
int __fastcall sub_209D80(int a1, int a2);
int __fastcall sub_209D90(int a1);
id __cdecl -[GADSwipeToViewControllerConfigurations swipeableInAppStoreProductID](struct GADSwipeToViewControllerConfigurations *self, SEL);
id __cdecl -[GADSwipeToViewControllerConfigurations swipeableRectangles](struct GADSwipeToViewControllerConfigurations *self, SEL);
int __cdecl -[GADSwipeToViewControllerConfigurations swipeDirection](struct GADSwipeToViewControllerConfigurations *self, SEL);
void __cdecl -[GADSwipeToViewControllerConfigurations setSwipeDirection:](struct GADSwipeToViewControllerConfigurations *self, SEL, int);
char __cdecl -[GADSwipeToViewControllerConfigurations isAdDraggable](struct GADSwipeToViewControllerConfigurations *self, SEL);
void __cdecl -[GADSwipeToViewControllerConfigurations setAdDraggable:](struct GADSwipeToViewControllerConfigurations *self, SEL, char);
double __cdecl -[GADSwipeToViewControllerConfigurations swipeAnimationTransitionDuration](struct GADSwipeToViewControllerConfigurations *self, SEL);
id __cdecl -[GADSwipeToViewControllerConfigurations swipeEventCreativeMetadata](struct GADSwipeToViewControllerConfigurations *self, SEL);
void __cdecl -[GADSwipeToViewControllerConfigurations .cxx_destruct](struct GADSwipeToViewControllerConfigurations *self, SEL);
void __cdecl -[GADOverlayView dealloc](struct GADOverlayView *self, SEL);
void __cdecl -[GADOverlayView setAdView:](struct GADOverlayView *self, SEL, id);
void __cdecl -[GADOverlayView removeOverlaySubview](struct GADOverlayView *self, SEL);
void __cdecl -[GADOverlayView addOverlaySubview](struct GADOverlayView *self, SEL);
void __cdecl -[GADOverlayView loadOverlayWithUserInfo:](struct GADOverlayView *self, SEL, id);
void __cdecl -[GADOverlayView sendMessageToOverlayWithUserInfo:](struct GADOverlayView *self, SEL, id);
void __cdecl -[GADOverlayView handleHideOverlayNotification:](struct GADOverlayView *self, SEL, id);
void __cdecl -[GADOverlayView handleSendMessageToAdViewNotification:](struct GADOverlayView *self, SEL, id);
void __cdecl -[GADOverlayView handleLoadOverlayView:](struct GADOverlayView *self, SEL, id);
void __cdecl -[GADOverlayView handleShowOverlayView:](struct GADOverlayView *self, SEL, id);
void __cdecl -[GADOverlayView handleHideOverlayView:](struct GADOverlayView *self, SEL, id);
void __cdecl -[GADOverlayView handleSendMessageToOverlayView:](struct GADOverlayView *self, SEL, id);
char __cdecl -[GADOverlayView adView:shouldStartLoadWithRequest:navigationType:](struct GADOverlayView *self, SEL, id, id, int);
void __cdecl -[GADOverlayView adViewDidStartLoad:](struct GADOverlayView *self, SEL, id);
void __cdecl -[GADOverlayView adView:didFailLoadWithError:](struct GADOverlayView *self, SEL, id, id);
void __cdecl -[GADOverlayView adViewDidFinishLoad:](struct GADOverlayView *self, SEL, id);
id __cdecl -[GADOverlayView adView](struct GADOverlayView *self, SEL);
void __cdecl -[GADOverlayView .cxx_destruct](struct GADOverlayView *self, SEL);
int __fastcall nullsub_91(_DWORD); // weak
id __cdecl -[GADNativeAd mediatedNativeAdDelegate](struct GADNativeAd *self, SEL);
int __fastcall nullsub_92(_DWORD); // weak
id __cdecl -[GADSlot creativePositionDictionaryForActiveViewBounds:](struct GADSlot *self, SEL, struct CGRect);
void __cdecl -[GADSlot notifyOrientationToMRAIDCreative](struct GADSlot *self, SEL);
void __cdecl -[GADSlot notifyDeviceFeatures](struct GADSlot *self, SEL);
void __cdecl -[GADSlot SDKDidBecomeReady](struct GADSlot *self, SEL);
void __cdecl -[GADSlot MRAIDAdDidLoad](struct GADSlot *self, SEL);
void __cdecl -[GADSlot MRAIDAdDidUnload](struct GADSlot *self, SEL);
void __cdecl -[GADSlot updateVisibility:](struct GADSlot *self, SEL, char);
void __cdecl -[GADSlot updatePositionFromView:](struct GADSlot *self, SEL, id);
void __cdecl -[GADSlot handleError:action:](struct GADSlot *self, SEL, id, id);
int __fastcall nullsub_93(_DWORD); // weak
void __cdecl -[GADAdViewDelegate addGMSGHandler:](struct GADAdViewDelegate *self, SEL, id);
id __cdecl -[GADAdViewDelegate init](struct GADAdViewDelegate *self, SEL);
void __cdecl -[GADAdViewDelegate dealloc](struct GADAdViewDelegate *self, SEL);
void __cdecl -[GADAdViewDelegate handleGMSGURL:adView:](struct GADAdViewDelegate *self, SEL, id, id);
int __fastcall sub_20C254(int a1, int a2);
void __fastcall sub_20C468(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_20C52C(int a1, int a2);
void __fastcall sub_20C54C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_20C56C(int a1, int a2);
void __fastcall sub_20C594(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADAdViewDelegate handleDeeplinkPlusURL:](struct GADAdViewDelegate *self, SEL, id);
char __cdecl -[GADAdViewDelegate adView:shouldStartLoadWithRequest:navigationType:](struct GADAdViewDelegate *self, SEL, id, id, int);
void *__fastcall sub_20D0E4(int a1);
int __fastcall sub_20D104(int a1, int a2);
void __fastcall sub_20D12C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADAdViewDelegate adViewDidFinishLoad:](struct GADAdViewDelegate *self, SEL, id);
id __cdecl -[GADAdViewDelegate opener](struct GADAdViewDelegate *self, SEL);
void __cdecl -[GADAdViewDelegate setOpener:](struct GADAdViewDelegate *self, SEL, id);
char __cdecl -[GADAdViewDelegate hasLoadedAtLeastOnce](struct GADAdViewDelegate *self, SEL);
id __cdecl -[GADAdViewDelegate gmsgHandlers](struct GADAdViewDelegate *self, SEL);
void __cdecl -[GADAdViewDelegate .cxx_destruct](struct GADAdViewDelegate *self, SEL);
void __cdecl -[GADBrowserAdView setViewController:](struct GADBrowserAdView *self, SEL, id);
id __cdecl -[GADBrowserAdView browserViewController](struct GADBrowserAdView *self, SEL);
char __cdecl +[GADInAppPurchase quantityIsValid:](struct GADInAppPurchase *self, SEL, int);
id __cdecl +[GADInAppPurchase stringForStatus:](struct GADInAppPurchase *self, SEL, int);
id __cdecl -[GADInAppPurchase init](struct GADInAppPurchase *self, SEL);
id __cdecl -[GADInAppPurchase initWithViewController:](struct GADInAppPurchase *self, SEL, id);
id __cdecl -[GADInAppPurchase description](struct GADInAppPurchase *self, SEL);
void __cdecl -[GADInAppPurchase setQuantity:](struct GADInAppPurchase *self, SEL, int);
void __cdecl -[GADInAppPurchase reportPurchaseStatus:](struct GADInAppPurchase *self, SEL, int);
void *__fastcall sub_20D9A4(int a1);
int __fastcall sub_20D9BC(int a1, int a2);
void __fastcall sub_20D9C4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[GADInAppPurchase expandedURLStringForURLStringFormat:](struct GADInAppPurchase *self, SEL, id);
void __fastcall sub_20DE74(int a1, int a2, void *a3, int a4, struct objc_object *a5);
int __fastcall sub_20DF0C(int a1, int a2);
void __fastcall sub_20DF14(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADInAppPurchase pingReportingURLStrings:](struct GADInAppPurchase *self, SEL, id);
id __cdecl -[GADInAppPurchase productID](struct GADInAppPurchase *self, SEL);
void __cdecl -[GADInAppPurchase setProductID:](struct GADInAppPurchase *self, SEL, id);
int __cdecl -[GADInAppPurchase quantity](struct GADInAppPurchase *self, SEL);
id __cdecl -[GADInAppPurchase reportingURLStringFormats](struct GADInAppPurchase *self, SEL);
void __cdecl -[GADInAppPurchase setReportingURLStringFormats:](struct GADInAppPurchase *self, SEL, id);
int __cdecl -[GADInAppPurchase purchaseStatus](struct GADInAppPurchase *self, SEL);
void __cdecl -[GADInAppPurchase setPurchaseStatus:](struct GADInAppPurchase *self, SEL, int);
void __cdecl -[GADInAppPurchase .cxx_destruct](struct GADInAppPurchase *self, SEL);
id __cdecl +[GADAppEventGMSGHandler actionBlockDictionary](struct GADAppEventGMSGHandler_meta *self, SEL);
void sub_20E0B0();
void __fastcall sub_20E158(int a1, void *a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[GADAppEventGMSGHandler init](struct GADAppEventGMSGHandler *self, SEL);
id __cdecl -[GADAppEventGMSGHandler initWithSlot:](struct GADAppEventGMSGHandler *self, SEL, id);
void __cdecl -[GADAppEventGMSGHandler didReceiveAppEventNotification:](struct GADAppEventGMSGHandler *self, SEL, id);
id __cdecl -[GADAppEventGMSGHandler slot](struct GADAppEventGMSGHandler *self, SEL);
void __cdecl -[GADAppEventGMSGHandler setSlot:](struct GADAppEventGMSGHandler *self, SEL, id);
void __cdecl -[GADAppEventGMSGHandler .cxx_destruct](struct GADAppEventGMSGHandler *self, SEL);
void __cdecl -[GADCategories linkCategoriesAndClasses](struct GADCategories *self, SEL);
id __fastcall sub_20E534(int a1, int a2, int a3, int a4, struct objc_object *a5);
int sub_20E67C();
id __fastcall sub_20E79C(int a1, int a2, int a3, int a4, struct objc_object *a5);
char *sub_20E938();
id __cdecl -[GADAd init](struct GADAd *self, SEL);
id __cdecl -[GADAd initWithDictionary:](struct GADAd *self, SEL, id);
id __fastcall sub_20F4E0(int a1, int a2);
void __cdecl -[GADAd addClickURLsFromArray:](struct GADAd *self, SEL, id);
void __cdecl -[GADAd addImpressionURLsFromArray:](struct GADAd *self, SEL, id);
void __cdecl -[GADAd addManualImpressionURLsFromArray:](struct GADAd *self, SEL, id);
void __cdecl -[GADAd removeAllImpressionURLs](struct GADAd *self, SEL);
void __cdecl -[GADAd removeAllManualImpressionURLs](struct GADAd *self, SEL);
id __cdecl -[GADAd clickURLs](struct GADAd *self, SEL);
id __cdecl -[GADAd impressionURLs](struct GADAd *self, SEL);
id __cdecl -[GADAd manualImpressionURLs](struct GADAd *self, SEL);
id __cdecl -[GADAd statistics](struct GADAd *self, SEL);
void __cdecl -[GADAd setStatistics:](struct GADAd *self, SEL, id);
id __cdecl -[GADAd adBaseURL](struct GADAd *self, SEL);
void __cdecl -[GADAd setAdBaseURL:](struct GADAd *self, SEL, id);
id __cdecl -[GADAd adHTML](struct GADAd *self, SEL);
void __cdecl -[GADAd setAdHTML:](struct GADAd *self, SEL, id);
id __cdecl -[GADAd adURL](struct GADAd *self, SEL);
void __cdecl -[GADAd setAdURL:](struct GADAd *self, SEL, id);
id __cdecl -[GADAd responseHeaders](struct GADAd *self, SEL);
void __cdecl -[GADAd setResponseHeaders:](struct GADAd *self, SEL, id);
id __cdecl -[GADAd activeViewConfigurations](struct GADAd *self, SEL);
void __cdecl -[GADAd setActiveViewConfigurations:](struct GADAd *self, SEL, id);
id __cdecl -[GADAd swipeToViewControllerConfigurations](struct GADAd *self, SEL);
void __cdecl -[GADAd setSwipeToViewControllerConfigurations:](struct GADAd *self, SEL, id);
unsigned int __cdecl -[GADAd responseType](struct GADAd *self, SEL);
void __cdecl -[GADAd setResponseType:](struct GADAd *self, SEL, unsigned int);
char __cdecl -[GADAd isScrollEnabled](struct GADAd *self, SEL);
void __cdecl -[GADAd setScrollEnabled:](struct GADAd *self, SEL, char);
id __cdecl -[GADAd MRAIDEventHandler](struct GADAd *self, SEL);
void __cdecl -[GADAd setMRAIDEventHandler:](struct GADAd *self, SEL, id);
struct GADAdSize *__cdecl -[GADAd size](struct GADAdSize *__return_ptr __struct_ptr retstr, struct GADAd *self, SEL);
void __cdecl -[GADAd setSize:](struct GADAd *self, SEL, struct GADAdSize);
char __cdecl -[GADAd isFluid](struct GADAd *self, SEL);
void __cdecl -[GADAd setFluid:](struct GADAd *self, SEL, char);
double __cdecl -[GADAd reloadInterval](struct GADAd *self, SEL);
void __cdecl -[GADAd setReloadInterval:](struct GADAd *self, SEL, double);
unsigned int __cdecl -[GADAd supportedOrientations](struct GADAd *self, SEL);
void __cdecl -[GADAd setSupportedOrientations:](struct GADAd *self, SEL, unsigned int);
id __cdecl -[GADAd debugDialog](struct GADAd *self, SEL);
void __cdecl -[GADAd setDebugDialog:](struct GADAd *self, SEL, id);
id __cdecl -[GADAd customAdSizeString](struct GADAd *self, SEL);
void __cdecl -[GADAd setCustomAdSizeString:](struct GADAd *self, SEL, id);
char __cdecl -[GADAd hasAdNetworkJavaScript](struct GADAd *self, SEL);
id __cdecl -[GADAd adNetworkPassbackURL](struct GADAd *self, SEL);
id __cdecl -[GADAd mediationDelegate](struct GADAd *self, SEL);
void __cdecl -[GADAd setMediationDelegate:](struct GADAd *self, SEL, id);
void __cdecl -[GADAd .cxx_destruct](struct GADAd *self, SEL);
int __fastcall sub_20FC3C(int a1, int a2);
void __fastcall sub_20FC50(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_20FC58(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_20FD1C(int a1, int a2);
int __fastcall sub_20FD2C(int a1);
int __cdecl +[GADDefaultGMSGHandler integerForKey:fromDictionary:withDefaultValue:](struct GADDefaultGMSGHandler *self, SEL, id, id, int);
id __cdecl +[GADDefaultGMSGHandler actionBlockDictionary](struct GADDefaultGMSGHandler_meta *self, SEL);
char *sub_20FE24();
void __fastcall sub_210034(int a1, void *a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_210074(int a1, void *a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_2100B4(int a1, void *a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_2100F4(int a1, void *a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_210134(int a1, void *a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_210174(int a1, void *a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[GADDefaultGMSGHandler didReceiveTrackHTTPNotification:](struct GADDefaultGMSGHandler *self, SEL, id);
void __cdecl -[GADDefaultGMSGHandler didReceiveLogNotification:](struct GADDefaultGMSGHandler *self, SEL, id);
void __cdecl -[GADDefaultGMSGHandler didReceiveTouchNotification:](struct GADDefaultGMSGHandler *self, SEL, id);
int *__fastcall sub_21054C(int a1);
void __cdecl -[GADDefaultGMSGHandler didReceiveVibrateNotification:](struct GADDefaultGMSGHandler *self, SEL, id);
void __cdecl -[GADDefaultGMSGHandler didReceiveCanOpenURLsNotification:](struct GADDefaultGMSGHandler *self, SEL, id);
void __fastcall sub_210714(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_2107A0(int a1, int a2);
void __fastcall sub_2107C0(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADDefaultGMSGHandler didReceiveCloseNotification:](struct GADDefaultGMSGHandler *self, SEL, id);
void __cdecl -[GADAdViewTouchGestureRecognizer touchesBegan:withEvent:](struct GADAdViewTouchGestureRecognizer *self, SEL, id, id);
void __cdecl -[GADAdViewTouchGestureRecognizer touchesEnded:withEvent:](struct GADAdViewTouchGestureRecognizer *self, SEL, id, id);
int *__fastcall sub_210B50(int a1);
id __cdecl +[GADGMSGHandler actionBlockDictionary](struct GADGMSGHandler_meta *self, SEL);
char __cdecl -[GADGMSGHandler handleRequest:adView:](struct GADGMSGHandler *self, SEL, id, id);
char __cdecl -[GADGMSGHandler handleNotification:adView:](struct GADGMSGHandler *self, SEL, id, id);
id __cdecl -[GADSchedulerTask block](struct GADSchedulerTask *self, SEL);
void __cdecl -[GADSchedulerTask setBlock:](struct GADSchedulerTask *self, SEL, id);
id __cdecl -[GADSchedulerTask queue](struct GADSchedulerTask *self, SEL);
void __cdecl -[GADSchedulerTask setQueue:](struct GADSchedulerTask *self, SEL, id);
void __cdecl -[GADSchedulerTask .cxx_destruct](struct GADSchedulerTask *self, SEL);
id __cdecl -[GADScheduler init](struct GADScheduler *self, SEL);
id __cdecl -[GADScheduler initWithInterval:](struct GADScheduler *self, SEL, double);
id __cdecl -[GADScheduler description](struct GADScheduler *self, SEL);
int __cdecl -[GADScheduler taskIDScheduledOnQueue:block:](struct GADScheduler *self, SEL, id, id);
void __cdecl -[GADScheduler unscheduleTaskWithID:](struct GADScheduler *self, SEL, int);
void __cdecl -[GADScheduler executeBlocks](struct GADScheduler *self, SEL);
void __fastcall sub_2111EC(int a1, int a2, void *a3, int a4, struct objc_object *a5);
void __cdecl -[GADScheduler start](struct GADScheduler *self, SEL);
void __fastcall sub_211444(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_211474(int a1, int a2);
int __fastcall sub_211480(int a1);
void __cdecl -[GADScheduler stop](struct GADScheduler *self, SEL);
void __cdecl -[GADScheduler .cxx_destruct](struct GADScheduler *self, SEL);
id __cdecl +[GADOpenerGMSGHandler actionBlockDictionary](struct GADOpenerGMSGHandler_meta *self, SEL);
int sub_21155C();
void __fastcall sub_2116A8(int a1, void *a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_2116E8(int a1, void *a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_211728(int a1, void *a2, int a3, int a4, struct objc_object *a5);
id __cdecl +[GADOpenerGMSGHandler subActionBlockDictionary](struct GADOpenerGMSGHandler_meta *self, SEL);
char *sub_2117AC();
void __fastcall sub_211A2C(int a1, void *a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_211A6C(int a1, void *a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_211AAC(int a1, void *a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_211AEC(int a1, void *a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_211B2C(int a1, void *a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_211B6C(int a1, void *a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_211BAC(int a1, void *a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_211BEC(int a1, void *a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[GADOpenerGMSGHandler initWithOpener:](struct GADOpenerGMSGHandler *self, SEL, id);
void __cdecl -[GADOpenerGMSGHandler didReceiveClickNotification:](struct GADOpenerGMSGHandler *self, SEL, id);
void __cdecl -[GADOpenerGMSGHandler didReceiveOpenNotification:](struct GADOpenerGMSGHandler *self, SEL, id);
void __cdecl -[GADOpenerGMSGHandler actionOpenInAppStore:](struct GADOpenerGMSGHandler *self, SEL, id);
void __cdecl -[GADOpenerGMSGHandler fetchInAppStore:](struct GADOpenerGMSGHandler *self, SEL, id);
void __cdecl -[GADOpenerGMSGHandler actionOpenInAppPurchase:](struct GADOpenerGMSGHandler *self, SEL, id);
void __cdecl -[GADOpenerGMSGHandler actionOpenBrowser:](struct GADOpenerGMSGHandler *self, SEL, id);
void __cdecl -[GADOpenerGMSGHandler actionOpenWebApp:](struct GADOpenerGMSGHandler *self, SEL, id);
void __cdecl -[GADOpenerGMSGHandler actionExpand:](struct GADOpenerGMSGHandler *self, SEL, id);
void __cdecl -[GADOpenerGMSGHandler actionOpenApp:](struct GADOpenerGMSGHandler *self, SEL, id);
id __cdecl -[GADOpenerGMSGHandler URLFromParams:](struct GADOpenerGMSGHandler *self, SEL, id);
unsigned int __cdecl -[GADOpenerGMSGHandler orientationFromParams:](struct GADOpenerGMSGHandler *self, SEL, id);
char __cdecl -[GADOpenerGMSGHandler shouldUseCustomClose:](struct GADOpenerGMSGHandler *self, SEL, id);
id __cdecl -[GADOpenerGMSGHandler opener](struct GADOpenerGMSGHandler *self, SEL);
void __cdecl -[GADOpenerGMSGHandler setOpener:](struct GADOpenerGMSGHandler *self, SEL, id);
void __cdecl -[GADOpenerGMSGHandler .cxx_destruct](struct GADOpenerGMSGHandler *self, SEL);
id __cdecl -[DFPCustomRenderedAd initWithAdHTML:adBaseURL:](struct DFPCustomRenderedAd *self, SEL, id, id);
id __cdecl -[DFPCustomRenderedAd init](struct DFPCustomRenderedAd *self, SEL);
void __cdecl -[DFPCustomRenderedAd recordClick](struct DFPCustomRenderedAd *self, SEL);
void __cdecl -[DFPCustomRenderedAd recordImpression](struct DFPCustomRenderedAd *self, SEL);
void __cdecl -[DFPCustomRenderedAd finishedRenderingAdView:](struct DFPCustomRenderedAd *self, SEL, id);
id __cdecl -[DFPCustomRenderedAd adHTML](struct DFPCustomRenderedAd *self, SEL);
id __cdecl -[DFPCustomRenderedAd adBaseURL](struct DFPCustomRenderedAd *self, SEL);
id __cdecl -[DFPCustomRenderedAd delegate](struct DFPCustomRenderedAd *self, SEL);
void __cdecl -[DFPCustomRenderedAd setDelegate:](struct DFPCustomRenderedAd *self, SEL, id);
void __cdecl -[DFPCustomRenderedAd .cxx_destruct](struct DFPCustomRenderedAd *self, SEL);
int __fastcall nullsub_94(_DWORD); // weak
void __cdecl -[GADAdLoader processMediatedNativeAd:withCompletionHandler:](struct GADAdLoader *self, SEL, id, id);
void __fastcall sub_2135A8(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_21361C(int a1, int a2);
void __fastcall sub_213654(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __fastcall sub_21367C(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[GADMRAIDResizeProperties initWithDictionary:](struct GADMRAIDResizeProperties *self, SEL, id);
int __fastcall sub_213C18(int a1, int a2);
id __cdecl +[GADMRAIDResizeProperties MRAIDResizePropertiesWithDictionary:](struct GADMRAIDResizeProperties *self, SEL, id);
struct CGRect *__cdecl +[GADMRAIDResizeProperties closeButtonRectForPosition:contentFrame:](struct CGRect *__return_ptr __struct_ptr retstr, struct GADMRAIDResizeProperties *self, SEL, int, struct CGRect);
unsigned int __cdecl +[GADMRAIDResizeProperties autoresizingMaskForClosePosition:](struct GADMRAIDResizeProperties *self, SEL, int);
char __cdecl +[GADMRAIDResizeProperties isContentFrameValid:forBounds:allowOffscreen:closeButtonPosition:](struct GADMRAIDResizeProperties *self, SEL, struct CGRect, struct CGRect, char, int);
struct CGSize __cdecl -[GADMRAIDResizeProperties size](struct GADMRAIDResizeProperties *self, SEL);
void __cdecl -[GADMRAIDResizeProperties setSize:](struct GADMRAIDResizeProperties *self, SEL, struct CGSize);
struct CGVector __cdecl -[GADMRAIDResizeProperties offset](struct GADMRAIDResizeProperties *self, SEL);
void __cdecl -[GADMRAIDResizeProperties setOffset:](struct GADMRAIDResizeProperties *self, SEL, struct CGVector);
int __cdecl -[GADMRAIDResizeProperties customClosePosition](struct GADMRAIDResizeProperties *self, SEL);
void __cdecl -[GADMRAIDResizeProperties setCustomClosePosition:](struct GADMRAIDResizeProperties *self, SEL, int);
char __cdecl -[GADMRAIDResizeProperties allowOffscreen](struct GADMRAIDResizeProperties *self, SEL);
void __cdecl -[GADMRAIDResizeProperties setAllowOffscreen:](struct GADMRAIDResizeProperties *self, SEL, char);
char *sub_214234();
id __cdecl -[GADExpandedAdAppViewController initWithAdView:](struct GADExpandedAdAppViewController *self, SEL, id);
void __cdecl -[GADExpandedAdAppViewController dealloc](struct GADExpandedAdAppViewController *self, SEL);
char __cdecl -[GADExpandedAdAppViewController isLoaded](struct GADExpandedAdAppViewController *self, SEL);
void __cdecl -[GADExpandedAdAppViewController configureView](struct GADExpandedAdAppViewController *self, SEL);
void __cdecl -[GADExpandedAdAppViewController relinquishScreenWithCompletion:](struct GADExpandedAdAppViewController *self, SEL, id);
void __cdecl -[GADExpandedAdAppViewController .cxx_destruct](struct GADExpandedAdAppViewController *self, SEL);
id __cdecl +[GADDevice sharedInstance](struct GADDevice_meta *self, SEL);
void __fastcall sub_214998(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[GADDevice init](struct GADDevice *self, SEL);
void __fastcall sub_214B2C(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_214BAC(int a1, int a2);
void __fastcall sub_214BB4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADDevice dealloc](struct GADDevice *self, SEL);
void __cdecl -[GADDevice cacheStaticParameters](struct GADDevice *self, SEL);
void __cdecl -[GADDevice updateDynamicParameters](struct GADDevice *self, SEL);
void __cdecl -[GADDevice updateOrientation](struct GADDevice *self, SEL);
int __fastcall sub_215200(int a1);
int __fastcall sub_21521C(int a1, int a2);
void __fastcall sub_215224(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADDevice updateBookstores](struct GADDevice *self, SEL);
int __fastcall sub_21544C(int a1);
int __fastcall sub_215468(int a1, int a2);
void __fastcall sub_215470(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADDevice enableRadioAccessTechnologyChecking](struct GADDevice *self, SEL);
void __fastcall sub_215534(int a1);
int __fastcall sub_21560C(int a1);
void __fastcall sub_2158F4(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_215968(int a1, int a2);
int __fastcall sub_215974(int a1);
int __fastcall sub_21597C(int a1, int a2);
void __fastcall sub_21599C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_2159BC(int a1, int a2);
void __fastcall sub_2159C4(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADDevice disableRadioAccessTechnologyChecking](struct GADDevice *self, SEL);
id __cdecl -[GADDevice parameters](struct GADDevice *self, SEL);
int __fastcall sub_2164D8(int a1);
int __fastcall sub_2164FC(int a1, int a2);
void __fastcall sub_216524(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[GADDevice baseSDKVersion](struct GADDevice *self, SEL);
void __fastcall sub_2165EC(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_21675C(int a1, int a2);
void __fastcall sub_216764(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __cdecl -[GADDevice updateOperatingSystemVersionProperties](struct GADDevice *self, SEL);
char __cdecl -[GADDevice isOSAtLeastMajor:minor:patch:](struct GADDevice *self, SEL, int, int, int);
char __cdecl -[GADDevice OSIsSupported](struct GADDevice *self, SEL);
id __cdecl -[GADDevice canOpenURLs:](struct GADDevice *self, SEL, id);
char __cdecl -[GADDevice limitAdTracking](struct GADDevice *self, SEL);
id __cdecl -[GADDevice limitAdTrackingString](struct GADDevice *self, SEL);
char __cdecl -[GADDevice jailbroken](struct GADDevice *self, SEL);
void __fastcall sub_216F78(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_216FFC(int a1, int a2);
void __fastcall sub_217004(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[GADDevice systemVersion](struct GADDevice *self, SEL);
id __cdecl -[GADDevice deviceIdentifier](struct GADDevice *self, SEL);
id __cdecl -[GADDevice deviceModel](struct GADDevice *self, SEL);
id __cdecl -[GADDevice deviceSubmodel](struct GADDevice *self, SEL);
int sub_217190();
float __cdecl -[GADDevice mainScreenDensity](struct GADDevice *self, SEL);
id __cdecl -[GADDevice locale](struct GADDevice *self, SEL);
int sub_217274();
int __cdecl -[GADDevice audioRoute](struct GADDevice *self, SEL);
char __cdecl -[GADDevice orientationLandscape](struct GADDevice *self, SEL);
void *__fastcall sub_217820(int a1);
int __fastcall sub_217834(int a1, int a2);
void __fastcall sub_21783C(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
int __fastcall sub_217844(int a1);
int __fastcall sub_217880(int a1, int a2);
void __fastcall sub_2178A8(int a1, int a2, int a3, int a4, struct objc_object *a5);
struct CGRect *__cdecl -[GADDevice standardizedPortraitScreenBounds](struct CGRect *__return_ptr __struct_ptr retstr, struct GADDevice *self, SEL);
struct CGRect *__cdecl -[GADDevice standardizedOrientedScreenBounds](struct CGRect *__return_ptr __struct_ptr retstr, struct GADDevice *self, SEL);
struct CGRect *__cdecl -[GADDevice standardizedOrientedApplicationFrame](struct CGRect *__return_ptr __struct_ptr retstr, struct GADDevice *self, SEL);
int __fastcall sub_217BB0(int a1);
int __fastcall sub_217BD4(int a1, int a2);
void __fastcall sub_217BFC(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[GADDevice lastKnownRadioAccessTechnology](struct GADDevice *self, SEL);
int __fastcall sub_217D04(int a1, int a2);
void __fastcall sub_217D18(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
void __fastcall sub_217D20(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_217D5C(int a1, int a2);
void __fastcall sub_217D84(int a1, int a2, int a3, int a4, struct objc_object *a5);
id __cdecl -[GADDevice radioAccessTechnology](struct GADDevice *self, SEL);
void __fastcall sub_217E8C(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_217EC8(int a1, int a2);
void __fastcall sub_217EF0(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[GADDevice setRadioAccessTechnology:](struct GADDevice *self, SEL, id);
void __fastcall sub_217FD4(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_218048(int a1, int a2);
void __fastcall sub_218068(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
id __cdecl -[GADDevice userAgentString](struct GADDevice *self, SEL);
void __fastcall sub_21816C(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_2181A8(int a1, int a2);
void __fastcall sub_2181D0(int a1, int a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[GADDevice setUserAgentString:](struct GADDevice *self, SEL, id);
void __fastcall sub_2182C8(int a1, int a2, int a3, int a4, struct objc_object *a5);
int __fastcall sub_218304(int a1, int a2);
void __fastcall sub_218324(int a1, void *a2, struct objc_object *a3, struct objc_object *a4, struct objc_object *a5);
char __cdecl -[GADDevice isSimulator](struct GADDevice *self, SEL);
id __cdecl -[GADDevice temporaryPathWithCreation:](struct GADDevice *self, SEL, char);
id __cdecl -[GADDevice network](struct GADDevice *self, SEL);
struct anon_struct_37 *__cdecl -[GADDevice operatingSystemVersion](struct anon_struct_37 *__return_ptr __struct_ptr retstr, struct GADDevice *self, SEL);
char __cdecl -[GADDevice canText](struct GADDevice *self, SEL);
char __cdecl -[GADDevice canMakePhoneCalls](struct GADDevice *self, SEL);
void __cdecl -[GADDevice .cxx_destruct](struct GADDevice *self, SEL);
id __cdecl +[GADAdAppGMSGHandler actionBlockDictionary](struct GADAdAppGMSGHandler_meta *self, SEL);
int sub_2185C0();
void __fastcall sub_2186C4(int a1, void *a2, int a3, int a4, struct objc_object *a5);
void __fastcall sub_218704(int a1, void *a2, int a3, int a4, struct objc_object *a5);
void __cdecl -[GADAdAppGMSGHandler configureCustomCloseButtonWithArguments:](struct GADAdAppGMSGHandler *self, SEL, id);
void __cdecl -[GADAdAppGMSGHandler updateInterstitialPropertiesWithArguments:](struct GADAdAppGMSGHandler *self, SEL, id);
void *__fastcall sub_218BDC(const void *a1, const void *a2, size_t a3, size_t a4);
void *__fastcall sub_218C2C(int a1, unsigned int a2, int a3);
void *__fastcall sub_218D30(int a1, unsigned int a2, unsigned int *a3);
void *__fastcall __spoils<R0,R2,R3,R12> sub_218E2C(const char *a1);
void *__fastcall sub_218EF0(int a1, int a2);
int __fastcall sub_218FC8(int a1, int a2, int a3, int a4, int a5, int a6);
void *__fastcall sub_219050(char *a1);
int __fastcall sub_219B34(int, char *, int, int, int); // idb
int __fastcall sub_219B8C(int a1, int a2);
void *__fastcall sub_219BB0(int a1, char *a2, char *a3);
char *__fastcall sub_219D00(int a1, int a2, int a3, signed int a4);
void *__fastcall sub_219F68(const char *a1, int a2);
char *__fastcall sub_21A05C(int a1, int a2, int a3, signed int a4);
void *__fastcall sub_21A2EC(const char *a1);
void *__fastcall sub_21A3A0(const char *a1, const char *a2, const char *a3);
void __cdecl +[__ARCLite__ load](struct __ARCLite___meta *self, SEL);
int __fastcall sub_21A948(int a1, int a2);
void *sub_21A9D0();
void *__fastcall sub_21A9F4(void *a1);
int __fastcall sub_21AA0C(int a1, int a2, unsigned int a3);
void *__fastcall sub_21ABAC(void *a1);
void *__fastcall sub_21ABC4(void *a1, int a2, int a3, void *a4);
void *__fastcall sub_21AC14(void *a1);
void *__fastcall sub_21AC2C(void *a1);
void *__fastcall sub_21AC44(void *a1);
void *__fastcall sub_21AC5C(void *a1, int a2, int a3, int a4);
int __fastcall sub_21AC88(int a1);
int __fastcall sub_21AE00(int a1, int a2, int a3);
int __fastcall sub_21AE44(int result, int a2, void *a3);
void *__fastcall sub_21AF28(const void *a1, int a2);
void *__fastcall sub_21B034(void *a1);
int sub_21B04C();
void *__fastcall sub_21B058(void *a1);
void *__fastcall sub_21B070(void *a1);
void *__fastcall sub_21B088(void *a1);
void *__fastcall sub_21B0B0(void *a1);
void *__fastcall sub_21B0C8(void *a1);
void *__fastcall sub_21B0F0(void *a1);
void *__fastcall sub_21B108(void *result, void *a2);
int __fastcall sub_21B140(int a1);
signed int __fastcall sub_21B388(int a1, int a2, int a3);
int (*__fastcall sub_21B3B4(int a1, int a2, int a3, int a4))();
int sub_21B3DC(); // weak
int sub_21B3F4(); // weak
int __fastcall sub_21B40C(int a1, int a2, int *a3);
int __fastcall sub_21B440(int a1, int a2, void *a3);
int __fastcall sub_21B48C(int a1, int a2, void *a3);
int __fastcall sub_21B4D8(int a1, int a2, void *a3);
int __fastcall sub_21B524(int a1, int a2, void *a3);
int __fastcall sub_21B56C(int a1, int a2, int a3, void *a4);
void *__fastcall sub_21B5B8(int a1, int a2, void *a3);
int __fastcall sub_21B6BC(int a1);
int __fastcall sub_21B944(int a1, int a2, int a3);
int __fastcall sub_21B9C0(int a1);
int __fastcall sub_21BA08(void *a1);
int __fastcall sub_21BA40(void *a1);
int __fastcall sub_21BA78(void *a1);
int __fastcall sub_21BAB0(void *a1);
int __fastcall sub_21BAE8(void *a1);
char *sub_21BB20();
char *sub_21BB3C();
int __fastcall sub_21BB58(int a1, int a2);
unsigned int __fastcall sub_21BBA4(int a1, int a2);
int __fastcall sub_21BC00(int a1, int a2);
int __fastcall sub_21BC30(int a1, int a2);
int nullsub_95(); // weak
void *__fastcall sub_21BC90(int a1, int a2);
char *__fastcall sub_21BCEC(void *a1, int a2);
char *__fastcall sub_21BDD8(char *a1, int a2);
int __fastcall sub_21BF30(unsigned int *a1, unsigned int a2, unsigned int *a3, int a4);
int sub_21BFE0(); // weak
int __fastcall sub_21BFE4(int a1);
void *__fastcall sub_21C000(void *a1);
id __fastcall j__objc_autoreleaseReturnValue(struct GADCachedFile *self, SEL r1_0, id r2_0, id r3_0, id arg0);
void __fastcall j__objc_release(int self, SEL r1_0, id r2_0, id r3_0, id arg0);
int __fastcall j__objc_retain(int a1, int a2);
int __fastcall j__objc_storeStrong(int a1, int a2);
int __fastcall j__objc_storeWeak(int a1, int a2);
int __fastcall j__objc_destroyWeak(int a1);
int __fastcall j__objc_getProperty(int a1, int a2, int a3, int a4);
int __fastcall j__objc_setProperty_nonatomic_copy(int a1, int a2, int a3, int a4);
int __fastcall j__objc_retainAutoreleaseReturnValue(int a1);
void *__fastcall j__objc_msgSend(int a1, int a2, int a3);
int __fastcall j___Block_object_assign(int a1, int a2, int a3);
int __fastcall j__objc_copyWeak(int a1, int a2);
int j___Block_copy();
int j___Block_release();
int j__SCNetworkReachabilityUnscheduleFromRunLoop();
int __fastcall j__dispatch_group_leave(int a1);
int __fastcall j___Block_object_dispose(int a1, int a2);
int __fastcall j__objc_setProperty_atomic_copy(int a1, int a2, int a3, int a4);
int __fastcall j__method_exchangeImplementations(int a1, int a2);
int j__objc_moveWeak();
int __fastcall j__objc_getAssociatedObject(int a1, int a2);
int __fastcall j__objc_setAssociatedObject(int a1, int a2, int a3, int a4);
int __fastcall j__CGContextStrokePath(int a1);
int __fastcall j__CGContextAddLines(int a1, int a2, int a3);
int __fastcall j__CFRelease(int a1);
int __fastcall j__dispatch_semaphore_signal(int a1);
int __fastcall j__dispatch_async(int a1, int a2);
int j__strcmp(const char *, const char *);
int __fastcall j____vsnprintf_chk(int a1, int a2, int a3, int a4);
void *j__realloc(void *, size_t);
int __fastcall j__objc_autoreleasePoolPop(int a1);
int j__objc_setProperty_atomic();
int __fastcall j__CGContextFillPath(int a1);
int __fastcall j__UIImageJPEGRepresentation(int a1, int a2);
int __fastcall j__CFRunLoopStop(int a1);
int __fastcall j__strndup(int a1, int a2);
void __fastcall plcrash::Flurry::async::async_list<plcrash_signal_user_callback>::nasync_append(OSSpinLock *a1, int a2, int a3);
void __fastcall plcrash::Flurry::async::async_list<plcrash_signal_user_callback>::nasync_prepend(OSSpinLock *a1, int a2, int a3);
void __fastcall plcrash::Flurry::async::async_list<plcrash_signal_user_callback>::nasync_remove_node(OSSpinLock *a1, int a2);
int __fastcall plcrash::Flurry::async::async_list<plcrash_signal_user_callback>::~async_list(int a1);
void __fastcall plcrash::Flurry::async::async_list<plcrash_signal_handler_action>::nasync_append(OSSpinLock *a1, int a2, int a3, int a4, int a5);
void __fastcall plcrash::Flurry::async::async_list<plcrash_signal_handler_action>::nasync_remove_node(OSSpinLock *a1, int a2);
int __fastcall plcrash::Flurry::async::async_list<plcrash_signal_handler_action>::~async_list(int a1);
int32_t __fastcall plcrash::Flurry::async::async_list<plcrash_async_image *>::set_reading(int a1, int a2);
void __fastcall plcrash::Flurry::async::async_list<plcrash_async_image *>::nasync_append(OSSpinLock *a1, int a2);
void __fastcall plcrash::Flurry::async::async_list<plcrash_async_image *>::nasync_remove_node(OSSpinLock *a1, int a2);